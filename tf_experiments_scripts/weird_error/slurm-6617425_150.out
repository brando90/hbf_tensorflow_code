I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:81:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:81:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', 'slurm-6617425_154.out', '1', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617425_13.out', 'test_print.py', 'om_f_8D_single_relu', 'slurm-6617425_27.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'os_walk_test', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'output.file', 'hp_gpu', 'slurm-6617425_21.out', 'my_tf_proj.egg-info', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.101099 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 50, train error: 0.0982365 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 100, train error: 0.098152 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 150, train error: 0.0978169 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 200, train error: 0.0978587 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 250, train error: 0.0981079 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 300, train error: 0.0984433 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 350, train error: 0.0987252 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 400, train error: 0.0990635 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 450, train error: 0.099207 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 500, train error: 0.0993463 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 550, train error: 0.0997147 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 600, train error: 0.099732 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 650, train error: 0.0996893 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 700, train error: 0.100117 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 750, train error: 0.100304 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 800, train error: 0.100708 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 850, train error: 0.100856 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 900, train error: 0.101224 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 950, train error: 0.102358 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1000, train error: 0.101932 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1050, train error: 0.10237 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1100, train error: 0.102652 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1150, train error: 0.103758 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1200, train error: 0.103369 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1250, train error: 0.104007 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1300, train error: 0.104356 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1350, train error: 0.104938 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1400, train error: 0.106627 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1450, train error: 0.105823 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1500, train error: 0.109324 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1550, train error: 0.106967 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1600, train error: 0.111149 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1650, train error: 0.116663 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1700, train error: 0.111926 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1750, train error: 0.11656 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1800, train error: 0.118445 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1850, train error: 0.119123 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1900, train error: 0.119128 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 1950, train error: 0.120587 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2000, train error: 0.122173 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2050, train error: 0.123385 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2100, train error: 0.123505 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2150, train error: 0.125465 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2200, train error: 0.125431 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2250, train error: 0.126789 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2300, train error: 0.12539 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2350, train error: 0.128399 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2400, train error: 0.128981 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2450, train error: 0.127304 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2500, train error: 0.1281 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2550, train error: 0.128083 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2600, train error: 0.128639 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2650, train error: 0.129589 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2700, train error: 0.129147 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2750, train error: 0.128211 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2800, train error: 0.13144 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2850, train error: 0.127453 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2900, train error: 0.129906 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 2950, train error: 0.12963 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3000, train error: 0.131866 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3050, train error: 0.131322 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3100, train error: 0.130755 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3150, train error: 0.130738 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3200, train error: 0.134084 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3250, train error: 0.131218 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3300, train error: 0.131765 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3350, train error: 0.133181 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3400, train error: 0.133703 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3450, train error: 0.132378 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3500, train error: 0.134995 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3550, train error: 0.136327 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3600, train error: 0.1335 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3650, train error: 0.135854 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3700, train error: 0.137255 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3750, train error: 0.135997 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3800, train error: 0.136356 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3850, train error: 0.136251 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3900, train error: 0.138476 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 3950, train error: 0.138062 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4000, train error: 0.137771 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4050, train error: 0.140189 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4100, train error: 0.136915 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4150, train error: 0.136504 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4200, train error: 0.141562 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4250, train error: 0.138635 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4300, train error: 0.139294 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4350, train error: 0.141428 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4400, train error: 0.138961 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4450, train error: 0.142284 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4500, train error: 0.139158 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4550, train error: 0.141411 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4600, train error: 0.139261 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4650, train error: 0.140844 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4700, train error: 0.142422 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4750, train error: 0.140547 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4800, train error: 0.142281 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4850, train error: 0.142528 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4900, train error: 0.142673 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 4950, train error: 0.143052 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5000, train error: 0.142223 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5050, train error: 0.143203 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5100, train error: 0.143111 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5150, train error: 0.144075 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5200, train error: 0.142492 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5250, train error: 0.144486 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5300, train error: 0.144033 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5350, train error: 0.14674 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5400, train error: 0.143199 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5450, train error: 0.145815 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5500, train error: 0.146165 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5550, train error: 0.145989 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5600, train error: 0.146422 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5650, train error: 0.146887 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5700, train error: 0.145421 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5750, train error: 0.145045 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5800, train error: 0.145629 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5850, train error: 0.148189 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5900, train error: 0.147063 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 5950, train error: 0.144805 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6000, train error: 0.149688 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6050, train error: 0.148983 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6100, train error: 0.147575 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6150, train error: 0.148995 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6200, train error: 0.149385 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6250, train error: 0.149879 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6300, train error: 0.149743 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6350, train error: 0.150125 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6400, train error: 0.150952 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6450, train error: 0.149406 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6500, train error: 0.15017 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6550, train error: 0.15189 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6600, train error: 0.150003 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6650, train error: 0.150389 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6700, train error: 0.153574 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6750, train error: 0.152973 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6800, train error: 0.151683 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6850, train error: 0.151166 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6900, train error: 0.151041 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 6950, train error: 0.150645 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7000, train error: 0.151979 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7050, train error: 0.153398 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7100, train error: 0.153633 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7150, train error: 0.154086 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7200, train error: 0.153288 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7250, train error: 0.15257 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7300, train error: 0.153025 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7350, train error: 0.152842 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7400, train error: 0.154131 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7450, train error: 0.1561 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7500, train error: 0.157032 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7550, train error: 0.154937 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7600, train error: 0.153028 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7650, train error: 0.153451 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7700, train error: 0.154371 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7750, train error: 0.156615 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7800, train error: 0.155257 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7850, train error: 0.155739 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7900, train error: 0.156743 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 7950, train error: 0.156793 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8000, train error: 0.157145 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8050, train error: 0.155222 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8100, train error: 0.154841 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8150, train error: 0.154911 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8200, train error: 0.153679 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8250, train error: 0.155068 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8300, train error: 0.15788 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8350, train error: 0.157155 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8400, train error: 0.15712 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8450, train error: 0.156959 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8500, train error: 0.157396 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8550, train error: 0.157576 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8600, train error: 0.158193 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8650, train error: 0.157953 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8700, train error: 0.158041 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8750, train error: 0.158567 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8800, train error: 0.158405 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8850, train error: 0.159584 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8900, train error: 0.159835 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 8950, train error: 0.16044 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9000, train error: 0.159508 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9050, train error: 0.159143 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9100, train error: 0.161023 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9150, train error: 0.160028 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9200, train error: 0.160098 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9250, train error: 0.159136 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9300, train error: 0.159821 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9350, train error: 0.16005 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9400, train error: 0.160318 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9450, train error: 0.159599 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9500, train error: 0.161724 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9550, train error: 0.161882 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9600, train error: 0.161547 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9650, train error: 0.161177 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9700, train error: 0.161993 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9750, train error: 0.16145 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9800, train error: 0.160189 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9850, train error: 0.159611 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9900, train error: 0.161801 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 9950, train error: 0.16238 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10000, train error: 0.162766 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10050, train error: 0.161335 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10100, train error: 0.161506 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10150, train error: 0.162688 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10200, train error: 0.162089 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10250, train error: 0.162088 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10300, train error: 0.161163 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10350, train error: 0.162645 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10400, train error: 0.161931 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10450, train error: 0.162582 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10500, train error: 0.162323 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10550, train error: 0.161891 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10600, train error: 0.162896 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10650, train error: 0.163204 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10700, train error: 0.161804 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10750, train error: 0.162925 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10800, train error: 0.162467 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10850, train error: 0.163871 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10900, train error: 0.163031 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 10950, train error: 0.163419 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11000, train error: 0.162558 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11050, train error: 0.163288 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11100, train error: 0.162153 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11150, train error: 0.163838 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11200, train error: 0.163397 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11250, train error: 0.162467 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11300, train error: 0.16385 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11350, train error: 0.16345 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11400, train error: 0.163709 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11450, train error: 0.163413 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11500, train error: 0.163745 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11550, train error: 0.163209 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11600, train error: 0.162946 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11650, train error: 0.165921 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11700, train error: 0.166544 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11750, train error: 0.165443 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11800, train error: 0.165321 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11850, train error: 0.164461 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11900, train error: 0.16339 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 11950, train error: 0.164054 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12000, train error: 0.163292 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12050, train error: 0.164463 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12100, train error: 0.165039 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12150, train error: 0.164889 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12200, train error: 0.164203 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12250, train error: 0.164677 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12300, train error: 0.164681 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12350, train error: 0.165583 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12400, train error: 0.166241 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12450, train error: 0.164424 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12500, train error: 0.163243 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12550, train error: 0.163609 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12600, train error: 0.165835 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12650, train error: 0.166904 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12700, train error: 0.165982 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12750, train error: 0.16465 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12800, train error: 0.165453 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12850, train error: 0.166012 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12900, train error: 0.165915 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 12950, train error: 0.165159 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13000, train error: 0.165487 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13050, train error: 0.166528 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13100, train error: 0.165725 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13150, train error: 0.165745 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13200, train error: 0.166057 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13250, train error: 0.165566 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13300, train error: 0.167512 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13350, train error: 0.165248 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13400, train error: 0.166259 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13450, train error: 0.16598 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13500, train error: 0.16715 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13550, train error: 0.166761 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13600, train error: 0.167026 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13650, train error: 0.167584 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13700, train error: 0.166642 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13750, train error: 0.167388 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13800, train error: 0.16715 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13850, train error: 0.167115 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13900, train error: 0.168758 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 13950, train error: 0.16688 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14000, train error: 0.167447 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14050, train error: 0.166776 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14100, train error: 0.166911 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14150, train error: 0.167237 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14200, train error: 0.168042 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14250, train error: 0.167644 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14300, train error: 0.167914 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14350, train error: 0.166993 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14400, train error: 0.169229 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14450, train error: 0.165958 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14500, train error: 0.168654 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14550, train error: 0.169007 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14600, train error: 0.16639 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14650, train error: 0.168912 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14700, train error: 0.166482 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14750, train error: 0.168645 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14800, train error: 0.167663 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14850, train error: 0.167707 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14900, train error: 0.168746 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 14950, train error: 0.167964 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15000, train error: 0.168105 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15050, train error: 0.168514 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15100, train error: 0.168683 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15150, train error: 0.168234 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15200, train error: 0.169725 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15250, train error: 0.169035 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15300, train error: 0.16816 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15350, train error: 0.169437 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15400, train error: 0.16891 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15450, train error: 0.16899 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15500, train error: 0.169563 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15550, train error: 0.167618 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15600, train error: 0.169386 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15650, train error: 0.169065 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15700, train error: 0.168614 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15750, train error: 0.169917 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15800, train error: 0.16923 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15850, train error: 0.16966 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15900, train error: 0.169659 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 15950, train error: 0.169244 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16000, train error: 0.170796 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16050, train error: 0.168845 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16100, train error: 0.171163 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16150, train error: 0.169206 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16200, train error: 0.170425 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16250, train error: 0.169938 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16300, train error: 0.170115 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16350, train error: 0.170682 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16400, train error: 0.16984 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16450, train error: 0.171734 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16500, train error: 0.170284 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16550, train error: 0.170892 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16600, train error: 0.171067 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16650, train error: 0.169661 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16700, train error: 0.172171 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16750, train error: 0.170718 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16800, train error: 0.171079 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16850, train error: 0.17041 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16900, train error: 0.17181 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 16950, train error: 0.170425 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17000, train error: 0.17105 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17050, train error: 0.171163 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17100, train error: 0.171368 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17150, train error: 0.170825 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17200, train error: 0.171684 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17250, train error: 0.170559 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17300, train error: 0.17081 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17350, train error: 0.170082 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17400, train error: 0.172757 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17450, train error: 0.170903 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17500, train error: 0.171554 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17550, train error: 0.171502 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17600, train error: 0.17296 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17650, train error: 0.171556 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17700, train error: 0.172544 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17750, train error: 0.171877 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17800, train error: 0.172362 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17850, train error: 0.171576 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17900, train error: 0.172538 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 17950, train error: 0.171923 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18000, train error: 0.171074 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18050, train error: 0.172287 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18100, train error: 0.172332 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18150, train error: 0.172872 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18200, train error: 0.172091 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18250, train error: 0.173525 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18300, train error: 0.172117 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18350, train error: 0.172987 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18400, train error: 0.172898 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18450, train error: 0.171154 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18500, train error: 0.172476 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18550, train error: 0.173168 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18600, train error: 0.171278 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18650, train error: 0.173512 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18700, train error: 0.172358 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18750, train error: 0.172739 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18800, train error: 0.172789 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18850, train error: 0.172717 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18900, train error: 0.173467 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 18950, train error: 0.172511 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19000, train error: 0.172777 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19050, train error: 0.173499 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19100, train error: 0.172745 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19150, train error: 0.172361 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19200, train error: 0.173048 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19250, train error: 0.172899 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19300, train error: 0.173677 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19350, train error: 0.173875 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19400, train error: 0.173198 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19450, train error: 0.173303 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19500, train error: 0.17287 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19550, train error: 0.172995 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19600, train error: 0.173133 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19650, train error: 0.173006 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19700, train error: 0.173057 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19750, train error: 0.172751 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19800, train error: 0.172892 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19850, train error: 0.173641 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19900, train error: 0.173494 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 19950, train error: 0.174101 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20000, train error: 0.173935 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20050, train error: 0.1741 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20100, train error: 0.173328 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20150, train error: 0.173123 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20200, train error: 0.173214 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20250, train error: 0.173093 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20300, train error: 0.172647 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20350, train error: 0.173575 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20400, train error: 0.172976 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20450, train error: 0.17349 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20500, train error: 0.174687 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20550, train error: 0.173812 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20600, train error: 0.172957 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20650, train error: 0.173275 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20700, train error: 0.173807 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20750, train error: 0.174012 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20800, train error: 0.17434 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20850, train error: 0.173938 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20900, train error: 0.17368 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 20950, train error: 0.173742 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21000, train error: 0.173242 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21050, train error: 0.173429 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21100, train error: 0.173914 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21150, train error: 0.174584 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21200, train error: 0.174499 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21250, train error: 0.17465 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21300, train error: 0.17328 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21350, train error: 0.173017 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21400, train error: 0.1738 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21450, train error: 0.17424 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21500, train error: 0.174307 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21550, train error: 0.17375 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21600, train error: 0.173879 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21650, train error: 0.173918 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21700, train error: 0.173793 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21750, train error: 0.173755 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21800, train error: 0.173426 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21850, train error: 0.173423 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21900, train error: 0.174084 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 21950, train error: 0.173946 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22000, train error: 0.174394 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22050, train error: 0.174835 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22100, train error: 0.174623 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22150, train error: 0.174937 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22200, train error: 0.174839 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22250, train error: 0.174553 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22300, train error: 0.174518 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22350, train error: 0.173981 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22400, train error: 0.174374 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22450, train error: 0.174615 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22500, train error: 0.174538 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22550, train error: 0.17471 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22600, train error: 0.175047 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22650, train error: 0.174757 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22700, train error: 0.175324 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22750, train error: 0.175254 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22800, train error: 0.174856 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22850, train error: 0.17446 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22900, train error: 0.173974 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 22950, train error: 0.172922 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23000, train error: 0.174654 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23050, train error: 0.175035 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23100, train error: 0.175407 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23150, train error: 0.174872 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23200, train error: 0.174325 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23250, train error: 0.17414 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23300, train error: 0.175235 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23350, train error: 0.175622 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23400, train error: 0.174775 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23450, train error: 0.173879 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23500, train error: 0.173963 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23550, train error: 0.174914 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23600, train error: 0.175716 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23650, train error: 0.17485 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23700, train error: 0.173579 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23750, train error: 0.174702 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23800, train error: 0.174938 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23850, train error: 0.175252 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23900, train error: 0.174586 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 23950, train error: 0.173744 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24000, train error: 0.175572 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24050, train error: 0.175418 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24100, train error: 0.174906 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24150, train error: 0.174864 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24200, train error: 0.17482 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24250, train error: 0.174797 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24300, train error: 0.174815 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24350, train error: 0.174629 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24400, train error: 0.174453 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24450, train error: 0.175802 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24500, train error: 0.175009 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24550, train error: 0.175245 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24600, train error: 0.175872 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24650, train error: 0.174732 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24700, train error: 0.174791 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24750, train error: 0.175006 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24800, train error: 0.174713 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24850, train error: 0.175324 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24900, train error: 0.175018 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 24950, train error: 0.17538 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25000, train error: 0.175126 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25050, train error: 0.17509 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25100, train error: 0.17504 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25150, train error: 0.175105 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25200, train error: 0.17395 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25250, train error: 0.174969 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25300, train error: 0.175588 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25350, train error: 0.17552 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25400, train error: 0.175733 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25450, train error: 0.175618 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25500, train error: 0.175631 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25550, train error: 0.175574 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25600, train error: 0.17547 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25650, train error: 0.175587 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25700, train error: 0.175617 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25750, train error: 0.17575 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25800, train error: 0.175809 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25850, train error: 0.175216 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25900, train error: 0.175901 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 25950, train error: 0.175658 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26000, train error: 0.175657 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26050, train error: 0.175449 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26100, train error: 0.175304 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26150, train error: 0.17554 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26200, train error: 0.175907 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26250, train error: 0.175784 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26300, train error: 0.176348 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26350, train error: 0.176663 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26400, train error: 0.176807 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
step 26450, train error: 0.176159 | batch_size(step.eval(),arg.batch_size): 4076,4076 log_learning_rate: -2.7776576778817454 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6623658/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units5_Adam/hp_stid_150/mdl_ckpt.meta.tmpe095e645c00c4214a9a6f7eda257eff3
