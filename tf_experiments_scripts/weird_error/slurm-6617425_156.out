I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: Tesla K20m
major: 3 minor: 5 memoryClockRate (GHz) 0.7055
pciBusID 0000:02:00.0
Total memory: 4.66GiB
Free memory: 4.59GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', 'slurm-6617425_154.out', '1', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617425_13.out', 'test_print.py', 'om_f_8D_single_relu', 'slurm-6617425_27.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'os_walk_test', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'output.file', 'hp_gpu', 'slurm-6617425_21.out', 'my_tf_proj.egg-info', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.100516 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 50, train error: 0.0979413 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 100, train error: 0.0978218 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 150, train error: 0.0977778 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 200, train error: 0.0976166 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 250, train error: 0.0974858 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 300, train error: 0.0974634 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 350, train error: 0.0974539 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 400, train error: 0.0974878 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 450, train error: 0.0975308 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 500, train error: 0.0975367 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 550, train error: 0.0975545 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 600, train error: 0.0975484 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 650, train error: 0.0975849 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 700, train error: 0.0975923 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 750, train error: 0.0976263 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 800, train error: 0.0976412 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 850, train error: 0.0976746 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 900, train error: 0.0977014 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 950, train error: 0.0977239 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1000, train error: 0.0977597 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1050, train error: 0.0977879 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1100, train error: 0.0978198 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1150, train error: 0.0978504 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1200, train error: 0.0978984 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1250, train error: 0.0979337 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1300, train error: 0.0978995 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1350, train error: 0.0979027 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1400, train error: 0.0979597 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1450, train error: 0.0979782 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1500, train error: 0.0980415 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1550, train error: 0.0981348 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1600, train error: 0.0981128 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1650, train error: 0.0981643 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1700, train error: 0.0981776 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1750, train error: 0.098158 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1800, train error: 0.098185 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1850, train error: 0.0981916 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1900, train error: 0.0982228 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 1950, train error: 0.0982301 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2000, train error: 0.0982648 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2050, train error: 0.0982598 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2100, train error: 0.0982736 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2150, train error: 0.0982981 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2200, train error: 0.0983675 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2250, train error: 0.0983748 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2300, train error: 0.0983625 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2350, train error: 0.0984493 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2400, train error: 0.0984563 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2450, train error: 0.0984424 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2500, train error: 0.0984704 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2550, train error: 0.0985445 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2600, train error: 0.0985964 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2650, train error: 0.0986257 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2700, train error: 0.0986992 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2750, train error: 0.0987244 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2800, train error: 0.0988113 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2850, train error: 0.0987949 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2900, train error: 0.0988808 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 2950, train error: 0.0989244 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3000, train error: 0.0989752 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3050, train error: 0.0989766 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3100, train error: 0.0990377 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3150, train error: 0.0990437 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3200, train error: 0.0990745 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3250, train error: 0.0991199 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3300, train error: 0.0991772 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3350, train error: 0.0992906 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3400, train error: 0.0992831 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3450, train error: 0.0993314 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3500, train error: 0.0993863 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3550, train error: 0.0994028 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3600, train error: 0.0994765 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3650, train error: 0.0994664 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3700, train error: 0.099528 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3750, train error: 0.0995366 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3800, train error: 0.0996057 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3850, train error: 0.0996536 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3900, train error: 0.0996958 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 3950, train error: 0.0997752 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4000, train error: 0.0998558 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4050, train error: 0.0998405 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4100, train error: 0.0998939 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4150, train error: 0.100006 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4200, train error: 0.0999721 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4250, train error: 0.100032 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4300, train error: 0.0999833 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4350, train error: 0.100103 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4400, train error: 0.100063 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4450, train error: 0.100081 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4500, train error: 0.100116 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4550, train error: 0.100167 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4600, train error: 0.100194 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4650, train error: 0.100213 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4700, train error: 0.100236 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4750, train error: 0.100264 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4800, train error: 0.100318 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4850, train error: 0.100312 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4900, train error: 0.100365 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 4950, train error: 0.100435 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5000, train error: 0.100449 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5050, train error: 0.100464 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5100, train error: 0.100517 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5150, train error: 0.100519 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5200, train error: 0.100628 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5250, train error: 0.100568 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5300, train error: 0.100585 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5350, train error: 0.100673 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5400, train error: 0.100659 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5450, train error: 0.10063 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5500, train error: 0.100678 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5550, train error: 0.10076 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5600, train error: 0.100753 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5650, train error: 0.100729 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5700, train error: 0.100732 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5750, train error: 0.100789 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5800, train error: 0.100788 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5850, train error: 0.100835 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5900, train error: 0.100827 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 5950, train error: 0.100819 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6000, train error: 0.100923 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6050, train error: 0.100895 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6100, train error: 0.100871 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6150, train error: 0.100865 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6200, train error: 0.100894 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6250, train error: 0.100923 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6300, train error: 0.100948 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6350, train error: 0.100924 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6400, train error: 0.100969 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6450, train error: 0.100987 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6500, train error: 0.101009 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6550, train error: 0.101008 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6600, train error: 0.100995 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6650, train error: 0.101035 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6700, train error: 0.101018 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6750, train error: 0.101076 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6800, train error: 0.101121 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6850, train error: 0.101039 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6900, train error: 0.101041 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 6950, train error: 0.101101 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7000, train error: 0.101056 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7050, train error: 0.10102 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7100, train error: 0.101116 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7150, train error: 0.101089 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7200, train error: 0.101094 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7250, train error: 0.101153 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7300, train error: 0.101209 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7350, train error: 0.10118 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7400, train error: 0.101193 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7450, train error: 0.10126 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7500, train error: 0.10121 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7550, train error: 0.101236 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7600, train error: 0.101228 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7650, train error: 0.101222 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7700, train error: 0.101215 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7750, train error: 0.101207 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7800, train error: 0.101233 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7850, train error: 0.101224 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7900, train error: 0.101225 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 7950, train error: 0.101236 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8000, train error: 0.101304 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8050, train error: 0.101293 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8100, train error: 0.101275 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8150, train error: 0.101255 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8200, train error: 0.101351 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8250, train error: 0.101311 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8300, train error: 0.101251 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8350, train error: 0.101302 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8400, train error: 0.101337 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8450, train error: 0.101335 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8500, train error: 0.101287 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8550, train error: 0.10134 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8600, train error: 0.101377 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8650, train error: 0.101363 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8700, train error: 0.101338 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8750, train error: 0.10136 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8800, train error: 0.101366 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8850, train error: 0.101387 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8900, train error: 0.1014 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 8950, train error: 0.101392 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9000, train error: 0.101373 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9050, train error: 0.101404 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9100, train error: 0.101456 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9150, train error: 0.101504 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9200, train error: 0.101523 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9250, train error: 0.101521 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9300, train error: 0.101521 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9350, train error: 0.101513 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9400, train error: 0.101495 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9450, train error: 0.101498 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9500, train error: 0.101477 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9550, train error: 0.101515 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9600, train error: 0.1015 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9650, train error: 0.101536 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9700, train error: 0.101554 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9750, train error: 0.101553 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9800, train error: 0.101558 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9850, train error: 0.101526 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9900, train error: 0.101543 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 9950, train error: 0.101559 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10000, train error: 0.101568 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10050, train error: 0.101539 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10100, train error: 0.101546 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10150, train error: 0.1016 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10200, train error: 0.101553 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10250, train error: 0.101543 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10300, train error: 0.101589 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10350, train error: 0.101619 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10400, train error: 0.101651 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10450, train error: 0.10163 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10500, train error: 0.101617 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10550, train error: 0.101623 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10600, train error: 0.101666 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10650, train error: 0.101685 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10700, train error: 0.101683 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10750, train error: 0.101627 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10800, train error: 0.101622 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10850, train error: 0.101604 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10900, train error: 0.101627 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 10950, train error: 0.1017 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11000, train error: 0.101709 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11050, train error: 0.101705 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11100, train error: 0.101667 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11150, train error: 0.101742 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11200, train error: 0.101789 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11250, train error: 0.101727 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11300, train error: 0.101704 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11350, train error: 0.101741 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11400, train error: 0.101728 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11450, train error: 0.101756 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11500, train error: 0.101751 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11550, train error: 0.10174 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11600, train error: 0.101783 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11650, train error: 0.101774 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11700, train error: 0.101774 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11750, train error: 0.1018 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11800, train error: 0.101818 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11850, train error: 0.101819 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11900, train error: 0.101825 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 11950, train error: 0.101818 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12000, train error: 0.101805 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12050, train error: 0.101805 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12100, train error: 0.101828 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12150, train error: 0.101816 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12200, train error: 0.101831 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12250, train error: 0.101831 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12300, train error: 0.101818 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12350, train error: 0.101829 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12400, train error: 0.101812 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12450, train error: 0.101816 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12500, train error: 0.101817 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12550, train error: 0.10184 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12600, train error: 0.101848 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12650, train error: 0.10184 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12700, train error: 0.101856 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12750, train error: 0.101855 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12800, train error: 0.101849 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12850, train error: 0.101883 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12900, train error: 0.101887 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 12950, train error: 0.101876 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13000, train error: 0.101862 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13050, train error: 0.101874 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13100, train error: 0.101856 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13150, train error: 0.101879 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13200, train error: 0.101903 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13250, train error: 0.101893 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13300, train error: 0.101887 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13350, train error: 0.101873 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13400, train error: 0.101896 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13450, train error: 0.101907 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13500, train error: 0.101916 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13550, train error: 0.101902 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13600, train error: 0.101925 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13650, train error: 0.10193 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13700, train error: 0.10195 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13750, train error: 0.101923 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13800, train error: 0.101929 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13850, train error: 0.101905 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13900, train error: 0.101946 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 13950, train error: 0.101952 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14000, train error: 0.101982 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14050, train error: 0.101972 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14100, train error: 0.101959 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14150, train error: 0.101955 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14200, train error: 0.101979 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14250, train error: 0.101964 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14300, train error: 0.101967 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14350, train error: 0.101977 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14400, train error: 0.101997 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14450, train error: 0.10199 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14500, train error: 0.102001 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14550, train error: 0.101986 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14600, train error: 0.10197 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14650, train error: 0.10197 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14700, train error: 0.10198 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14750, train error: 0.102013 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14800, train error: 0.102014 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14850, train error: 0.101985 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14900, train error: 0.101992 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 14950, train error: 0.101995 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15000, train error: 0.101995 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15050, train error: 0.101986 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15100, train error: 0.101969 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15150, train error: 0.101969 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15200, train error: 0.101992 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15250, train error: 0.101974 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15300, train error: 0.10197 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15350, train error: 0.101968 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15400, train error: 0.101962 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15450, train error: 0.101954 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15500, train error: 0.101949 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15550, train error: 0.101959 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15600, train error: 0.101977 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15650, train error: 0.101986 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15700, train error: 0.101979 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15750, train error: 0.101978 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15800, train error: 0.101988 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15850, train error: 0.101976 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15900, train error: 0.102003 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 15950, train error: 0.102022 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16000, train error: 0.10204 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16050, train error: 0.102017 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16100, train error: 0.102018 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16150, train error: 0.102021 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16200, train error: 0.102035 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16250, train error: 0.102041 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16300, train error: 0.102028 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16350, train error: 0.102019 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16400, train error: 0.102044 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16450, train error: 0.102047 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16500, train error: 0.102077 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16550, train error: 0.102067 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16600, train error: 0.102079 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16650, train error: 0.10205 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16700, train error: 0.102067 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16750, train error: 0.102067 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16800, train error: 0.102077 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16850, train error: 0.102078 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16900, train error: 0.102057 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 16950, train error: 0.102046 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17000, train error: 0.102034 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17050, train error: 0.102045 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17100, train error: 0.102037 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17150, train error: 0.102038 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17200, train error: 0.102056 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17250, train error: 0.102029 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17300, train error: 0.102038 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17350, train error: 0.102044 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17400, train error: 0.102067 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17450, train error: 0.102068 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17500, train error: 0.102057 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17550, train error: 0.102051 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17600, train error: 0.102056 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17650, train error: 0.102047 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17700, train error: 0.102053 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17750, train error: 0.102066 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17800, train error: 0.102062 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17850, train error: 0.102055 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17900, train error: 0.102061 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 17950, train error: 0.102065 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18000, train error: 0.102078 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18050, train error: 0.102071 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18100, train error: 0.10207 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18150, train error: 0.102073 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18200, train error: 0.102068 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18250, train error: 0.102071 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18300, train error: 0.102076 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18350, train error: 0.102078 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18400, train error: 0.102082 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18450, train error: 0.102074 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18500, train error: 0.102066 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18550, train error: 0.102057 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18600, train error: 0.102066 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18650, train error: 0.102065 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18700, train error: 0.102072 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18750, train error: 0.102084 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18800, train error: 0.102083 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18850, train error: 0.102088 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18900, train error: 0.102093 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 18950, train error: 0.102094 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19000, train error: 0.102086 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19050, train error: 0.102082 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19100, train error: 0.102083 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19150, train error: 0.102093 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19200, train error: 0.102085 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19250, train error: 0.10208 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19300, train error: 0.102073 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19350, train error: 0.102072 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19400, train error: 0.102083 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19450, train error: 0.102083 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19500, train error: 0.102085 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
step 19550, train error: 0.102081 | batch_size(step.eval(),arg.batch_size): 5441,5441 log_learning_rate: -3.6868400035381073 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6623664/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units5_Adam/hp_stid_156/mdl_ckpt.meta.tmp65e5ea0dad294541a7ecf65fc13614fc
