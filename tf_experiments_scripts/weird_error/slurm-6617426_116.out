I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:06:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:06:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'slurm-6617426_60.out', 'slurm-6617426_66.out', 'slurm-6617426_117.out', 'slurm-6617426_54.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', 'slurm-6617425_154.out', '1', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'slurm-6617426_65.out', 'slurm-6617426_56.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'slurm-6617426_70.out', 'slurm-6617426_74.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617426_12.out', 'slurm-6617425_13.out', 'test_print.py', 'slurm-6617426_123.out', 'slurm-6617426_115.out', 'om_f_8D_single_relu', 'slurm-6617426_116.out', 'slurm-6617426_73.out', 'slurm-6617425_27.out', 'slurm-6617426_53.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'slurm-6617426_62.out', 'slurm-6617426_121.out', 'slurm-6617426_122.out', 'slurm-6617426_119.out', 'slurm-6617426_69.out', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'slurm-6617426_68.out', 'os_walk_test', 'slurm-6617426_72.out', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617426_71.out', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'slurm-6617426_57.out', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'slurm-6617426_52.out', 'slurm-6617426_58.out', 'output.file', 'slurm-6617426_124.out', 'hp_gpu', 'slurm-6617425_21.out', 'slurm-6617425_167.out', 'my_tf_proj.egg-info', 'slurm-6617426_120.out', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617426_63.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617426_64.out', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617426_67.out', 'slurm-6617426_59.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'slurm-6617426_61.out', 'slurm-6617426_118.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617426_55.out', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.110976 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 50, train error: 0.0981519 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 100, train error: 0.09795 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 150, train error: 0.0976767 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 200, train error: 0.0974469 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 250, train error: 0.0973572 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 300, train error: 0.0973669 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 350, train error: 0.0974359 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 400, train error: 0.0975299 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 450, train error: 0.0975929 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 500, train error: 0.0976126 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 550, train error: 0.0976907 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 600, train error: 0.0977349 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 650, train error: 0.0977804 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 700, train error: 0.0978115 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 750, train error: 0.097825 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 800, train error: 0.0978692 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 850, train error: 0.0978698 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 900, train error: 0.0979028 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 950, train error: 0.0979681 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1000, train error: 0.0980471 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1050, train error: 0.0980385 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1100, train error: 0.0981689 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1150, train error: 0.0980967 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1200, train error: 0.0981312 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1250, train error: 0.0980337 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1300, train error: 0.0983124 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1350, train error: 0.097825 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1400, train error: 0.0982057 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1450, train error: 0.0992612 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1500, train error: 0.0991185 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1550, train error: 0.0989285 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1600, train error: 0.0988753 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1650, train error: 0.09832 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1700, train error: 0.0988917 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1750, train error: 0.0989476 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1800, train error: 0.0992479 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1850, train error: 0.0981933 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1900, train error: 0.0980285 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 1950, train error: 0.0979756 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2000, train error: 0.0984463 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2050, train error: 0.0984096 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2100, train error: 0.098665 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2150, train error: 0.0987216 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2200, train error: 0.0990066 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2250, train error: 0.0991617 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2300, train error: 0.0989073 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2350, train error: 0.0987359 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2400, train error: 0.0999744 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2450, train error: 0.0996933 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2500, train error: 0.0991471 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2550, train error: 0.0995049 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2600, train error: 0.099259 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2650, train error: 0.09952 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2700, train error: 0.100284 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2750, train error: 0.099878 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2800, train error: 0.100501 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2850, train error: 0.100205 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2900, train error: 0.10095 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 2950, train error: 0.10128 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3000, train error: 0.100442 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3050, train error: 0.100783 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3100, train error: 0.102278 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3150, train error: 0.100699 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3200, train error: 0.100215 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3250, train error: 0.100107 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3300, train error: 0.100998 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3350, train error: 0.100987 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3400, train error: 0.101419 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3450, train error: 0.103064 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3500, train error: 0.101569 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3550, train error: 0.102149 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3600, train error: 0.102102 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3650, train error: 0.102104 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3700, train error: 0.103873 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3750, train error: 0.102728 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3800, train error: 0.103279 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3850, train error: 0.103281 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3900, train error: 0.103212 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 3950, train error: 0.103303 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4000, train error: 0.102875 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4050, train error: 0.103209 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4100, train error: 0.103421 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4150, train error: 0.103907 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4200, train error: 0.10342 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4250, train error: 0.104452 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4300, train error: 0.104726 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4350, train error: 0.105166 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4400, train error: 0.104539 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4450, train error: 0.104359 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4500, train error: 0.103437 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4550, train error: 0.104355 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4600, train error: 0.1043 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4650, train error: 0.104106 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4700, train error: 0.104458 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4750, train error: 0.104184 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4800, train error: 0.104786 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4850, train error: 0.104898 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4900, train error: 0.104708 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 4950, train error: 0.104489 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5000, train error: 0.105208 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5050, train error: 0.105035 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5100, train error: 0.105689 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5150, train error: 0.105208 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5200, train error: 0.105706 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5250, train error: 0.106148 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5300, train error: 0.105517 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5350, train error: 0.106864 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5400, train error: 0.105986 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5450, train error: 0.106891 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5500, train error: 0.107073 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5550, train error: 0.106322 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5600, train error: 0.106463 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5650, train error: 0.106858 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5700, train error: 0.107677 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5750, train error: 0.10805 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5800, train error: 0.108208 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5850, train error: 0.107097 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5900, train error: 0.107933 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 5950, train error: 0.108015 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6000, train error: 0.107335 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6050, train error: 0.108627 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6100, train error: 0.108696 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6150, train error: 0.108434 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6200, train error: 0.107996 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6250, train error: 0.108445 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6300, train error: 0.108419 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6350, train error: 0.109145 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6400, train error: 0.108381 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6450, train error: 0.108974 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6500, train error: 0.108919 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6550, train error: 0.109092 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6600, train error: 0.108968 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6650, train error: 0.109133 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6700, train error: 0.108967 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6750, train error: 0.1094 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6800, train error: 0.108981 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6850, train error: 0.109466 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6900, train error: 0.109895 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 6950, train error: 0.109694 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7000, train error: 0.110279 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7050, train error: 0.109167 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7100, train error: 0.109268 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7150, train error: 0.109727 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7200, train error: 0.109932 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7250, train error: 0.11 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7300, train error: 0.110251 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7350, train error: 0.110321 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7400, train error: 0.110621 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7450, train error: 0.110423 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7500, train error: 0.110348 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7550, train error: 0.110193 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7600, train error: 0.110825 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7650, train error: 0.111046 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7700, train error: 0.111079 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7750, train error: 0.111414 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7800, train error: 0.110917 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7850, train error: 0.111514 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7900, train error: 0.110669 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 7950, train error: 0.111563 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8000, train error: 0.111575 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8050, train error: 0.111473 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8100, train error: 0.111192 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8150, train error: 0.111714 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8200, train error: 0.111768 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8250, train error: 0.111856 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8300, train error: 0.112047 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8350, train error: 0.111749 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8400, train error: 0.111928 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8450, train error: 0.111828 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8500, train error: 0.112244 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8550, train error: 0.112359 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8600, train error: 0.112118 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8650, train error: 0.111932 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8700, train error: 0.112373 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8750, train error: 0.111965 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8800, train error: 0.112455 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8850, train error: 0.112264 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8900, train error: 0.112604 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 8950, train error: 0.112414 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9000, train error: 0.112306 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9050, train error: 0.112297 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9100, train error: 0.112242 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9150, train error: 0.112307 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9200, train error: 0.112428 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9250, train error: 0.112226 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9300, train error: 0.112349 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9350, train error: 0.112528 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9400, train error: 0.112568 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9450, train error: 0.112494 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9500, train error: 0.112781 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9550, train error: 0.112684 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9600, train error: 0.113056 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9650, train error: 0.113151 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9700, train error: 0.113243 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9750, train error: 0.113253 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9800, train error: 0.112333 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9850, train error: 0.112316 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9900, train error: 0.112331 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 9950, train error: 0.112513 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10000, train error: 0.113357 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10050, train error: 0.113646 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10100, train error: 0.112685 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10150, train error: 0.113126 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10200, train error: 0.112989 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10250, train error: 0.112776 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10300, train error: 0.112983 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10350, train error: 0.112763 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10400, train error: 0.112926 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10450, train error: 0.112891 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10500, train error: 0.113083 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10550, train error: 0.113162 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10600, train error: 0.113159 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10650, train error: 0.113486 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10700, train error: 0.113411 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10750, train error: 0.113063 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10800, train error: 0.113479 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10850, train error: 0.113415 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10900, train error: 0.113301 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 10950, train error: 0.113553 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11000, train error: 0.113411 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11050, train error: 0.113585 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11100, train error: 0.113463 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11150, train error: 0.113668 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11200, train error: 0.11355 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11250, train error: 0.113551 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11300, train error: 0.113659 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11350, train error: 0.113554 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11400, train error: 0.113744 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11450, train error: 0.113887 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11500, train error: 0.113746 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11550, train error: 0.113944 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11600, train error: 0.113494 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11650, train error: 0.113719 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11700, train error: 0.113841 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11750, train error: 0.11359 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11800, train error: 0.113864 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11850, train error: 0.113735 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11900, train error: 0.113796 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 11950, train error: 0.113795 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12000, train error: 0.114269 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12050, train error: 0.11418 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12100, train error: 0.114332 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12150, train error: 0.114133 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12200, train error: 0.113914 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12250, train error: 0.113989 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12300, train error: 0.114106 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12350, train error: 0.113969 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12400, train error: 0.113973 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12450, train error: 0.114018 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12500, train error: 0.114046 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12550, train error: 0.114131 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12600, train error: 0.11419 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12650, train error: 0.11427 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12700, train error: 0.114169 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12750, train error: 0.114152 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12800, train error: 0.114258 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12850, train error: 0.114319 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12900, train error: 0.114293 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 12950, train error: 0.114335 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13000, train error: 0.114364 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13050, train error: 0.114341 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13100, train error: 0.114185 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13150, train error: 0.114186 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13200, train error: 0.114417 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13250, train error: 0.114369 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13300, train error: 0.114255 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13350, train error: 0.114215 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13400, train error: 0.114307 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13450, train error: 0.114393 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13500, train error: 0.114397 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13550, train error: 0.114299 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13600, train error: 0.11445 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13650, train error: 0.114426 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13700, train error: 0.114552 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13750, train error: 0.114459 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13800, train error: 0.114267 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13850, train error: 0.114455 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13900, train error: 0.114366 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 13950, train error: 0.114503 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14000, train error: 0.114377 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14050, train error: 0.114348 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14100, train error: 0.114394 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14150, train error: 0.114593 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14200, train error: 0.114557 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14250, train error: 0.114389 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14300, train error: 0.114518 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14350, train error: 0.114464 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14400, train error: 0.114417 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14450, train error: 0.114467 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14500, train error: 0.114505 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14550, train error: 0.114482 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14600, train error: 0.114582 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14650, train error: 0.114528 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14700, train error: 0.114552 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14750, train error: 0.11456 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14800, train error: 0.114612 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14850, train error: 0.114601 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14900, train error: 0.114631 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 14950, train error: 0.114645 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15000, train error: 0.114629 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15050, train error: 0.114632 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15100, train error: 0.114594 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15150, train error: 0.114619 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15200, train error: 0.114542 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15250, train error: 0.114629 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15300, train error: 0.114677 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15350, train error: 0.114669 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15400, train error: 0.114627 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15450, train error: 0.114645 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15500, train error: 0.114677 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15550, train error: 0.114633 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15600, train error: 0.114678 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15650, train error: 0.11461 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15700, train error: 0.114687 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15750, train error: 0.114716 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15800, train error: 0.114714 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15850, train error: 0.114648 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15900, train error: 0.114688 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 15950, train error: 0.114851 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16000, train error: 0.11476 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16050, train error: 0.114741 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16100, train error: 0.114847 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16150, train error: 0.114815 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16200, train error: 0.114747 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16250, train error: 0.114755 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16300, train error: 0.114815 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16350, train error: 0.114764 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16400, train error: 0.114765 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16450, train error: 0.114786 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16500, train error: 0.114763 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16550, train error: 0.114753 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16600, train error: 0.114793 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16650, train error: 0.114788 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16700, train error: 0.114792 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16750, train error: 0.114818 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16800, train error: 0.114816 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16850, train error: 0.114851 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16900, train error: 0.114843 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 16950, train error: 0.114837 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17000, train error: 0.114863 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17050, train error: 0.114847 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17100, train error: 0.114876 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17150, train error: 0.114895 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17200, train error: 0.114883 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17250, train error: 0.114881 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17300, train error: 0.11488 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17350, train error: 0.114877 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17400, train error: 0.114919 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17450, train error: 0.114897 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17500, train error: 0.114873 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17550, train error: 0.114881 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17600, train error: 0.114905 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17650, train error: 0.114917 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17700, train error: 0.114892 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17750, train error: 0.114925 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17800, train error: 0.114916 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17850, train error: 0.114913 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17900, train error: 0.114929 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 17950, train error: 0.114936 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18000, train error: 0.114943 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18050, train error: 0.114951 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18100, train error: 0.114937 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18150, train error: 0.114927 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18200, train error: 0.114938 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18250, train error: 0.114958 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18300, train error: 0.114918 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18350, train error: 0.11492 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18400, train error: 0.114916 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18450, train error: 0.114937 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18500, train error: 0.114953 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18550, train error: 0.11496 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18600, train error: 0.114928 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18650, train error: 0.114919 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18700, train error: 0.114949 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18750, train error: 0.114945 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18800, train error: 0.114955 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18850, train error: 0.114964 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18900, train error: 0.114958 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 18950, train error: 0.114945 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19000, train error: 0.114956 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19050, train error: 0.114959 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19100, train error: 0.114962 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19150, train error: 0.11497 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19200, train error: 0.114958 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19250, train error: 0.114978 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19300, train error: 0.114987 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19350, train error: 0.114957 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19400, train error: 0.114987 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19450, train error: 0.114973 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19500, train error: 0.114978 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19550, train error: 0.11499 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19600, train error: 0.114974 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19650, train error: 0.114981 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19700, train error: 0.114984 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19750, train error: 0.114968 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19800, train error: 0.115017 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19850, train error: 0.114994 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19900, train error: 0.114983 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 19950, train error: 0.114993 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20000, train error: 0.115001 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20050, train error: 0.114995 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20100, train error: 0.115007 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20150, train error: 0.115025 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20200, train error: 0.11501 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20250, train error: 0.115013 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20300, train error: 0.115012 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20350, train error: 0.11499 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20400, train error: 0.115003 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20450, train error: 0.115001 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20500, train error: 0.114995 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20550, train error: 0.114999 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20600, train error: 0.114995 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20650, train error: 0.115003 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20700, train error: 0.115003 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20750, train error: 0.11501 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20800, train error: 0.115008 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20850, train error: 0.115011 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20900, train error: 0.115018 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 20950, train error: 0.115016 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21000, train error: 0.115017 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21050, train error: 0.115007 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21100, train error: 0.115003 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21150, train error: 0.115018 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21200, train error: 0.115014 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21250, train error: 0.115012 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21300, train error: 0.115024 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21350, train error: 0.115027 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21400, train error: 0.115022 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21450, train error: 0.115009 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21500, train error: 0.114999 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21550, train error: 0.115017 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21600, train error: 0.11503 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21650, train error: 0.115022 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21700, train error: 0.115014 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21750, train error: 0.11502 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21800, train error: 0.11503 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21850, train error: 0.115028 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21900, train error: 0.115031 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 21950, train error: 0.115031 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22000, train error: 0.115035 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22050, train error: 0.115042 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22100, train error: 0.115027 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22150, train error: 0.115032 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22200, train error: 0.115033 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22250, train error: 0.115042 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22300, train error: 0.11504 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22350, train error: 0.115037 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22400, train error: 0.115032 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22450, train error: 0.115028 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22500, train error: 0.11504 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22550, train error: 0.115037 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22600, train error: 0.115047 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22650, train error: 0.115048 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22700, train error: 0.115047 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22750, train error: 0.115042 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22800, train error: 0.115051 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22850, train error: 0.115055 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22900, train error: 0.115047 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 22950, train error: 0.115055 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23000, train error: 0.115054 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23050, train error: 0.11505 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23100, train error: 0.115049 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23150, train error: 0.115048 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23200, train error: 0.11505 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23250, train error: 0.115051 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23300, train error: 0.115054 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23350, train error: 0.115038 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23400, train error: 0.115046 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23450, train error: 0.115053 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23500, train error: 0.115047 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23550, train error: 0.115051 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23600, train error: 0.115052 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23650, train error: 0.115051 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23700, train error: 0.115052 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23750, train error: 0.115053 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23800, train error: 0.115052 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23850, train error: 0.115059 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23900, train error: 0.115055 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 23950, train error: 0.115049 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24000, train error: 0.115048 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24050, train error: 0.115059 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24100, train error: 0.115056 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24150, train error: 0.115053 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24200, train error: 0.115054 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24250, train error: 0.115054 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24300, train error: 0.115056 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24350, train error: 0.115056 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24400, train error: 0.115052 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24450, train error: 0.11505 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24500, train error: 0.11505 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24550, train error: 0.115047 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24600, train error: 0.115047 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24650, train error: 0.115048 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24700, train error: 0.115045 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24750, train error: 0.115048 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24800, train error: 0.11505 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24850, train error: 0.115053 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24900, train error: 0.115054 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 24950, train error: 0.115049 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 25000, train error: 0.115054 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 25050, train error: 0.115053 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 25100, train error: 0.115052 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 25150, train error: 0.115056 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 25200, train error: 0.115053 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 25250, train error: 0.115054 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 25300, train error: 0.115056 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
step 25350, train error: 0.115055 | batch_size(step.eval(),arg.batch_size): 5742,5742 log_learning_rate: -2.334617515446134 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6627220/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1329, in save
    self.last_checkpoints, latest_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 745, in update_checkpoint_state
    text_format.MessageToString(ckpt))
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units2_Adam/hp_stid_116/checkpoint.tmp0848969e5569431b8bb4c6f1d773ee7d
