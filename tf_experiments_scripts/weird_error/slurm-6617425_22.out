I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: Tesla K20m
major: 3 minor: 5 memoryClockRate (GHz) 0.7055
pciBusID 0000:03:00.0
Total memory: 4.66GiB
Free memory: 4.59GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K20m, pci bus id: 0000:03:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', '1', 'f2D_krls.py', 'scripts_for_plotting', 'slurm-6617425_20.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'data_om', '.swo', 'slurm-6617425_24.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617425_13.out', 'test_print.py', 'om_f_8D_single_relu', 'slurm-6617425_27.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', '.batch_main.py.swp', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_14.out', 'os_walk_test', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', '__pycache__', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'output.file', 'hp_gpu', 'slurm-6617425_21.out', 'my_tf_proj.egg-info', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617425_23.out', 'krls_plot_errrors_script.py', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_12.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'old_main.py', 'slurm-6617425_5.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.0987401 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 50, train error: 0.0973948 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 100, train error: 0.0974697 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 150, train error: 0.0974351 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 200, train error: 0.097447 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 250, train error: 0.0974528 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 300, train error: 0.0974387 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 350, train error: 0.0974635 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 400, train error: 0.0974829 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 450, train error: 0.0975103 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 500, train error: 0.0975537 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 550, train error: 0.0975737 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 600, train error: 0.097593 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 650, train error: 0.0976145 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 700, train error: 0.0976285 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 750, train error: 0.0976112 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 800, train error: 0.0975976 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 850, train error: 0.0976151 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 900, train error: 0.0976354 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 950, train error: 0.0976347 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1000, train error: 0.0976675 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1050, train error: 0.0976956 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1100, train error: 0.0976664 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1150, train error: 0.0976413 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1200, train error: 0.0976034 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1250, train error: 0.0976293 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1300, train error: 0.0977215 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1350, train error: 0.0977085 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1400, train error: 0.0976708 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1450, train error: 0.0976902 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1500, train error: 0.0977032 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1550, train error: 0.0976692 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1600, train error: 0.0976614 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1650, train error: 0.0976946 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1700, train error: 0.0977147 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1750, train error: 0.0977055 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1800, train error: 0.0977262 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1850, train error: 0.0977566 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1900, train error: 0.0977021 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 1950, train error: 0.097781 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2000, train error: 0.0977662 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2050, train error: 0.0977857 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2100, train error: 0.0978458 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2150, train error: 0.0978455 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2200, train error: 0.0978953 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2250, train error: 0.0978962 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2300, train error: 0.0978513 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2350, train error: 0.0979162 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2400, train error: 0.0979072 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2450, train error: 0.0979394 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2500, train error: 0.097963 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2550, train error: 0.0979311 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2600, train error: 0.0979456 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2650, train error: 0.0980127 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2700, train error: 0.0980363 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2750, train error: 0.0979955 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2800, train error: 0.0980019 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2850, train error: 0.0979745 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2900, train error: 0.098045 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 2950, train error: 0.0980153 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3000, train error: 0.0981099 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3050, train error: 0.0980895 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3100, train error: 0.0980641 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3150, train error: 0.0980919 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3200, train error: 0.0980648 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3250, train error: 0.0981382 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3300, train error: 0.0980627 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3350, train error: 0.0980039 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3400, train error: 0.0980324 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3450, train error: 0.0981474 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3500, train error: 0.098073 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3550, train error: 0.0980422 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3600, train error: 0.0981382 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3650, train error: 0.0981219 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3700, train error: 0.0981398 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3750, train error: 0.0981723 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3800, train error: 0.0982307 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3850, train error: 0.0982565 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3900, train error: 0.098364 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 3950, train error: 0.0982598 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4000, train error: 0.0983684 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4050, train error: 0.0983867 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4100, train error: 0.0985035 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4150, train error: 0.0983895 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4200, train error: 0.0984048 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4250, train error: 0.0983752 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4300, train error: 0.0984778 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4350, train error: 0.0984007 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4400, train error: 0.0985368 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4450, train error: 0.0984728 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4500, train error: 0.0985918 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4550, train error: 0.0985942 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4600, train error: 0.0986802 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4650, train error: 0.0986075 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4700, train error: 0.0987201 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4750, train error: 0.0985978 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4800, train error: 0.0987671 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4850, train error: 0.0987472 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4900, train error: 0.0987608 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 4950, train error: 0.0988021 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5000, train error: 0.0987822 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5050, train error: 0.0987605 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5100, train error: 0.0986713 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5150, train error: 0.0989353 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5200, train error: 0.0988225 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5250, train error: 0.0987773 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5300, train error: 0.0989063 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5350, train error: 0.0986795 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5400, train error: 0.0991375 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5450, train error: 0.0989101 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5500, train error: 0.0990082 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5550, train error: 0.0990172 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5600, train error: 0.0989871 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5650, train error: 0.0988293 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5700, train error: 0.0992895 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5750, train error: 0.0989768 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5800, train error: 0.0991547 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5850, train error: 0.0990451 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5900, train error: 0.098928 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 5950, train error: 0.0993098 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6000, train error: 0.0988834 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6050, train error: 0.0991171 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6100, train error: 0.0992384 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6150, train error: 0.0993379 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6200, train error: 0.099265 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6250, train error: 0.0993274 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6300, train error: 0.0992168 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6350, train error: 0.0991517 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6400, train error: 0.0993485 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6450, train error: 0.099462 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6500, train error: 0.0994233 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6550, train error: 0.0993461 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6600, train error: 0.0992791 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6650, train error: 0.0994116 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6700, train error: 0.099435 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6750, train error: 0.0992179 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6800, train error: 0.0993351 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6850, train error: 0.0995124 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6900, train error: 0.0992462 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 6950, train error: 0.0994279 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7000, train error: 0.0994395 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7050, train error: 0.0994687 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7100, train error: 0.0993666 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7150, train error: 0.0994882 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7200, train error: 0.0995856 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7250, train error: 0.0994593 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7300, train error: 0.0993717 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7350, train error: 0.099472 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7400, train error: 0.0994405 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7450, train error: 0.09949 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7500, train error: 0.099548 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7550, train error: 0.0993732 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7600, train error: 0.0995352 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7650, train error: 0.0995249 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7700, train error: 0.0995944 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7750, train error: 0.0994856 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7800, train error: 0.0995269 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7850, train error: 0.0995656 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7900, train error: 0.0995405 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 7950, train error: 0.0994424 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8000, train error: 0.0995947 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8050, train error: 0.0995749 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8100, train error: 0.0996409 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8150, train error: 0.0996869 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8200, train error: 0.0995951 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8250, train error: 0.0996909 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8300, train error: 0.099747 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8350, train error: 0.0997353 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8400, train error: 0.0997123 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8450, train error: 0.099642 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8500, train error: 0.0997897 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8550, train error: 0.0998067 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8600, train error: 0.0997629 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8650, train error: 0.0997132 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8700, train error: 0.0997125 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8750, train error: 0.0997217 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8800, train error: 0.0999298 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8850, train error: 0.0999013 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8900, train error: 0.0998518 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 8950, train error: 0.0998856 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9000, train error: 0.0998486 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9050, train error: 0.0998395 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9100, train error: 0.0999236 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9150, train error: 0.0999931 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9200, train error: 0.100005 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9250, train error: 0.0999912 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9300, train error: 0.0999047 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9350, train error: 0.0998473 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9400, train error: 0.0999146 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9450, train error: 0.100035 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9500, train error: 0.0999688 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9550, train error: 0.0999082 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9600, train error: 0.0999747 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9650, train error: 0.0999776 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9700, train error: 0.0999689 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9750, train error: 0.100008 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9800, train error: 0.100079 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9850, train error: 0.100083 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9900, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 9950, train error: 0.100031 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10000, train error: 0.100058 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10050, train error: 0.100043 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10100, train error: 0.100093 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10150, train error: 0.100141 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10200, train error: 0.100101 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10250, train error: 0.100074 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10300, train error: 0.100104 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10350, train error: 0.100025 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10400, train error: 0.099979 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10450, train error: 0.100009 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10500, train error: 0.100095 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10550, train error: 0.100086 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10600, train error: 0.100047 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10650, train error: 0.100013 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10700, train error: 0.10005 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10750, train error: 0.100073 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10800, train error: 0.100145 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10850, train error: 0.100168 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10900, train error: 0.100164 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 10950, train error: 0.100099 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11000, train error: 0.100181 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11050, train error: 0.100219 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11100, train error: 0.100254 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11150, train error: 0.100088 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11200, train error: 0.100212 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11250, train error: 0.100189 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11300, train error: 0.100165 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11350, train error: 0.10017 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11400, train error: 0.100163 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11450, train error: 0.100101 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11500, train error: 0.100181 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11550, train error: 0.100285 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11600, train error: 0.100261 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11650, train error: 0.100208 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11700, train error: 0.100289 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11750, train error: 0.100283 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11800, train error: 0.100268 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11850, train error: 0.100312 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11900, train error: 0.100277 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 11950, train error: 0.100219 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12000, train error: 0.100297 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12050, train error: 0.100258 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12100, train error: 0.100216 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12150, train error: 0.100228 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12200, train error: 0.100234 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12250, train error: 0.10024 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12300, train error: 0.100247 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12350, train error: 0.100326 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12400, train error: 0.100326 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12450, train error: 0.100277 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12500, train error: 0.100406 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12550, train error: 0.100396 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12600, train error: 0.100336 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12650, train error: 0.100238 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12700, train error: 0.10024 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12750, train error: 0.100334 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12800, train error: 0.100358 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12850, train error: 0.100357 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12900, train error: 0.100465 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 12950, train error: 0.100449 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13000, train error: 0.100496 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13050, train error: 0.100503 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13100, train error: 0.100354 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13150, train error: 0.100428 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13200, train error: 0.100436 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13250, train error: 0.100439 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13300, train error: 0.100416 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13350, train error: 0.100499 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13400, train error: 0.100437 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13450, train error: 0.100392 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13500, train error: 0.100336 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13550, train error: 0.100313 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13600, train error: 0.100392 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13650, train error: 0.100551 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13700, train error: 0.100491 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13750, train error: 0.100533 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13800, train error: 0.100408 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13850, train error: 0.100431 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13900, train error: 0.100553 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 13950, train error: 0.10051 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14000, train error: 0.100353 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14050, train error: 0.100508 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14100, train error: 0.100451 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14150, train error: 0.100479 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14200, train error: 0.100359 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14250, train error: 0.100447 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14300, train error: 0.100444 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14350, train error: 0.100445 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14400, train error: 0.100482 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14450, train error: 0.100433 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14500, train error: 0.100489 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14550, train error: 0.10047 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14600, train error: 0.100401 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14650, train error: 0.100418 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14700, train error: 0.100483 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14750, train error: 0.100501 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14800, train error: 0.10051 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14850, train error: 0.10055 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14900, train error: 0.100486 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 14950, train error: 0.100528 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15000, train error: 0.100514 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15050, train error: 0.100517 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15100, train error: 0.100466 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15150, train error: 0.100528 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15200, train error: 0.100559 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15250, train error: 0.100536 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15300, train error: 0.100494 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15350, train error: 0.100561 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15400, train error: 0.100506 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15450, train error: 0.100455 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15500, train error: 0.10053 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15550, train error: 0.10052 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15600, train error: 0.10051 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15650, train error: 0.100541 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15700, train error: 0.100549 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15750, train error: 0.100458 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15800, train error: 0.100501 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15850, train error: 0.100556 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15900, train error: 0.100497 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 15950, train error: 0.100495 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16000, train error: 0.100551 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16050, train error: 0.100544 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16100, train error: 0.100536 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16150, train error: 0.100563 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16200, train error: 0.100538 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16250, train error: 0.100529 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16300, train error: 0.100561 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16350, train error: 0.100619 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16400, train error: 0.100565 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16450, train error: 0.100578 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16500, train error: 0.100593 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16550, train error: 0.100584 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16600, train error: 0.100569 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16650, train error: 0.100566 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16700, train error: 0.100529 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16750, train error: 0.100561 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16800, train error: 0.100597 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16850, train error: 0.100574 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16900, train error: 0.100647 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 16950, train error: 0.100585 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17000, train error: 0.100636 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17050, train error: 0.100578 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17100, train error: 0.100555 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17150, train error: 0.100554 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17200, train error: 0.100513 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17250, train error: 0.100552 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17300, train error: 0.100628 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17350, train error: 0.100665 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17400, train error: 0.100609 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17450, train error: 0.100609 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17500, train error: 0.100617 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17550, train error: 0.100665 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17600, train error: 0.100583 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17650, train error: 0.100608 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17700, train error: 0.100563 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17750, train error: 0.100682 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17800, train error: 0.100633 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17850, train error: 0.10063 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17900, train error: 0.10065 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 17950, train error: 0.100662 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18000, train error: 0.100662 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18050, train error: 0.10068 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18100, train error: 0.100642 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18150, train error: 0.100682 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18200, train error: 0.100689 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18250, train error: 0.100616 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18300, train error: 0.10068 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18350, train error: 0.100671 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18400, train error: 0.100701 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18450, train error: 0.100705 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18500, train error: 0.100677 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18550, train error: 0.100696 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18600, train error: 0.100743 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18650, train error: 0.100734 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18700, train error: 0.100718 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18750, train error: 0.100729 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18800, train error: 0.100697 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18850, train error: 0.100704 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18900, train error: 0.100705 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 18950, train error: 0.100702 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19000, train error: 0.100726 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19050, train error: 0.100792 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19100, train error: 0.100744 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19150, train error: 0.100726 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19200, train error: 0.10075 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19250, train error: 0.100757 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19300, train error: 0.100717 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19350, train error: 0.100715 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19400, train error: 0.10068 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19450, train error: 0.100662 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19500, train error: 0.100726 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19550, train error: 0.100753 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19600, train error: 0.100752 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19650, train error: 0.100757 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19700, train error: 0.10078 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19750, train error: 0.10081 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19800, train error: 0.100844 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19850, train error: 0.10085 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19900, train error: 0.100797 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 19950, train error: 0.100736 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20000, train error: 0.100841 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20050, train error: 0.100784 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20100, train error: 0.100806 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20150, train error: 0.100787 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20200, train error: 0.100751 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20250, train error: 0.100769 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20300, train error: 0.100783 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20350, train error: 0.100797 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20400, train error: 0.100784 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20450, train error: 0.100749 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20500, train error: 0.100838 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20550, train error: 0.100843 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20600, train error: 0.100835 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20650, train error: 0.100846 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20700, train error: 0.100844 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20750, train error: 0.100822 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20800, train error: 0.100824 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20850, train error: 0.100813 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20900, train error: 0.100843 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 20950, train error: 0.100763 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21000, train error: 0.100803 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21050, train error: 0.100807 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21100, train error: 0.100837 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21150, train error: 0.100781 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21200, train error: 0.100785 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21250, train error: 0.10079 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21300, train error: 0.100803 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21350, train error: 0.100799 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21400, train error: 0.100777 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21450, train error: 0.100802 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21500, train error: 0.100789 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21550, train error: 0.100813 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21600, train error: 0.100802 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21650, train error: 0.100799 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21700, train error: 0.100789 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21750, train error: 0.100801 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21800, train error: 0.100813 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21850, train error: 0.100826 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21900, train error: 0.100844 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 21950, train error: 0.100861 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22000, train error: 0.100847 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22050, train error: 0.100866 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22100, train error: 0.10086 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22150, train error: 0.10086 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22200, train error: 0.100854 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22250, train error: 0.100819 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22300, train error: 0.100851 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22350, train error: 0.100846 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22400, train error: 0.100852 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22450, train error: 0.100814 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22500, train error: 0.100863 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22550, train error: 0.100827 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22600, train error: 0.100831 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22650, train error: 0.100812 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22700, train error: 0.100811 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22750, train error: 0.100806 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22800, train error: 0.100819 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22850, train error: 0.10082 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22900, train error: 0.100851 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 22950, train error: 0.100847 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23000, train error: 0.100853 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23050, train error: 0.100835 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23100, train error: 0.100844 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23150, train error: 0.10084 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23200, train error: 0.100834 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23250, train error: 0.100829 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23300, train error: 0.100841 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23350, train error: 0.10085 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23400, train error: 0.100857 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23450, train error: 0.100849 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23500, train error: 0.10086 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23550, train error: 0.100843 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23600, train error: 0.100876 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23650, train error: 0.100863 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23700, train error: 0.100865 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23750, train error: 0.100849 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23800, train error: 0.100878 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23850, train error: 0.100854 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23900, train error: 0.100828 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 23950, train error: 0.100858 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24000, train error: 0.100857 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24050, train error: 0.100862 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24100, train error: 0.100864 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24150, train error: 0.100867 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24200, train error: 0.100904 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24250, train error: 0.100868 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24300, train error: 0.100891 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24350, train error: 0.100862 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24400, train error: 0.100862 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24450, train error: 0.100864 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24500, train error: 0.10085 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24550, train error: 0.100864 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24600, train error: 0.100867 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24650, train error: 0.10088 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24700, train error: 0.100866 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24750, train error: 0.100889 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24800, train error: 0.1009 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24850, train error: 0.100914 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24900, train error: 0.100922 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 24950, train error: 0.100932 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25000, train error: 0.100926 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25050, train error: 0.100913 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25100, train error: 0.100899 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25150, train error: 0.100881 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25200, train error: 0.10091 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25250, train error: 0.100906 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25300, train error: 0.100928 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25350, train error: 0.10093 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25400, train error: 0.100943 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25450, train error: 0.100967 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25500, train error: 0.100948 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25550, train error: 0.100925 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25600, train error: 0.100916 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25650, train error: 0.10091 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25700, train error: 0.10094 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25750, train error: 0.100927 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25800, train error: 0.100904 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25850, train error: 0.100933 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25900, train error: 0.100963 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 25950, train error: 0.100965 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26000, train error: 0.101005 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26050, train error: 0.10094 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26100, train error: 0.10098 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26150, train error: 0.100979 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26200, train error: 0.100969 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26250, train error: 0.100951 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26300, train error: 0.100964 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26350, train error: 0.100977 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26400, train error: 0.100984 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26450, train error: 0.100973 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26500, train error: 0.100961 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26550, train error: 0.100958 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26600, train error: 0.100979 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26650, train error: 0.100964 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26700, train error: 0.10099 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26750, train error: 0.100989 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26800, train error: 0.100997 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26850, train error: 0.101 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26900, train error: 0.100981 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 26950, train error: 0.10099 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27000, train error: 0.100985 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27050, train error: 0.100971 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27100, train error: 0.100997 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27150, train error: 0.101014 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27200, train error: 0.101012 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27250, train error: 0.100999 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27300, train error: 0.100993 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27350, train error: 0.100995 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27400, train error: 0.100997 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27450, train error: 0.10101 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27500, train error: 0.101008 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27550, train error: 0.100991 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27600, train error: 0.100976 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27650, train error: 0.100968 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27700, train error: 0.101014 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27750, train error: 0.100999 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27800, train error: 0.101034 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27850, train error: 0.101027 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27900, train error: 0.101029 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 27950, train error: 0.101003 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28000, train error: 0.101012 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28050, train error: 0.101043 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28100, train error: 0.101001 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28150, train error: 0.101002 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28200, train error: 0.101014 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28250, train error: 0.101002 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28300, train error: 0.101 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28350, train error: 0.101007 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28400, train error: 0.101012 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28450, train error: 0.101003 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28500, train error: 0.101019 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28550, train error: 0.101014 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28600, train error: 0.101021 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28650, train error: 0.101036 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28700, train error: 0.101019 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28750, train error: 0.101016 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28800, train error: 0.101022 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28850, train error: 0.101028 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28900, train error: 0.101034 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 28950, train error: 0.101021 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29000, train error: 0.10102 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29050, train error: 0.101017 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29100, train error: 0.101025 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29150, train error: 0.101039 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29200, train error: 0.101049 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29250, train error: 0.101046 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29300, train error: 0.101038 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29350, train error: 0.101038 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29400, train error: 0.101044 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29450, train error: 0.101031 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29500, train error: 0.101034 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29550, train error: 0.101032 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29600, train error: 0.101033 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29650, train error: 0.101031 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29700, train error: 0.101033 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29750, train error: 0.101028 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29800, train error: 0.101033 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29850, train error: 0.101025 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29900, train error: 0.101029 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 29950, train error: 0.101044 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30000, train error: 0.101038 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30050, train error: 0.101049 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30100, train error: 0.101046 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30150, train error: 0.101042 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30200, train error: 0.101061 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30250, train error: 0.101059 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30300, train error: 0.101061 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30350, train error: 0.101058 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30400, train error: 0.101047 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30450, train error: 0.101051 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30500, train error: 0.101063 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30550, train error: 0.101054 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30600, train error: 0.101052 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30650, train error: 0.10106 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30700, train error: 0.101053 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30750, train error: 0.101048 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30800, train error: 0.101059 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30850, train error: 0.10107 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30900, train error: 0.10106 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 30950, train error: 0.101059 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31000, train error: 0.101052 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31050, train error: 0.101054 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31100, train error: 0.101064 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31150, train error: 0.101047 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31200, train error: 0.101051 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31250, train error: 0.101052 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31300, train error: 0.101055 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31350, train error: 0.101068 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31400, train error: 0.101054 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31450, train error: 0.101052 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31500, train error: 0.101061 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31550, train error: 0.101055 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31600, train error: 0.101062 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31650, train error: 0.10106 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31700, train error: 0.101062 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31750, train error: 0.101074 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31800, train error: 0.101065 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31850, train error: 0.10107 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31900, train error: 0.101066 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 31950, train error: 0.101073 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32000, train error: 0.101074 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32050, train error: 0.101066 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32100, train error: 0.101076 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32150, train error: 0.101072 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32200, train error: 0.101072 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32250, train error: 0.101079 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32300, train error: 0.101072 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32350, train error: 0.101075 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32400, train error: 0.101075 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32450, train error: 0.101083 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32500, train error: 0.101091 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32550, train error: 0.101093 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32600, train error: 0.101099 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32650, train error: 0.101088 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32700, train error: 0.101097 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32750, train error: 0.101097 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32800, train error: 0.101094 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32850, train error: 0.101088 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32900, train error: 0.10109 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 32950, train error: 0.101093 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33000, train error: 0.101081 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33050, train error: 0.101075 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33100, train error: 0.101096 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33150, train error: 0.101098 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33200, train error: 0.101078 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33250, train error: 0.101075 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33300, train error: 0.101082 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33350, train error: 0.101079 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33400, train error: 0.101077 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33450, train error: 0.101078 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33500, train error: 0.10107 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33550, train error: 0.101076 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33600, train error: 0.10109 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33650, train error: 0.101093 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33700, train error: 0.101092 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33750, train error: 0.101095 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33800, train error: 0.101095 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
step 33850, train error: 0.101096 | batch_size(step.eval(),arg.batch_size): 11000,11000 log_learning_rate: -3.387075041061544 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6617450/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units5_Adam/hp_stid_22/mdl_ckpt.meta.tmpe55e7ee6135b40a7a1d32ea5084dfdc8
