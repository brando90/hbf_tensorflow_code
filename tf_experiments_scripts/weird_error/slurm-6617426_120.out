I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:81:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:81:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'slurm-6617426_60.out', 'slurm-6617426_66.out', 'slurm-6617426_117.out', 'slurm-6617426_54.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', 'slurm-6617425_154.out', '1', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'slurm-6617426_65.out', 'slurm-6617426_56.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'slurm-6617426_70.out', 'slurm-6617426_74.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617426_12.out', 'slurm-6617425_13.out', 'test_print.py', 'slurm-6617426_123.out', 'slurm-6617426_115.out', 'om_f_8D_single_relu', 'slurm-6617426_116.out', 'slurm-6617426_73.out', 'slurm-6617425_27.out', 'slurm-6617426_53.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'slurm-6617426_62.out', 'slurm-6617426_121.out', 'slurm-6617426_122.out', 'slurm-6617426_119.out', 'slurm-6617426_69.out', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'slurm-6617426_68.out', 'os_walk_test', 'slurm-6617426_72.out', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617426_71.out', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'slurm-6617426_57.out', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'slurm-6617426_52.out', 'slurm-6617426_58.out', 'output.file', 'slurm-6617426_124.out', 'hp_gpu', 'slurm-6617425_21.out', 'slurm-6617425_167.out', 'my_tf_proj.egg-info', 'slurm-6617426_120.out', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617426_63.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617426_64.out', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617426_67.out', 'slurm-6617426_59.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'slurm-6617426_61.out', 'slurm-6617426_118.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617426_55.out', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.106673 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 50, train error: 0.0984668 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 100, train error: 0.0994719 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 150, train error: 0.101065 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 200, train error: 0.103053 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 250, train error: 0.107924 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 300, train error: 0.107332 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 350, train error: 0.112666 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 400, train error: 0.111635 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 450, train error: 0.117643 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 500, train error: 0.114859 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 550, train error: 0.108376 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 600, train error: 0.12812 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 650, train error: 0.115622 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 700, train error: 0.113527 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 750, train error: 0.117118 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 800, train error: 0.125622 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 850, train error: 0.116906 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 900, train error: 0.131495 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 950, train error: 0.123687 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1000, train error: 0.131531 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1050, train error: 0.134678 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1100, train error: 0.133192 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1150, train error: 0.139236 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1200, train error: 0.144399 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1250, train error: 0.12468 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1300, train error: 0.131634 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1350, train error: 0.136441 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1400, train error: 0.132958 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1450, train error: 0.121364 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1500, train error: 0.137659 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1550, train error: 0.130721 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1600, train error: 0.14403 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1650, train error: 0.133545 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1700, train error: 0.126661 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1750, train error: 0.1314 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1800, train error: 0.133049 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1850, train error: 0.13776 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1900, train error: 0.138705 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 1950, train error: 0.13166 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2000, train error: 0.125549 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2050, train error: 0.138481 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2100, train error: 0.132718 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2150, train error: 0.128859 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2200, train error: 0.130974 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2250, train error: 0.13892 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2300, train error: 0.136405 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2350, train error: 0.128611 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2400, train error: 0.15104 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2450, train error: 0.121258 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2500, train error: 0.123767 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2550, train error: 0.153999 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2600, train error: 0.138872 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2650, train error: 0.11751 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2700, train error: 0.121517 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2750, train error: 0.137926 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2800, train error: 0.128075 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2850, train error: 0.117537 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2900, train error: 0.121358 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 2950, train error: 0.1389 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3000, train error: 0.144848 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3050, train error: 0.12558 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3100, train error: 0.121841 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3150, train error: 0.132101 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3200, train error: 0.139133 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3250, train error: 0.142661 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3300, train error: 0.134915 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3350, train error: 0.132791 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3400, train error: 0.132742 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3450, train error: 0.132546 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3500, train error: 0.133294 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3550, train error: 0.131697 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3600, train error: 0.13586 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3650, train error: 0.137316 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3700, train error: 0.136861 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3750, train error: 0.135691 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3800, train error: 0.135927 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3850, train error: 0.139925 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3900, train error: 0.138692 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 3950, train error: 0.141066 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4000, train error: 0.141246 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4050, train error: 0.14323 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4100, train error: 0.136715 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4150, train error: 0.137937 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4200, train error: 0.136201 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4250, train error: 0.140756 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4300, train error: 0.137977 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4350, train error: 0.142642 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4400, train error: 0.14232 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4450, train error: 0.143038 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4500, train error: 0.14 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4550, train error: 0.139814 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4600, train error: 0.133067 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4650, train error: 0.131898 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4700, train error: 0.146956 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4750, train error: 0.146216 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4800, train error: 0.134798 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4850, train error: 0.132149 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4900, train error: 0.142097 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 4950, train error: 0.120333 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5000, train error: 0.118896 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5050, train error: 0.121019 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5100, train error: 0.130057 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5150, train error: 0.127135 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5200, train error: 0.132586 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5250, train error: 0.134882 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5300, train error: 0.127347 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5350, train error: 0.135896 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5400, train error: 0.133419 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5450, train error: 0.13576 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5500, train error: 0.135118 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5550, train error: 0.141064 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5600, train error: 0.138747 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5650, train error: 0.14865 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5700, train error: 0.137723 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5750, train error: 0.13018 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5800, train error: 0.132552 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5850, train error: 0.133718 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5900, train error: 0.137904 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 5950, train error: 0.130198 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6000, train error: 0.131568 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6050, train error: 0.147687 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6100, train error: 0.129363 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6150, train error: 0.134506 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6200, train error: 0.139118 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6250, train error: 0.14054 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6300, train error: 0.141674 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6350, train error: 0.13325 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6400, train error: 0.136941 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6450, train error: 0.142689 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6500, train error: 0.143461 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6550, train error: 0.139445 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6600, train error: 0.139694 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6650, train error: 0.141513 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6700, train error: 0.142286 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6750, train error: 0.144975 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6800, train error: 0.139509 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6850, train error: 0.141518 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6900, train error: 0.145785 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 6950, train error: 0.142098 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7000, train error: 0.145009 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7050, train error: 0.138729 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7100, train error: 0.144034 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7150, train error: 0.146121 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7200, train error: 0.143457 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7250, train error: 0.147665 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7300, train error: 0.13869 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7350, train error: 0.146848 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7400, train error: 0.143064 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7450, train error: 0.148949 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7500, train error: 0.136336 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7550, train error: 0.140639 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7600, train error: 0.145459 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7650, train error: 0.141836 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7700, train error: 0.146964 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7750, train error: 0.140095 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7800, train error: 0.142298 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7850, train error: 0.133314 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7900, train error: 0.14257 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 7950, train error: 0.149019 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8000, train error: 0.137605 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8050, train error: 0.132362 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8100, train error: 0.152646 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8150, train error: 0.141535 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8200, train error: 0.139717 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8250, train error: 0.132487 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8300, train error: 0.136482 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8350, train error: 0.148534 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8400, train error: 0.136662 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8450, train error: 0.146807 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8500, train error: 0.13965 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8550, train error: 0.138524 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8600, train error: 0.147158 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8650, train error: 0.147016 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8700, train error: 0.141941 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8750, train error: 0.143225 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8800, train error: 0.140636 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8850, train error: 0.14422 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8900, train error: 0.142691 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 8950, train error: 0.146244 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9000, train error: 0.146975 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9050, train error: 0.144364 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9100, train error: 0.145562 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9150, train error: 0.143338 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9200, train error: 0.145235 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9250, train error: 0.143406 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9300, train error: 0.142864 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9350, train error: 0.142001 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9400, train error: 0.143246 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9450, train error: 0.141709 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9500, train error: 0.145388 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9550, train error: 0.150336 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9600, train error: 0.147243 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9650, train error: 0.14618 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9700, train error: 0.14486 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9750, train error: 0.148645 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9800, train error: 0.147131 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9850, train error: 0.147883 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9900, train error: 0.143538 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 9950, train error: 0.143595 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10000, train error: 0.143637 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10050, train error: 0.144794 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10100, train error: 0.141713 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10150, train error: 0.145378 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10200, train error: 0.14254 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10250, train error: 0.151737 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10300, train error: 0.15352 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10350, train error: 0.155002 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10400, train error: 0.153199 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10450, train error: 0.148828 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10500, train error: 0.139862 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10550, train error: 0.144439 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10600, train error: 0.146258 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10650, train error: 0.141348 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10700, train error: 0.139683 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10750, train error: 0.1399 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10800, train error: 0.145686 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10850, train error: 0.144321 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10900, train error: 0.146768 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 10950, train error: 0.144756 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11000, train error: 0.143128 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11050, train error: 0.144109 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11100, train error: 0.143152 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11150, train error: 0.143864 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11200, train error: 0.145051 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11250, train error: 0.143975 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11300, train error: 0.145509 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11350, train error: 0.146284 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11400, train error: 0.144983 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11450, train error: 0.144183 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11500, train error: 0.141712 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11550, train error: 0.139069 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11600, train error: 0.140814 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11650, train error: 0.143709 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11700, train error: 0.145961 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11750, train error: 0.147328 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11800, train error: 0.146481 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11850, train error: 0.145088 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11900, train error: 0.142768 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 11950, train error: 0.141067 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12000, train error: 0.143339 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12050, train error: 0.144183 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12100, train error: 0.143575 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12150, train error: 0.144124 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12200, train error: 0.146514 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12250, train error: 0.145542 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12300, train error: 0.14291 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12350, train error: 0.142212 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12400, train error: 0.147335 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12450, train error: 0.144185 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12500, train error: 0.139863 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12550, train error: 0.144509 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12600, train error: 0.158966 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12650, train error: 0.154094 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12700, train error: 0.150015 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12750, train error: 0.145874 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12800, train error: 0.141408 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12850, train error: 0.135932 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12900, train error: 0.143327 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 12950, train error: 0.140155 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13000, train error: 0.142791 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13050, train error: 0.141886 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13100, train error: 0.14392 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13150, train error: 0.141849 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13200, train error: 0.142835 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13250, train error: 0.145523 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13300, train error: 0.143322 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13350, train error: 0.145114 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13400, train error: 0.143781 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13450, train error: 0.142652 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13500, train error: 0.143061 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13550, train error: 0.14246 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13600, train error: 0.145122 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13650, train error: 0.147499 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13700, train error: 0.146501 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13750, train error: 0.145678 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13800, train error: 0.146562 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13850, train error: 0.144817 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13900, train error: 0.144056 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 13950, train error: 0.145002 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14000, train error: 0.145148 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14050, train error: 0.144881 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14100, train error: 0.142341 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14150, train error: 0.138291 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14200, train error: 0.146779 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14250, train error: 0.147853 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14300, train error: 0.14721 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14350, train error: 0.149317 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14400, train error: 0.146885 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14450, train error: 0.14293 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14500, train error: 0.149289 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14550, train error: 0.151231 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14600, train error: 0.147074 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14650, train error: 0.149908 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14700, train error: 0.149781 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14750, train error: 0.151191 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14800, train error: 0.142742 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14850, train error: 0.135581 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14900, train error: 0.142324 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 14950, train error: 0.143494 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15000, train error: 0.141881 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15050, train error: 0.141071 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15100, train error: 0.141143 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15150, train error: 0.147199 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15200, train error: 0.148708 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15250, train error: 0.148303 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15300, train error: 0.144411 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15350, train error: 0.144123 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15400, train error: 0.141144 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15450, train error: 0.146601 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15500, train error: 0.146552 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15550, train error: 0.146125 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15600, train error: 0.148209 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15650, train error: 0.143675 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15700, train error: 0.144599 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15750, train error: 0.145804 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15800, train error: 0.145636 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15850, train error: 0.147126 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15900, train error: 0.146789 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 15950, train error: 0.144467 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16000, train error: 0.142526 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16050, train error: 0.142739 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16100, train error: 0.144951 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16150, train error: 0.147432 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16200, train error: 0.144841 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16250, train error: 0.143364 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16300, train error: 0.143446 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16350, train error: 0.14591 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16400, train error: 0.148897 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16450, train error: 0.14521 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16500, train error: 0.142662 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16550, train error: 0.141522 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16600, train error: 0.145879 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16650, train error: 0.143488 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16700, train error: 0.148651 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16750, train error: 0.143364 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16800, train error: 0.141285 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16850, train error: 0.145784 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16900, train error: 0.144439 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 16950, train error: 0.14473 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17000, train error: 0.145588 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17050, train error: 0.144639 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17100, train error: 0.142957 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17150, train error: 0.142954 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17200, train error: 0.144868 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17250, train error: 0.146348 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17300, train error: 0.143336 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17350, train error: 0.14473 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17400, train error: 0.146726 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17450, train error: 0.143184 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17500, train error: 0.143883 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17550, train error: 0.146797 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17600, train error: 0.146061 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17650, train error: 0.143526 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17700, train error: 0.145026 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17750, train error: 0.143861 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17800, train error: 0.143535 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17850, train error: 0.143627 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17900, train error: 0.145787 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 17950, train error: 0.145198 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18000, train error: 0.146859 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18050, train error: 0.143395 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18100, train error: 0.146456 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18150, train error: 0.146596 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18200, train error: 0.144705 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18250, train error: 0.1451 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18300, train error: 0.144735 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18350, train error: 0.143598 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18400, train error: 0.144238 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18450, train error: 0.144232 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18500, train error: 0.144042 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18550, train error: 0.144944 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18600, train error: 0.145764 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18650, train error: 0.145715 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18700, train error: 0.144056 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18750, train error: 0.14484 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18800, train error: 0.145416 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18850, train error: 0.143751 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18900, train error: 0.145942 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 18950, train error: 0.14201 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19000, train error: 0.142227 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19050, train error: 0.143595 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19100, train error: 0.144441 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19150, train error: 0.144053 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19200, train error: 0.144646 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19250, train error: 0.143771 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19300, train error: 0.142118 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19350, train error: 0.143813 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19400, train error: 0.144717 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19450, train error: 0.145067 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19500, train error: 0.145018 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19550, train error: 0.144456 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19600, train error: 0.143832 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19650, train error: 0.143 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19700, train error: 0.144256 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19750, train error: 0.142966 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19800, train error: 0.142428 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19850, train error: 0.142443 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19900, train error: 0.145363 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 19950, train error: 0.145053 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20000, train error: 0.142834 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20050, train error: 0.143676 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20100, train error: 0.142679 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20150, train error: 0.143721 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20200, train error: 0.14627 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20250, train error: 0.143537 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20300, train error: 0.143213 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20350, train error: 0.13802 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20400, train error: 0.143943 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20450, train error: 0.146079 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20500, train error: 0.146727 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20550, train error: 0.142786 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20600, train error: 0.141478 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20650, train error: 0.140548 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20700, train error: 0.141852 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20750, train error: 0.141449 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20800, train error: 0.144768 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20850, train error: 0.142435 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20900, train error: 0.141478 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 20950, train error: 0.138718 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21000, train error: 0.143143 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21050, train error: 0.147218 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21100, train error: 0.140285 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21150, train error: 0.141986 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21200, train error: 0.144855 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21250, train error: 0.142627 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21300, train error: 0.142459 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21350, train error: 0.145492 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21400, train error: 0.143133 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21450, train error: 0.142599 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21500, train error: 0.145018 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21550, train error: 0.143012 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21600, train error: 0.140595 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21650, train error: 0.143559 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21700, train error: 0.142541 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21750, train error: 0.141157 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21800, train error: 0.14296 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21850, train error: 0.144486 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21900, train error: 0.14118 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 21950, train error: 0.144394 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22000, train error: 0.144009 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22050, train error: 0.145222 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22100, train error: 0.142778 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22150, train error: 0.139083 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22200, train error: 0.144831 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22250, train error: 0.14105 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22300, train error: 0.146327 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22350, train error: 0.14256 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22400, train error: 0.142171 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22450, train error: 0.140597 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22500, train error: 0.146129 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22550, train error: 0.141987 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22600, train error: 0.142265 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22650, train error: 0.142696 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22700, train error: 0.14244 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22750, train error: 0.14434 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22800, train error: 0.141703 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22850, train error: 0.141951 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22900, train error: 0.142598 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 22950, train error: 0.141494 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23000, train error: 0.141899 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23050, train error: 0.141829 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23100, train error: 0.143058 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23150, train error: 0.143679 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23200, train error: 0.142923 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23250, train error: 0.141008 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23300, train error: 0.140731 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23350, train error: 0.142795 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23400, train error: 0.143767 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23450, train error: 0.144446 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23500, train error: 0.144084 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23550, train error: 0.142837 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23600, train error: 0.143545 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23650, train error: 0.145264 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23700, train error: 0.141892 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23750, train error: 0.143559 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23800, train error: 0.145351 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23850, train error: 0.143293 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23900, train error: 0.14244 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 23950, train error: 0.141956 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24000, train error: 0.139027 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24050, train error: 0.142854 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24100, train error: 0.1436 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24150, train error: 0.142427 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24200, train error: 0.143001 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24250, train error: 0.141233 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24300, train error: 0.141703 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24350, train error: 0.140391 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24400, train error: 0.139087 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24450, train error: 0.139617 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24500, train error: 0.142404 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24550, train error: 0.142021 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24600, train error: 0.141074 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24650, train error: 0.141011 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24700, train error: 0.139569 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24750, train error: 0.141906 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24800, train error: 0.144089 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24850, train error: 0.143044 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24900, train error: 0.138733 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 24950, train error: 0.140424 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 25000, train error: 0.144011 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 25050, train error: 0.142894 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 25100, train error: 0.141128 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 25150, train error: 0.143142 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 25200, train error: 0.142393 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
step 25250, train error: 0.141851 | batch_size(step.eval(),arg.batch_size): 1231,1231 log_learning_rate: -1.8221165550914225 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6627224/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units2_Adam/hp_stid_120/mdl_ckpt.meta.tmp382c37ac7458498796e1b2666d42641b
