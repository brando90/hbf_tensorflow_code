I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:06:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:06:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617426_141.out', 'slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'slurm-6617426_60.out', 'slurm-6617426_161.out', 'slurm-6617426_66.out', 'slurm-6617426_117.out', 'slurm-6617426_136.out', 'slurm-6617426_54.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'slurm-6617548_84.out', 'pickle_file', 'slurm-6617425_154.out', 'slurm-6617426_181.out', 'slurm-6617426_160.out', '1', 'slurm-6617426_142.out', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'slurm-6617426_65.out', 'slurm-6617426_56.out', 'h_add_data_and_mesh.npz', 'slurm-6617548_83.out', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'slurm-6617426_70.out', 'slurm-6617548_78.out', 'slurm-6617426_74.out', 'slurm-6617426_162.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', 'slurm-6617548_86.out', '.swn', 'slurm-6617426_12.out', 'slurm-6617548_80.out', 'slurm-6617425_13.out', 'test_print.py', 'slurm-6617426_123.out', 'slurm-6617426_115.out', 'om_f_8D_single_relu', 'slurm-6617426_116.out', 'slurm-6617426_73.out', 'slurm-6617425_27.out', 'slurm-6617426_53.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'slurm-6617426_134.out', 'slurm-6617426_62.out', 'slurm-6617426_121.out', 'slurm-6617426_122.out', 'slurm-6617426_119.out', 'slurm-6617426_69.out', 'batch_main.py', 'slurm-6617426_127.out', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'slurm-6617548_81.out', 'slurm-6617548_77.out', 'slurm-6617426_68.out', 'os_walk_test', 'slurm-6617426_72.out', 'slurm-6617426_135.out', 'slurm-6617426_159.out', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617426_71.out', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'slurm-6617426_57.out', 'slurm-6617426_143.out', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'slurm-6617426_52.out', 'slurm-6617548_79.out', 'slurm-6617426_58.out', 'output.file', 'slurm-6617426_137.out', 'slurm-6617426_124.out', 'hp_gpu', 'slurm-6617426_144.out', 'slurm-6617425_21.out', 'slurm-6617426_145.out', 'slurm-6617425_167.out', 'my_tf_proj.egg-info', 'slurm-6617426_120.out', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617426_140.out', 'slurm-6617425_3.out', 'slurm-6617548_76.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'slurm-6617426_163.out', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617426_126.out', 'slurm-6617425_22.out', 'slurm-6617548_85.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'slurm-6617548_82.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'slurm-6617426_139.out', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617426_63.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617426_64.out', 'slurm-6617426_146.out', 'slurm-6617426_129.out', 'slurm-6617425_19.out', 'slurm-6617426_167.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'slurm-6617426_128.out', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617426_67.out', 'slurm-6617426_59.out', 'slurm-6617426_177.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'slurm-6617426_61.out', 'slurm-6617426_118.out', 'slurm-6617426_138.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617426_55.out', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
l  2
+++> std mu for inits_C:  [0, 0.07873214963865562]
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.109791 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 50, train error: 0.098498 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 100, train error: 0.0977093 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 150, train error: 0.0977849 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 200, train error: 0.0975456 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 250, train error: 0.0976775 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 300, train error: 0.0976645 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 350, train error: 0.0975287 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 400, train error: 0.0971314 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 450, train error: 0.0970745 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 500, train error: 0.0971234 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 550, train error: 0.0969374 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 600, train error: 0.0967412 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 650, train error: 0.0967263 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 700, train error: 0.0966162 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 750, train error: 0.0965338 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 800, train error: 0.0963137 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 850, train error: 0.0960594 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 900, train error: 0.095858 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 950, train error: 0.0958602 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1000, train error: 0.0957947 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1050, train error: 0.0958519 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1100, train error: 0.0959672 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1150, train error: 0.0959325 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1200, train error: 0.0959198 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1250, train error: 0.0957274 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1300, train error: 0.0958084 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1350, train error: 0.0958015 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1400, train error: 0.0957249 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1450, train error: 0.0958058 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1500, train error: 0.0956452 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1550, train error: 0.0960023 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1600, train error: 0.0959593 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1650, train error: 0.0959942 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1700, train error: 0.0960218 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1750, train error: 0.0958829 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1800, train error: 0.0959923 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1850, train error: 0.0959461 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1900, train error: 0.0958078 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 1950, train error: 0.0958879 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2000, train error: 0.0961469 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2050, train error: 0.0957815 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2100, train error: 0.0957585 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2150, train error: 0.0958422 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2200, train error: 0.0958053 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2250, train error: 0.0957288 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2300, train error: 0.0956512 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2350, train error: 0.0957901 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2400, train error: 0.0959263 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2450, train error: 0.0960603 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2500, train error: 0.0962609 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2550, train error: 0.0960735 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2600, train error: 0.0960129 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2650, train error: 0.0960262 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2700, train error: 0.0961589 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2750, train error: 0.0961523 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2800, train error: 0.0959674 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2850, train error: 0.0959609 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2900, train error: 0.0960059 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 2950, train error: 0.0961904 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3000, train error: 0.0959751 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3050, train error: 0.0959617 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3100, train error: 0.0962541 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3150, train error: 0.0960614 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3200, train error: 0.0960828 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3250, train error: 0.0960741 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3300, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3350, train error: 0.0959879 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3400, train error: 0.0960298 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3450, train error: 0.0961517 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3500, train error: 0.0960272 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3550, train error: 0.0960712 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3600, train error: 0.0961827 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3650, train error: 0.0961339 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3700, train error: 0.0960431 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3750, train error: 0.0964082 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3800, train error: 0.0960499 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3850, train error: 0.0960308 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3900, train error: 0.0962169 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 3950, train error: 0.096028 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4000, train error: 0.0961787 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4050, train error: 0.0960179 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4100, train error: 0.0960811 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4150, train error: 0.0959933 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4200, train error: 0.0962243 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4250, train error: 0.0962772 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4300, train error: 0.0963713 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4350, train error: 0.0962543 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4400, train error: 0.0962814 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4450, train error: 0.0961424 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4500, train error: 0.0964949 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4550, train error: 0.0964977 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4600, train error: 0.0962856 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4650, train error: 0.0961106 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4700, train error: 0.0960856 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4750, train error: 0.0961479 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4800, train error: 0.096171 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4850, train error: 0.0962898 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4900, train error: 0.0962509 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 4950, train error: 0.0963024 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5000, train error: 0.0961382 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5050, train error: 0.0961876 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5100, train error: 0.096039 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5150, train error: 0.0961444 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5200, train error: 0.096319 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5250, train error: 0.0966097 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5300, train error: 0.0959873 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5350, train error: 0.0961821 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5400, train error: 0.0961975 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5450, train error: 0.0959967 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5500, train error: 0.0959174 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5550, train error: 0.0961273 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5600, train error: 0.0961833 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5650, train error: 0.0962436 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5700, train error: 0.0964368 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5750, train error: 0.0961319 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5800, train error: 0.09621 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5850, train error: 0.0961092 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5900, train error: 0.0961587 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 5950, train error: 0.0960349 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6000, train error: 0.0960622 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6050, train error: 0.0959988 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6100, train error: 0.0961661 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6150, train error: 0.0962312 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6200, train error: 0.0961808 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6250, train error: 0.0962539 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6300, train error: 0.0961079 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6350, train error: 0.0961267 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6400, train error: 0.0961672 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6450, train error: 0.0962424 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6500, train error: 0.0960714 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6550, train error: 0.0959927 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6600, train error: 0.0962158 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6650, train error: 0.0964009 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6700, train error: 0.0961991 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6750, train error: 0.096193 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6800, train error: 0.0963418 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6850, train error: 0.0962639 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6900, train error: 0.0964345 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 6950, train error: 0.0961935 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7000, train error: 0.0960928 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7050, train error: 0.09625 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7100, train error: 0.0961404 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7150, train error: 0.0960876 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7200, train error: 0.0961177 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7250, train error: 0.096139 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7300, train error: 0.0960128 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7350, train error: 0.096059 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7400, train error: 0.0960521 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7450, train error: 0.0963979 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7500, train error: 0.0962854 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7550, train error: 0.0961835 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7600, train error: 0.0962349 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7650, train error: 0.0964488 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7700, train error: 0.0964351 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7750, train error: 0.0962824 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7800, train error: 0.0960913 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7850, train error: 0.0962068 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7900, train error: 0.096223 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 7950, train error: 0.0962237 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8000, train error: 0.0961092 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8050, train error: 0.0961934 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8100, train error: 0.0960607 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8150, train error: 0.0962138 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8200, train error: 0.0960364 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8250, train error: 0.0960997 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8300, train error: 0.0960855 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8350, train error: 0.0961544 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8400, train error: 0.0960712 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8450, train error: 0.0961054 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8500, train error: 0.0962145 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8550, train error: 0.0962451 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8600, train error: 0.0960694 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8650, train error: 0.0961533 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8700, train error: 0.0961026 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8750, train error: 0.0961279 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8800, train error: 0.0960474 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8850, train error: 0.0961669 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8900, train error: 0.0960897 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 8950, train error: 0.0961588 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9000, train error: 0.0961332 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9050, train error: 0.0961198 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9100, train error: 0.0960878 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9150, train error: 0.0961333 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9200, train error: 0.0960837 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9250, train error: 0.0961103 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9300, train error: 0.0960616 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9350, train error: 0.0960992 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9400, train error: 0.0961365 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9450, train error: 0.0961297 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9500, train error: 0.0960691 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9550, train error: 0.0961602 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9600, train error: 0.0960806 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9650, train error: 0.0961953 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9700, train error: 0.0961189 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9750, train error: 0.0961358 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9800, train error: 0.0961627 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9850, train error: 0.0961423 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9900, train error: 0.0961361 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 9950, train error: 0.0960836 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10000, train error: 0.0961614 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10050, train error: 0.0961231 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10100, train error: 0.0961354 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10150, train error: 0.0960983 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10200, train error: 0.0961338 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10250, train error: 0.0960848 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10300, train error: 0.0961657 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10350, train error: 0.0961582 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10400, train error: 0.0961375 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10450, train error: 0.0961051 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10500, train error: 0.0961118 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10550, train error: 0.0960599 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10600, train error: 0.0961433 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10650, train error: 0.0961584 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10700, train error: 0.0962077 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10750, train error: 0.0961728 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10800, train error: 0.0961587 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10850, train error: 0.0961937 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10900, train error: 0.0961106 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 10950, train error: 0.0960677 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11000, train error: 0.0961636 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11050, train error: 0.0961717 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11100, train error: 0.0961457 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11150, train error: 0.0961621 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11200, train error: 0.0961409 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11250, train error: 0.0961494 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11300, train error: 0.0960748 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11350, train error: 0.0961312 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11400, train error: 0.0961716 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11450, train error: 0.096164 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11500, train error: 0.09616 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11550, train error: 0.0961521 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11600, train error: 0.0961809 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11650, train error: 0.0961946 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11700, train error: 0.0961174 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11750, train error: 0.0961614 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11800, train error: 0.0962031 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11850, train error: 0.0961708 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11900, train error: 0.0961523 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 11950, train error: 0.0961384 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12000, train error: 0.0961392 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12050, train error: 0.0961459 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12100, train error: 0.0960637 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12150, train error: 0.0961209 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12200, train error: 0.096063 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12250, train error: 0.0961827 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12300, train error: 0.0960114 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12350, train error: 0.0961212 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12400, train error: 0.0960654 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12450, train error: 0.0961109 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12500, train error: 0.0961531 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12550, train error: 0.096255 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12600, train error: 0.0962122 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12650, train error: 0.0961588 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12700, train error: 0.0962262 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12750, train error: 0.0961105 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12800, train error: 0.0962287 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12850, train error: 0.0960852 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12900, train error: 0.0961906 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 12950, train error: 0.0961639 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13000, train error: 0.0961396 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13050, train error: 0.0961722 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13100, train error: 0.0960711 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13150, train error: 0.0962704 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13200, train error: 0.0960503 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13250, train error: 0.0962416 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13300, train error: 0.0962174 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13350, train error: 0.0961711 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13400, train error: 0.0961319 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13450, train error: 0.0961483 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13500, train error: 0.0961746 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13550, train error: 0.0961753 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13600, train error: 0.0961513 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13650, train error: 0.096195 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13700, train error: 0.0961232 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13750, train error: 0.0961222 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13800, train error: 0.0961372 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13850, train error: 0.0961373 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13900, train error: 0.0961434 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 13950, train error: 0.0961456 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14000, train error: 0.0961125 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14050, train error: 0.096145 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14100, train error: 0.0961953 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14150, train error: 0.0962304 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14200, train error: 0.0960667 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14250, train error: 0.0961036 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14300, train error: 0.0960977 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14350, train error: 0.096121 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14400, train error: 0.0962455 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14450, train error: 0.0961573 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14500, train error: 0.0961429 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14550, train error: 0.0960784 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14600, train error: 0.0961884 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14650, train error: 0.0961225 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14700, train error: 0.0961133 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14750, train error: 0.0960954 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14800, train error: 0.0961081 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14850, train error: 0.0961418 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14900, train error: 0.0961631 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 14950, train error: 0.0960917 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15000, train error: 0.0960945 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15050, train error: 0.096015 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15100, train error: 0.096218 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15150, train error: 0.0960431 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15200, train error: 0.0961553 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15250, train error: 0.0962102 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15300, train error: 0.0961079 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15350, train error: 0.0962231 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15400, train error: 0.096107 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15450, train error: 0.096101 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15500, train error: 0.0961069 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15550, train error: 0.0961411 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15600, train error: 0.0961455 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15650, train error: 0.0962512 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15700, train error: 0.0961842 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15750, train error: 0.0961859 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15800, train error: 0.0961411 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15850, train error: 0.0960527 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15900, train error: 0.0960982 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 15950, train error: 0.0960924 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16000, train error: 0.0960775 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16050, train error: 0.0961076 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16100, train error: 0.0961034 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16150, train error: 0.0961322 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16200, train error: 0.0961086 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16250, train error: 0.0960984 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16300, train error: 0.0961285 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16350, train error: 0.0960979 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16400, train error: 0.0960905 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16450, train error: 0.0961303 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16500, train error: 0.0961458 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16550, train error: 0.0961149 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16600, train error: 0.0961222 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16650, train error: 0.0961242 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16700, train error: 0.0961343 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16750, train error: 0.0961041 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16800, train error: 0.0961248 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16850, train error: 0.0960976 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16900, train error: 0.0960889 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 16950, train error: 0.0961236 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17000, train error: 0.0961432 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17050, train error: 0.0961249 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17100, train error: 0.096114 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17150, train error: 0.0961055 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17200, train error: 0.0960913 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17250, train error: 0.0960933 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17300, train error: 0.0961214 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17350, train error: 0.0960747 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17400, train error: 0.0960837 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17450, train error: 0.0961162 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17500, train error: 0.0961387 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17550, train error: 0.0961187 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17600, train error: 0.0960955 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17650, train error: 0.09615 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17700, train error: 0.0961441 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17750, train error: 0.096124 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17800, train error: 0.0961246 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17850, train error: 0.0961325 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17900, train error: 0.0961089 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 17950, train error: 0.0961081 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18000, train error: 0.0961269 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18050, train error: 0.0961168 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18100, train error: 0.096095 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18150, train error: 0.0961302 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18200, train error: 0.0961238 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18250, train error: 0.0961215 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18300, train error: 0.0960851 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18350, train error: 0.096108 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18400, train error: 0.0961155 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18450, train error: 0.0960944 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18500, train error: 0.0960915 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18550, train error: 0.0960834 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18600, train error: 0.0960946 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18650, train error: 0.0961224 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18700, train error: 0.0960953 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18750, train error: 0.0961223 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18800, train error: 0.0961326 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18850, train error: 0.0961296 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18900, train error: 0.0961235 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 18950, train error: 0.0961365 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19000, train error: 0.0961471 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19050, train error: 0.0961327 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19100, train error: 0.0961446 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19150, train error: 0.0961106 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19200, train error: 0.0961213 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19250, train error: 0.0961323 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19300, train error: 0.0961171 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19350, train error: 0.0961604 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19400, train error: 0.0960997 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19450, train error: 0.0961007 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19500, train error: 0.0961154 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19550, train error: 0.0961351 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19600, train error: 0.0961232 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19650, train error: 0.0960931 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19700, train error: 0.0961006 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19750, train error: 0.0961089 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19800, train error: 0.0961359 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19850, train error: 0.0961348 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19900, train error: 0.0960948 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 19950, train error: 0.0961102 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20000, train error: 0.0961111 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20050, train error: 0.0961425 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20100, train error: 0.0961254 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20150, train error: 0.0961116 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20200, train error: 0.0961322 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20250, train error: 0.0961301 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20300, train error: 0.0960983 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20350, train error: 0.0960994 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20400, train error: 0.0961584 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20450, train error: 0.0960997 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20500, train error: 0.0960816 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20550, train error: 0.0961292 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20600, train error: 0.0961549 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20650, train error: 0.0961114 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20700, train error: 0.0961482 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20750, train error: 0.0961187 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20800, train error: 0.0960944 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20850, train error: 0.0961259 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20900, train error: 0.0961206 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 20950, train error: 0.0961483 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21000, train error: 0.0961628 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21050, train error: 0.0961869 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21100, train error: 0.0961146 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21150, train error: 0.0961278 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21200, train error: 0.0961524 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21250, train error: 0.0961671 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21300, train error: 0.0961324 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21350, train error: 0.0960885 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21400, train error: 0.0962073 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21450, train error: 0.0961926 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21500, train error: 0.0961432 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21550, train error: 0.096107 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21600, train error: 0.0961079 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21650, train error: 0.0961398 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21700, train error: 0.0961477 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21750, train error: 0.0961416 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21800, train error: 0.096165 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21850, train error: 0.0961541 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21900, train error: 0.0961311 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 21950, train error: 0.0961168 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22000, train error: 0.0961221 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22050, train error: 0.0961468 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22100, train error: 0.0961251 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22150, train error: 0.0961415 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22200, train error: 0.0961704 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22250, train error: 0.0961553 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22300, train error: 0.0961521 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22350, train error: 0.0961798 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22400, train error: 0.0961478 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22450, train error: 0.0961678 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22500, train error: 0.0961438 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22550, train error: 0.096131 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22600, train error: 0.0961192 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22650, train error: 0.096119 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22700, train error: 0.0961276 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22750, train error: 0.0961014 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22800, train error: 0.0961199 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22850, train error: 0.0960999 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22900, train error: 0.0961415 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 22950, train error: 0.0961411 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 23000, train error: 0.0961153 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
step 23050, train error: 0.096129 | batch_size(step.eval(),arg.batch_size): 8490,8490 log_learning_rate: -2.5317208335781816 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6628822/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_NN_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_NN_8D_units14_Adam/hp_stid_80/mdl_ckpt.meta.tmp718b775d1ca9427da6b8d02f74657e39
