I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN Black
major: 3 minor: 5 memoryClockRate (GHz) 0.98
pciBusID 0000:02:00.0
Total memory: 5.97GiB
Free memory: 5.89GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN Black, pci bus id: 0000:02:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', 'slurm-6617425_154.out', '1', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617425_13.out', 'test_print.py', 'om_f_8D_single_relu', 'slurm-6617425_27.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'os_walk_test', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'output.file', 'hp_gpu', 'slurm-6617425_21.out', 'my_tf_proj.egg-info', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.104764 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 50, train error: 0.0985451 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 100, train error: 0.0976262 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 150, train error: 0.0975032 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 200, train error: 0.0974851 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 250, train error: 0.0975186 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 300, train error: 0.0974357 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 350, train error: 0.0974021 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 400, train error: 0.0973518 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 450, train error: 0.0973659 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 500, train error: 0.0973728 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 550, train error: 0.0973972 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 600, train error: 0.0974104 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 650, train error: 0.0974264 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 700, train error: 0.0974572 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 750, train error: 0.0975043 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 800, train error: 0.0975075 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 850, train error: 0.0975396 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 900, train error: 0.0975597 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 950, train error: 0.0975743 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1000, train error: 0.0975795 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1050, train error: 0.0976068 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1100, train error: 0.0976189 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1150, train error: 0.097622 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1200, train error: 0.0976517 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1250, train error: 0.0976655 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1300, train error: 0.0976522 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1350, train error: 0.0976781 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1400, train error: 0.0976968 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1450, train error: 0.0977134 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1500, train error: 0.0977096 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1550, train error: 0.0977022 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1600, train error: 0.0977269 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1650, train error: 0.0977997 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1700, train error: 0.0977353 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1750, train error: 0.0977522 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1800, train error: 0.0977431 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1850, train error: 0.0977767 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1900, train error: 0.0977817 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 1950, train error: 0.0977708 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2000, train error: 0.0978087 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2050, train error: 0.0977734 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2100, train error: 0.0978861 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2150, train error: 0.0977854 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2200, train error: 0.0979035 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2250, train error: 0.0977994 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2300, train error: 0.097846 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2350, train error: 0.0978869 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2400, train error: 0.0978755 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2450, train error: 0.097911 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2500, train error: 0.0979305 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2550, train error: 0.097897 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2600, train error: 0.0979527 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2650, train error: 0.0979466 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2700, train error: 0.097901 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2750, train error: 0.0979736 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2800, train error: 0.0979479 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2850, train error: 0.0979394 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2900, train error: 0.0980279 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 2950, train error: 0.0979782 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3000, train error: 0.0979819 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3050, train error: 0.098069 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3100, train error: 0.0980324 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3150, train error: 0.0980148 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3200, train error: 0.0980211 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3250, train error: 0.0980442 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3300, train error: 0.098036 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3350, train error: 0.0980221 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3400, train error: 0.0980145 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3450, train error: 0.0980186 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3500, train error: 0.098025 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3550, train error: 0.0980318 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3600, train error: 0.0980805 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3650, train error: 0.0980595 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3700, train error: 0.0980652 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3750, train error: 0.0980719 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3800, train error: 0.0980508 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3850, train error: 0.0980678 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3900, train error: 0.0980767 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 3950, train error: 0.0980685 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4000, train error: 0.0980584 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4050, train error: 0.0980591 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4100, train error: 0.0980898 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4150, train error: 0.0981054 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4200, train error: 0.0981025 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4250, train error: 0.0981021 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4300, train error: 0.0980908 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4350, train error: 0.0981112 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4400, train error: 0.0981125 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4450, train error: 0.0981052 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4500, train error: 0.0981225 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4550, train error: 0.0981072 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4600, train error: 0.0980941 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4650, train error: 0.0980964 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4700, train error: 0.0981108 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4750, train error: 0.0981388 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4800, train error: 0.0981511 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4850, train error: 0.0981539 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4900, train error: 0.0981612 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 4950, train error: 0.098152 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5000, train error: 0.0981444 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5050, train error: 0.0981486 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5100, train error: 0.0981389 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5150, train error: 0.0981438 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5200, train error: 0.0981861 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5250, train error: 0.0981777 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5300, train error: 0.0981653 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5350, train error: 0.0981501 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5400, train error: 0.0981824 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5450, train error: 0.098154 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5500, train error: 0.0981862 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5550, train error: 0.0981796 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5600, train error: 0.0981628 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5650, train error: 0.0981475 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5700, train error: 0.0981581 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5750, train error: 0.098172 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5800, train error: 0.0981936 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5850, train error: 0.0982002 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5900, train error: 0.0982058 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 5950, train error: 0.098214 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6000, train error: 0.098231 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6050, train error: 0.0982101 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6100, train error: 0.0982076 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6150, train error: 0.0982144 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6200, train error: 0.0982088 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6250, train error: 0.0981965 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6300, train error: 0.098195 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6350, train error: 0.0982003 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6400, train error: 0.0981998 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6450, train error: 0.0982021 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6500, train error: 0.0982014 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6550, train error: 0.0982034 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6600, train error: 0.0982107 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6650, train error: 0.0982119 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6700, train error: 0.0982123 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6750, train error: 0.0982117 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6800, train error: 0.0982113 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6850, train error: 0.0982135 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6900, train error: 0.0982167 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 6950, train error: 0.0982164 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7000, train error: 0.098216 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7050, train error: 0.0982169 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7100, train error: 0.0982155 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7150, train error: 0.0982154 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7200, train error: 0.0982137 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7250, train error: 0.0982093 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7300, train error: 0.0982098 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7350, train error: 0.0982123 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7400, train error: 0.0982135 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7450, train error: 0.0982106 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7500, train error: 0.0982094 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7550, train error: 0.0982068 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7600, train error: 0.0982036 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7650, train error: 0.0982031 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7700, train error: 0.0982044 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7750, train error: 0.0982056 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7800, train error: 0.0982102 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7850, train error: 0.0982152 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7900, train error: 0.0982177 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 7950, train error: 0.0982191 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8000, train error: 0.0982206 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8050, train error: 0.0982207 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8100, train error: 0.098218 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8150, train error: 0.0982205 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8200, train error: 0.0982221 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8250, train error: 0.0982164 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8300, train error: 0.0982146 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8350, train error: 0.098218 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8400, train error: 0.0982192 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8450, train error: 0.098221 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8500, train error: 0.0982184 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8550, train error: 0.0982182 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8600, train error: 0.0982147 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8650, train error: 0.0982157 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8700, train error: 0.0982243 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8750, train error: 0.0982298 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8800, train error: 0.0982267 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8850, train error: 0.0982237 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8900, train error: 0.0982236 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 8950, train error: 0.0982261 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9000, train error: 0.0982252 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9050, train error: 0.0982253 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9100, train error: 0.0982259 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9150, train error: 0.0982224 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9200, train error: 0.0982175 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9250, train error: 0.098222 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9300, train error: 0.0982242 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9350, train error: 0.0982239 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9400, train error: 0.0982226 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9450, train error: 0.0982213 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9500, train error: 0.0982206 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9550, train error: 0.0982209 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9600, train error: 0.0982219 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9650, train error: 0.0982221 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9700, train error: 0.0982222 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9750, train error: 0.0982216 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9800, train error: 0.098222 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9850, train error: 0.0982217 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9900, train error: 0.0982212 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 9950, train error: 0.0982213 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10000, train error: 0.0982211 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10050, train error: 0.0982208 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10100, train error: 0.0982207 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10150, train error: 0.0982205 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10200, train error: 0.0982206 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10250, train error: 0.0982216 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10300, train error: 0.0982221 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10350, train error: 0.098223 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10400, train error: 0.0982229 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10450, train error: 0.0982213 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10500, train error: 0.0982203 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10550, train error: 0.0982205 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10600, train error: 0.0982219 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10650, train error: 0.0982232 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10700, train error: 0.0982243 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10750, train error: 0.0982248 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10800, train error: 0.0982241 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10850, train error: 0.0982235 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10900, train error: 0.0982229 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 10950, train error: 0.0982229 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11000, train error: 0.0982233 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11050, train error: 0.0982237 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11100, train error: 0.0982243 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11150, train error: 0.0982253 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11200, train error: 0.0982266 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11250, train error: 0.0982264 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11300, train error: 0.0982266 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11350, train error: 0.0982267 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11400, train error: 0.0982269 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11450, train error: 0.0982264 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11500, train error: 0.0982266 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11550, train error: 0.0982271 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11600, train error: 0.0982272 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11650, train error: 0.0982272 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11700, train error: 0.0982273 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11750, train error: 0.0982276 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11800, train error: 0.0982279 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11850, train error: 0.098228 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11900, train error: 0.0982279 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 11950, train error: 0.0982282 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12000, train error: 0.0982287 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12050, train error: 0.0982289 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12100, train error: 0.09823 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12150, train error: 0.0982303 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12200, train error: 0.098229 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12250, train error: 0.0982287 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12300, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12350, train error: 0.0982301 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12400, train error: 0.0982306 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12450, train error: 0.0982305 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12500, train error: 0.0982304 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12550, train error: 0.0982302 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12600, train error: 0.0982301 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12650, train error: 0.0982301 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12700, train error: 0.09823 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12750, train error: 0.09823 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12800, train error: 0.0982299 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12850, train error: 0.0982298 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12900, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 12950, train error: 0.0982296 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13000, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13050, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13100, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13150, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13200, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13250, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13300, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13350, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13400, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13450, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13500, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13550, train error: 0.0982296 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13600, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13650, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13700, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13750, train error: 0.0982299 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13800, train error: 0.09823 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13850, train error: 0.0982301 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13900, train error: 0.0982302 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 13950, train error: 0.0982303 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14000, train error: 0.0982303 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14050, train error: 0.0982302 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14100, train error: 0.0982301 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14150, train error: 0.0982301 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14200, train error: 0.0982301 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14250, train error: 0.0982301 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14300, train error: 0.09823 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14350, train error: 0.0982299 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14400, train error: 0.0982299 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14450, train error: 0.0982298 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14500, train error: 0.0982296 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14550, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14600, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14650, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14700, train error: 0.0982292 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14750, train error: 0.0982292 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14800, train error: 0.0982292 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14850, train error: 0.0982292 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14900, train error: 0.0982292 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 14950, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15000, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15050, train error: 0.0982292 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15100, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15150, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15200, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15250, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15300, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15350, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15400, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15450, train error: 0.0982296 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15500, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15550, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15600, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15650, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15700, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15750, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15800, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15850, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15900, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 15950, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16000, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16050, train error: 0.0982297 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16100, train error: 0.0982296 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16150, train error: 0.0982296 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16200, train error: 0.0982296 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16250, train error: 0.0982296 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16300, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16350, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16400, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16450, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16500, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16550, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16600, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16650, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16700, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16750, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16800, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16850, train error: 0.0982295 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16900, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 16950, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17000, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17050, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17100, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17150, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17200, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17250, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17300, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17350, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17400, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17450, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17500, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17550, train error: 0.0982294 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17600, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17650, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17700, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17750, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17800, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17850, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17900, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 17950, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18000, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18050, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18100, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18150, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18200, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18250, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18300, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18350, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18400, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18450, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18500, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18550, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18600, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18650, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18700, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18750, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18800, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18850, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18900, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 18950, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 19000, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 19050, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 19100, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
step 19150, train error: 0.0982293 | batch_size(step.eval(),arg.batch_size): 10952,10952 log_learning_rate: -3.251078749805301 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6623657/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units5_Adam/hp_stid_149/mdl_ckpt.meta.tmp82285941147544f1afe9e4b85f392304
