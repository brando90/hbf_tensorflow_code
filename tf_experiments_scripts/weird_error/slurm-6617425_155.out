I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN Black
major: 3 minor: 5 memoryClockRate (GHz) 0.98
pciBusID 0000:84:00.0
Total memory: 5.97GiB
Free memory: 5.89GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN Black, pci bus id: 0000:84:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', 'slurm-6617425_154.out', '1', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617425_13.out', 'test_print.py', 'om_f_8D_single_relu', 'slurm-6617425_27.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'os_walk_test', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'output.file', 'hp_gpu', 'slurm-6617425_21.out', 'my_tf_proj.egg-info', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.103422 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 50, train error: 0.0985088 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 100, train error: 0.0977015 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 150, train error: 0.0981181 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 200, train error: 0.0983295 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 250, train error: 0.0981271 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 300, train error: 0.0981765 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 350, train error: 0.0984327 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 400, train error: 0.0988735 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 450, train error: 0.0992518 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 500, train error: 0.0995374 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 550, train error: 0.0998948 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 600, train error: 0.100285 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 650, train error: 0.100513 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 700, train error: 0.100408 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 750, train error: 0.101045 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 800, train error: 0.101826 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 850, train error: 0.101537 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 900, train error: 0.103822 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 950, train error: 0.102727 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1000, train error: 0.103719 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1050, train error: 0.105287 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1100, train error: 0.10579 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1150, train error: 0.106703 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1200, train error: 0.106347 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1250, train error: 0.10811 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1300, train error: 0.10827 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1350, train error: 0.108391 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1400, train error: 0.108783 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1450, train error: 0.109273 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1500, train error: 0.109406 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1550, train error: 0.111608 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1600, train error: 0.113646 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1650, train error: 0.112631 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1700, train error: 0.111807 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1750, train error: 0.115415 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1800, train error: 0.111166 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1850, train error: 0.11563 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1900, train error: 0.114685 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 1950, train error: 0.114996 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2000, train error: 0.115368 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2050, train error: 0.115028 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2100, train error: 0.117023 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2150, train error: 0.117304 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2200, train error: 0.115481 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2250, train error: 0.117964 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2300, train error: 0.11957 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2350, train error: 0.119592 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2400, train error: 0.118411 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2450, train error: 0.12089 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2500, train error: 0.125135 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2550, train error: 0.118732 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2600, train error: 0.120717 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2650, train error: 0.123059 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2700, train error: 0.128243 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2750, train error: 0.123774 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2800, train error: 0.125644 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2850, train error: 0.123143 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2900, train error: 0.127515 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 2950, train error: 0.123127 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3000, train error: 0.126484 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3050, train error: 0.125112 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3100, train error: 0.126061 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3150, train error: 0.126923 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3200, train error: 0.131636 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3250, train error: 0.126328 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3300, train error: 0.12713 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3350, train error: 0.127312 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3400, train error: 0.130704 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3450, train error: 0.12607 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3500, train error: 0.129922 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3550, train error: 0.129962 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3600, train error: 0.12707 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3650, train error: 0.130375 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3700, train error: 0.131215 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3750, train error: 0.129637 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3800, train error: 0.130322 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3850, train error: 0.132375 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3900, train error: 0.129668 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 3950, train error: 0.135551 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4000, train error: 0.130779 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4050, train error: 0.127141 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4100, train error: 0.128753 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4150, train error: 0.128807 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4200, train error: 0.129465 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4250, train error: 0.134147 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4300, train error: 0.129963 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4350, train error: 0.132084 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4400, train error: 0.130224 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4450, train error: 0.131053 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4500, train error: 0.1339 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4550, train error: 0.131539 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4600, train error: 0.134842 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4650, train error: 0.130509 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4700, train error: 0.134205 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4750, train error: 0.134044 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4800, train error: 0.130163 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4850, train error: 0.138325 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4900, train error: 0.134168 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 4950, train error: 0.133356 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5000, train error: 0.13077 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5050, train error: 0.133343 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5100, train error: 0.139406 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5150, train error: 0.136091 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5200, train error: 0.13257 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5250, train error: 0.132946 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5300, train error: 0.138005 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5350, train error: 0.135572 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5400, train error: 0.133762 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5450, train error: 0.130882 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5500, train error: 0.133934 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5550, train error: 0.135024 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5600, train error: 0.13636 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5650, train error: 0.135939 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5700, train error: 0.136463 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5750, train error: 0.135465 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5800, train error: 0.137204 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5850, train error: 0.139497 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5900, train error: 0.139394 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 5950, train error: 0.134921 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6000, train error: 0.133949 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6050, train error: 0.136819 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6100, train error: 0.136171 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6150, train error: 0.134965 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6200, train error: 0.135499 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6250, train error: 0.134714 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6300, train error: 0.136679 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6350, train error: 0.136978 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6400, train error: 0.134024 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6450, train error: 0.136682 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6500, train error: 0.134855 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6550, train error: 0.138085 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6600, train error: 0.134899 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6650, train error: 0.137298 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6700, train error: 0.137409 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6750, train error: 0.138613 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6800, train error: 0.13775 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6850, train error: 0.138064 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6900, train error: 0.141156 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 6950, train error: 0.139065 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7000, train error: 0.136401 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7050, train error: 0.137458 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7100, train error: 0.135993 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7150, train error: 0.140665 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7200, train error: 0.136345 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7250, train error: 0.139452 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7300, train error: 0.135163 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7350, train error: 0.135644 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7400, train error: 0.13277 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7450, train error: 0.13687 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7500, train error: 0.140438 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7550, train error: 0.136779 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7600, train error: 0.14133 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7650, train error: 0.140107 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7700, train error: 0.13697 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7750, train error: 0.139193 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7800, train error: 0.139472 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7850, train error: 0.138796 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7900, train error: 0.137484 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 7950, train error: 0.137111 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8000, train error: 0.1387 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8050, train error: 0.13913 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8100, train error: 0.141057 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8150, train error: 0.13909 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8200, train error: 0.139156 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8250, train error: 0.13955 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8300, train error: 0.138292 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8350, train error: 0.135521 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8400, train error: 0.138454 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8450, train error: 0.138441 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8500, train error: 0.138674 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8550, train error: 0.139639 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8600, train error: 0.140948 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8650, train error: 0.138982 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8700, train error: 0.137577 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8750, train error: 0.137256 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8800, train error: 0.137694 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8850, train error: 0.140805 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8900, train error: 0.13896 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 8950, train error: 0.137836 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9000, train error: 0.140529 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9050, train error: 0.139272 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9100, train error: 0.14087 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9150, train error: 0.138771 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9200, train error: 0.142916 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9250, train error: 0.138333 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9300, train error: 0.137843 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9350, train error: 0.139625 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9400, train error: 0.142217 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9450, train error: 0.139634 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9500, train error: 0.138895 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9550, train error: 0.140174 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9600, train error: 0.13996 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9650, train error: 0.139335 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9700, train error: 0.139685 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9750, train error: 0.142785 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9800, train error: 0.140247 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9850, train error: 0.141186 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9900, train error: 0.13973 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 9950, train error: 0.140485 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10000, train error: 0.139568 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10050, train error: 0.136768 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10100, train error: 0.141207 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10150, train error: 0.140653 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10200, train error: 0.137509 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10250, train error: 0.1398 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10300, train error: 0.141603 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10350, train error: 0.142765 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10400, train error: 0.138869 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10450, train error: 0.143873 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10500, train error: 0.135337 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10550, train error: 0.142342 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10600, train error: 0.138839 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10650, train error: 0.139048 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10700, train error: 0.142726 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10750, train error: 0.141754 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10800, train error: 0.141096 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10850, train error: 0.139952 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10900, train error: 0.140417 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 10950, train error: 0.141579 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11000, train error: 0.144465 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11050, train error: 0.142981 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11100, train error: 0.141529 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11150, train error: 0.140717 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11200, train error: 0.14035 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11250, train error: 0.139099 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11300, train error: 0.142627 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11350, train error: 0.14131 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11400, train error: 0.140959 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11450, train error: 0.140852 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11500, train error: 0.139706 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11550, train error: 0.141036 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11600, train error: 0.142444 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11650, train error: 0.142857 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11700, train error: 0.141986 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11750, train error: 0.143001 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11800, train error: 0.141221 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11850, train error: 0.143757 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11900, train error: 0.141195 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 11950, train error: 0.141491 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12000, train error: 0.138394 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12050, train error: 0.14386 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12100, train error: 0.141256 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12150, train error: 0.140926 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12200, train error: 0.143686 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12250, train error: 0.140995 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12300, train error: 0.142116 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12350, train error: 0.142271 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12400, train error: 0.142458 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12450, train error: 0.143234 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12500, train error: 0.143183 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12550, train error: 0.136697 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12600, train error: 0.146627 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12650, train error: 0.143856 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12700, train error: 0.13981 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12750, train error: 0.1461 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12800, train error: 0.142318 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12850, train error: 0.141092 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12900, train error: 0.145506 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 12950, train error: 0.14353 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13000, train error: 0.14529 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13050, train error: 0.142235 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13100, train error: 0.142894 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13150, train error: 0.143044 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13200, train error: 0.14009 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13250, train error: 0.142202 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13300, train error: 0.143777 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13350, train error: 0.14467 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13400, train error: 0.145009 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13450, train error: 0.145349 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13500, train error: 0.143182 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13550, train error: 0.14242 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13600, train error: 0.138798 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13650, train error: 0.144524 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13700, train error: 0.142824 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13750, train error: 0.143119 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13800, train error: 0.146771 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13850, train error: 0.14387 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13900, train error: 0.14042 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 13950, train error: 0.143196 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14000, train error: 0.14571 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14050, train error: 0.14609 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14100, train error: 0.143383 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14150, train error: 0.144252 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14200, train error: 0.140587 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14250, train error: 0.144847 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14300, train error: 0.143784 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14350, train error: 0.141432 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14400, train error: 0.144413 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14450, train error: 0.145286 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14500, train error: 0.144482 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14550, train error: 0.144211 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14600, train error: 0.144077 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14650, train error: 0.144133 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14700, train error: 0.146333 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14750, train error: 0.143184 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14800, train error: 0.14504 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14850, train error: 0.144978 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14900, train error: 0.141936 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 14950, train error: 0.144542 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15000, train error: 0.147924 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15050, train error: 0.147067 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15100, train error: 0.14283 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15150, train error: 0.144229 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15200, train error: 0.143578 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15250, train error: 0.146188 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15300, train error: 0.145123 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15350, train error: 0.146128 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15400, train error: 0.146998 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15450, train error: 0.143333 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15500, train error: 0.151162 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15550, train error: 0.14631 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15600, train error: 0.141698 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15650, train error: 0.144963 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15700, train error: 0.145756 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15750, train error: 0.143667 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15800, train error: 0.143988 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15850, train error: 0.144079 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15900, train error: 0.145486 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 15950, train error: 0.144723 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16000, train error: 0.145947 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16050, train error: 0.145648 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16100, train error: 0.146686 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16150, train error: 0.143361 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16200, train error: 0.146594 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16250, train error: 0.144921 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16300, train error: 0.146956 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16350, train error: 0.14357 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16400, train error: 0.143005 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16450, train error: 0.145177 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16500, train error: 0.143252 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16550, train error: 0.146307 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16600, train error: 0.145657 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16650, train error: 0.145966 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16700, train error: 0.146336 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16750, train error: 0.147788 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16800, train error: 0.145362 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16850, train error: 0.146526 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16900, train error: 0.146081 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 16950, train error: 0.145898 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17000, train error: 0.146713 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17050, train error: 0.147924 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17100, train error: 0.14414 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17150, train error: 0.147283 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17200, train error: 0.146911 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17250, train error: 0.147226 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17300, train error: 0.1449 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17350, train error: 0.145334 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17400, train error: 0.147722 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17450, train error: 0.14614 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17500, train error: 0.145297 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17550, train error: 0.146124 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17600, train error: 0.145517 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17650, train error: 0.148214 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17700, train error: 0.14617 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17750, train error: 0.146665 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17800, train error: 0.148455 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17850, train error: 0.146355 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17900, train error: 0.145826 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 17950, train error: 0.147343 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18000, train error: 0.147295 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18050, train error: 0.145932 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18100, train error: 0.142503 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18150, train error: 0.147708 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18200, train error: 0.146826 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18250, train error: 0.150109 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18300, train error: 0.146873 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18350, train error: 0.14359 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18400, train error: 0.149145 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18450, train error: 0.148445 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18500, train error: 0.146526 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18550, train error: 0.144708 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18600, train error: 0.147164 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18650, train error: 0.147484 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18700, train error: 0.148504 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18750, train error: 0.148058 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18800, train error: 0.147023 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18850, train error: 0.144333 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18900, train error: 0.148472 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 18950, train error: 0.148125 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 19000, train error: 0.145278 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 19050, train error: 0.146748 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
step 19100, train error: 0.148071 | batch_size(step.eval(),arg.batch_size): 3724,3724 log_learning_rate: -2.432677446367072 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6623663/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units5_Adam/hp_stid_155/mdl_ckpt.meta.tmpe01e90c6af554d63a9bf769d75f96b44
