I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:06:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:06:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617426_141.out', 'slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'slurm-6617426_60.out', 'slurm-6617426_161.out', 'slurm-6617426_66.out', 'slurm-6617426_117.out', 'slurm-6617426_136.out', 'slurm-6617426_54.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'slurm-6617548_84.out', 'pickle_file', 'slurm-6617425_154.out', 'slurm-6617426_181.out', 'slurm-6617426_160.out', '1', 'slurm-6617426_142.out', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'slurm-6617426_65.out', 'slurm-6617426_56.out', 'h_add_data_and_mesh.npz', 'slurm-6617548_83.out', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'slurm-6617426_70.out', 'slurm-6617548_78.out', 'slurm-6617426_74.out', 'slurm-6617426_162.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', 'slurm-6617548_86.out', '.swn', 'slurm-6617426_12.out', 'slurm-6617548_80.out', 'slurm-6617425_13.out', 'test_print.py', 'slurm-6617426_123.out', 'slurm-6617426_115.out', 'om_f_8D_single_relu', 'slurm-6617426_116.out', 'slurm-6617426_73.out', 'slurm-6617425_27.out', 'slurm-6617426_53.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'slurm-6617426_134.out', 'slurm-6617426_62.out', 'slurm-6617426_121.out', 'slurm-6617426_122.out', 'slurm-6617426_119.out', 'slurm-6617426_69.out', 'batch_main.py', 'slurm-6617426_127.out', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'slurm-6617548_81.out', 'slurm-6617548_77.out', 'slurm-6617426_68.out', 'os_walk_test', 'slurm-6617426_72.out', 'slurm-6617426_135.out', 'slurm-6617426_159.out', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617426_71.out', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'slurm-6617426_57.out', 'slurm-6617426_143.out', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'slurm-6617426_52.out', 'slurm-6617548_79.out', 'slurm-6617426_58.out', 'output.file', 'slurm-6617426_137.out', 'slurm-6617426_124.out', 'hp_gpu', 'slurm-6617426_144.out', 'slurm-6617425_21.out', 'slurm-6617426_145.out', 'slurm-6617425_167.out', 'my_tf_proj.egg-info', 'slurm-6617426_120.out', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617426_140.out', 'slurm-6617425_3.out', 'slurm-6617548_76.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'slurm-6617426_163.out', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617426_126.out', 'slurm-6617425_22.out', 'slurm-6617548_85.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'slurm-6617548_82.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'slurm-6617426_139.out', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617426_63.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617426_64.out', 'slurm-6617426_146.out', 'slurm-6617426_129.out', 'slurm-6617425_19.out', 'slurm-6617426_167.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'slurm-6617426_128.out', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617426_67.out', 'slurm-6617426_59.out', 'slurm-6617426_177.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'slurm-6617426_61.out', 'slurm-6617426_118.out', 'slurm-6617426_138.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617426_55.out', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
l  2
+++> std mu for inits_C:  [0, 0.910084431217663]
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 3.54826 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 50, train error: 0.356397 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 100, train error: 0.184222 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 150, train error: 0.143152 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 200, train error: 0.121973 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 250, train error: 0.110573 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 300, train error: 0.103725 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 350, train error: 0.102517 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 400, train error: 0.100614 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 450, train error: 0.0999123 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 500, train error: 0.0989135 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 550, train error: 0.0986183 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 600, train error: 0.0988436 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 650, train error: 0.0993276 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 700, train error: 0.0996135 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 750, train error: 0.099763 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 800, train error: 0.0997829 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 850, train error: 0.0996862 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 900, train error: 0.0997627 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 950, train error: 0.100138 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1000, train error: 0.100101 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1050, train error: 0.100156 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1100, train error: 0.100296 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1150, train error: 0.100249 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1200, train error: 0.100807 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1250, train error: 0.101056 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1300, train error: 0.101049 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1350, train error: 0.101521 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1400, train error: 0.101051 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1450, train error: 0.101216 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1500, train error: 0.101288 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1550, train error: 0.102488 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1600, train error: 0.102311 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1650, train error: 0.102316 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1700, train error: 0.102564 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1750, train error: 0.102481 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1800, train error: 0.102721 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1850, train error: 0.103602 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1900, train error: 0.1032 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 1950, train error: 0.102738 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2000, train error: 0.103657 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2050, train error: 0.103574 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2100, train error: 0.102695 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2150, train error: 0.104453 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2200, train error: 0.103189 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2250, train error: 0.10415 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2300, train error: 0.103555 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2350, train error: 0.104482 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2400, train error: 0.103642 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2450, train error: 0.104876 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2500, train error: 0.103931 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2550, train error: 0.104753 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2600, train error: 0.10476 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2650, train error: 0.106392 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2700, train error: 0.107944 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2750, train error: 0.106806 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2800, train error: 0.106092 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2850, train error: 0.106852 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2900, train error: 0.106934 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 2950, train error: 0.107162 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3000, train error: 0.10833 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3050, train error: 0.107298 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3100, train error: 0.107267 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3150, train error: 0.107269 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3200, train error: 0.107833 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3250, train error: 0.108205 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3300, train error: 0.109414 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3350, train error: 0.107776 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3400, train error: 0.108897 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3450, train error: 0.108257 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3500, train error: 0.109802 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3550, train error: 0.110412 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3600, train error: 0.110308 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3650, train error: 0.109815 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3700, train error: 0.109903 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3750, train error: 0.111503 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3800, train error: 0.113012 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3850, train error: 0.113094 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3900, train error: 0.112221 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 3950, train error: 0.113571 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4000, train error: 0.112296 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4050, train error: 0.11278 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4100, train error: 0.115623 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4150, train error: 0.114087 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4200, train error: 0.114565 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4250, train error: 0.115808 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4300, train error: 0.114513 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4350, train error: 0.113361 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4400, train error: 0.115994 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4450, train error: 0.116506 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4500, train error: 0.115522 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4550, train error: 0.11808 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4600, train error: 0.115981 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4650, train error: 0.1153 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4700, train error: 0.117782 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4750, train error: 0.116129 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4800, train error: 0.118171 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4850, train error: 0.117236 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4900, train error: 0.119397 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 4950, train error: 0.11774 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5000, train error: 0.119767 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5050, train error: 0.117602 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5100, train error: 0.120991 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5150, train error: 0.120503 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5200, train error: 0.118737 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5250, train error: 0.11886 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5300, train error: 0.118172 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5350, train error: 0.119747 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5400, train error: 0.116951 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5450, train error: 0.117953 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5500, train error: 0.120226 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5550, train error: 0.122466 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5600, train error: 0.121675 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5650, train error: 0.11948 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5700, train error: 0.119219 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5750, train error: 0.119123 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5800, train error: 0.120931 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5850, train error: 0.121539 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5900, train error: 0.120762 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 5950, train error: 0.121694 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6000, train error: 0.121071 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6050, train error: 0.121299 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6100, train error: 0.121813 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6150, train error: 0.12231 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6200, train error: 0.121387 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6250, train error: 0.121609 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6300, train error: 0.120474 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6350, train error: 0.1226 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6400, train error: 0.121453 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6450, train error: 0.12237 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6500, train error: 0.122574 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6550, train error: 0.122249 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6600, train error: 0.122478 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6650, train error: 0.121777 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6700, train error: 0.122022 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6750, train error: 0.123145 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6800, train error: 0.122299 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6850, train error: 0.121443 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6900, train error: 0.121405 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 6950, train error: 0.122357 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7000, train error: 0.122365 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7050, train error: 0.120995 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7100, train error: 0.121607 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7150, train error: 0.122313 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7200, train error: 0.122857 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7250, train error: 0.122532 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7300, train error: 0.123197 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7350, train error: 0.122676 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7400, train error: 0.122549 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7450, train error: 0.123348 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7500, train error: 0.123228 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7550, train error: 0.121297 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7600, train error: 0.122138 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7650, train error: 0.123782 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7700, train error: 0.120972 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7750, train error: 0.122957 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7800, train error: 0.122033 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7850, train error: 0.123594 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7900, train error: 0.124475 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 7950, train error: 0.122476 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8000, train error: 0.123477 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8050, train error: 0.124416 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8100, train error: 0.123683 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8150, train error: 0.123195 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8200, train error: 0.122529 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8250, train error: 0.122078 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8300, train error: 0.124484 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8350, train error: 0.123227 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8400, train error: 0.122648 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8450, train error: 0.122864 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8500, train error: 0.123405 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8550, train error: 0.123538 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8600, train error: 0.122932 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8650, train error: 0.12379 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8700, train error: 0.124901 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8750, train error: 0.124426 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8800, train error: 0.123607 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8850, train error: 0.124618 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8900, train error: 0.123423 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 8950, train error: 0.124012 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9000, train error: 0.124042 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9050, train error: 0.123835 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9100, train error: 0.122903 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9150, train error: 0.125026 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9200, train error: 0.12461 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9250, train error: 0.124265 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9300, train error: 0.124788 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9350, train error: 0.124179 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9400, train error: 0.124668 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9450, train error: 0.124745 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9500, train error: 0.124137 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9550, train error: 0.125844 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9600, train error: 0.12431 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9650, train error: 0.125338 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9700, train error: 0.126064 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9750, train error: 0.123729 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9800, train error: 0.123959 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9850, train error: 0.125188 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9900, train error: 0.124472 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 9950, train error: 0.125033 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10000, train error: 0.125336 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10050, train error: 0.125237 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10100, train error: 0.125662 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10150, train error: 0.125273 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10200, train error: 0.124324 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10250, train error: 0.126114 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10300, train error: 0.126733 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10350, train error: 0.125586 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10400, train error: 0.126889 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10450, train error: 0.125026 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10500, train error: 0.12507 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10550, train error: 0.125244 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10600, train error: 0.124949 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10650, train error: 0.125585 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10700, train error: 0.125726 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10750, train error: 0.12697 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10800, train error: 0.126831 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10850, train error: 0.125541 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10900, train error: 0.124821 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 10950, train error: 0.124647 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11000, train error: 0.125852 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11050, train error: 0.125692 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11100, train error: 0.126266 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11150, train error: 0.125673 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11200, train error: 0.125535 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11250, train error: 0.12552 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11300, train error: 0.126354 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11350, train error: 0.126074 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11400, train error: 0.124961 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11450, train error: 0.126695 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11500, train error: 0.126909 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11550, train error: 0.126291 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11600, train error: 0.125582 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11650, train error: 0.125947 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11700, train error: 0.125917 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11750, train error: 0.126507 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11800, train error: 0.125551 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11850, train error: 0.125693 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11900, train error: 0.126643 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 11950, train error: 0.126438 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12000, train error: 0.126018 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12050, train error: 0.125882 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12100, train error: 0.12669 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12150, train error: 0.126824 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12200, train error: 0.126911 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12250, train error: 0.125847 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12300, train error: 0.126922 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12350, train error: 0.127318 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12400, train error: 0.127105 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12450, train error: 0.126517 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12500, train error: 0.125307 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12550, train error: 0.127177 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12600, train error: 0.126546 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12650, train error: 0.126132 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12700, train error: 0.127101 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12750, train error: 0.127694 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12800, train error: 0.126858 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12850, train error: 0.12646 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12900, train error: 0.126808 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 12950, train error: 0.126208 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13000, train error: 0.126767 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13050, train error: 0.126 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13100, train error: 0.126622 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13150, train error: 0.127174 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13200, train error: 0.126089 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13250, train error: 0.12549 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13300, train error: 0.125913 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13350, train error: 0.12575 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13400, train error: 0.126497 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13450, train error: 0.125945 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13500, train error: 0.126588 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13550, train error: 0.127095 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13600, train error: 0.125836 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13650, train error: 0.126136 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13700, train error: 0.125963 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13750, train error: 0.126209 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13800, train error: 0.126247 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13850, train error: 0.126123 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13900, train error: 0.125782 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 13950, train error: 0.125713 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14000, train error: 0.12586 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14050, train error: 0.12595 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14100, train error: 0.126593 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14150, train error: 0.12656 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14200, train error: 0.126589 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14250, train error: 0.126825 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14300, train error: 0.126433 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14350, train error: 0.126616 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14400, train error: 0.126566 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14450, train error: 0.126861 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14500, train error: 0.126975 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14550, train error: 0.126869 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14600, train error: 0.126394 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14650, train error: 0.126677 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14700, train error: 0.126974 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14750, train error: 0.127963 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14800, train error: 0.127247 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14850, train error: 0.127422 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14900, train error: 0.127736 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 14950, train error: 0.126983 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15000, train error: 0.126798 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15050, train error: 0.126539 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15100, train error: 0.126762 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15150, train error: 0.127381 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15200, train error: 0.12697 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15250, train error: 0.126516 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15300, train error: 0.127161 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15350, train error: 0.12686 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15400, train error: 0.127464 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15450, train error: 0.12776 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15500, train error: 0.126882 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15550, train error: 0.126956 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15600, train error: 0.127325 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15650, train error: 0.127172 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15700, train error: 0.12701 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15750, train error: 0.127307 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15800, train error: 0.126917 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15850, train error: 0.12698 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15900, train error: 0.12701 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 15950, train error: 0.127097 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16000, train error: 0.126756 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16050, train error: 0.127351 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16100, train error: 0.12763 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16150, train error: 0.12807 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16200, train error: 0.127658 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16250, train error: 0.127742 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16300, train error: 0.127608 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16350, train error: 0.12698 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16400, train error: 0.127179 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16450, train error: 0.127546 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16500, train error: 0.127471 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16550, train error: 0.127547 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16600, train error: 0.127465 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16650, train error: 0.127562 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16700, train error: 0.127967 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16750, train error: 0.127945 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16800, train error: 0.127211 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16850, train error: 0.126796 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16900, train error: 0.126611 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 16950, train error: 0.126743 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17000, train error: 0.127288 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17050, train error: 0.127054 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17100, train error: 0.126972 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17150, train error: 0.127184 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17200, train error: 0.126916 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17250, train error: 0.12712 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17300, train error: 0.127332 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17350, train error: 0.12754 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17400, train error: 0.127134 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17450, train error: 0.127152 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17500, train error: 0.127251 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17550, train error: 0.127166 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17600, train error: 0.127199 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17650, train error: 0.127424 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17700, train error: 0.127337 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17750, train error: 0.127577 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17800, train error: 0.12776 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17850, train error: 0.127793 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17900, train error: 0.128404 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 17950, train error: 0.127952 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18000, train error: 0.127797 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18050, train error: 0.127942 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18100, train error: 0.1275 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18150, train error: 0.127392 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18200, train error: 0.127276 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18250, train error: 0.127287 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18300, train error: 0.127442 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18350, train error: 0.127689 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18400, train error: 0.128039 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18450, train error: 0.127754 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18500, train error: 0.12787 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18550, train error: 0.1279 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18600, train error: 0.127454 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18650, train error: 0.127606 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18700, train error: 0.127545 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18750, train error: 0.127346 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18800, train error: 0.127092 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18850, train error: 0.127719 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18900, train error: 0.127469 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 18950, train error: 0.127566 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19000, train error: 0.128169 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19050, train error: 0.128173 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19100, train error: 0.128346 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19150, train error: 0.127846 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19200, train error: 0.127616 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19250, train error: 0.127734 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19300, train error: 0.127633 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19350, train error: 0.127698 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19400, train error: 0.12796 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19450, train error: 0.127841 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19500, train error: 0.127815 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19550, train error: 0.127802 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19600, train error: 0.127584 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19650, train error: 0.127784 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19700, train error: 0.127914 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19750, train error: 0.127675 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19800, train error: 0.127888 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19850, train error: 0.127731 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19900, train error: 0.127758 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 19950, train error: 0.127702 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20000, train error: 0.127736 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20050, train error: 0.128021 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20100, train error: 0.127874 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20150, train error: 0.128036 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20200, train error: 0.127756 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20250, train error: 0.127916 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20300, train error: 0.127877 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20350, train error: 0.128165 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20400, train error: 0.128006 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20450, train error: 0.127951 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20500, train error: 0.127984 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20550, train error: 0.127582 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20600, train error: 0.127896 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20650, train error: 0.128168 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20700, train error: 0.127858 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20750, train error: 0.128012 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20800, train error: 0.127712 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20850, train error: 0.127673 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20900, train error: 0.127948 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 20950, train error: 0.127652 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21000, train error: 0.127912 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21050, train error: 0.128065 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21100, train error: 0.12809 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21150, train error: 0.128317 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21200, train error: 0.128018 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21250, train error: 0.127743 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21300, train error: 0.127736 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21350, train error: 0.127849 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21400, train error: 0.127981 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21450, train error: 0.128261 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21500, train error: 0.128275 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21550, train error: 0.128041 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21600, train error: 0.128039 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21650, train error: 0.127763 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21700, train error: 0.127806 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21750, train error: 0.127705 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21800, train error: 0.127728 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21850, train error: 0.127768 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21900, train error: 0.12789 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 21950, train error: 0.127937 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22000, train error: 0.127831 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22050, train error: 0.1281 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22100, train error: 0.127996 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22150, train error: 0.127924 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22200, train error: 0.127856 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22250, train error: 0.12787 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22300, train error: 0.127811 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22350, train error: 0.128113 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22400, train error: 0.12826 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22450, train error: 0.128235 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22500, train error: 0.128133 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22550, train error: 0.128107 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22600, train error: 0.128067 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22650, train error: 0.12803 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22700, train error: 0.128147 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22750, train error: 0.12802 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22800, train error: 0.127935 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22850, train error: 0.127985 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22900, train error: 0.127895 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 22950, train error: 0.127989 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 23000, train error: 0.128063 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 23050, train error: 0.128137 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 23100, train error: 0.128117 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 23150, train error: 0.12804 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
step 23200, train error: 0.128022 | batch_size(step.eval(),arg.batch_size): 3247,3247 log_learning_rate: -1.6265915668823057 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6628819/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1329, in save
    self.last_checkpoints, latest_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 745, in update_checkpoint_state
    text_format.MessageToString(ckpt))
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_NN_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_NN_8D_units14_Adam/hp_stid_77/checkpoint.tmp4cbedd4a0bb54c328480fa241c821377
