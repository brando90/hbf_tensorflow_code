I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:06:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:06:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617426_141.out', 'slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'slurm-6617426_60.out', 'slurm-6617426_161.out', 'slurm-6617426_66.out', 'slurm-6617426_117.out', 'slurm-6617426_136.out', 'slurm-6617426_54.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'slurm-6617548_84.out', 'pickle_file', 'slurm-6617425_154.out', 'slurm-6617426_181.out', 'slurm-6617426_160.out', '1', 'slurm-6617426_142.out', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617607_176.out', 'slurm-6617425_20.out', 'slurm-6617426_65.out', 'slurm-6617426_56.out', 'h_add_data_and_mesh.npz', 'slurm-6617548_83.out', 'slurm-6617548_87.out', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'slurm-6617426_70.out', 'slurm-6617548_78.out', 'slurm-6617426_74.out', 'slurm-6617426_162.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', 'slurm-6617548_86.out', '.swn', 'slurm-6617426_12.out', 'slurm-6617548_80.out', 'slurm-6617425_13.out', 'test_print.py', 'slurm-6617426_123.out', 'slurm-6617426_115.out', 'om_f_8D_single_relu', 'slurm-6617426_116.out', 'slurm-6617426_73.out', 'slurm-6617425_27.out', 'slurm-6617426_53.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'slurm-6617426_134.out', 'slurm-6617426_62.out', 'slurm-6617426_121.out', 'slurm-6617426_122.out', 'slurm-6617426_119.out', 'slurm-6617426_69.out', 'batch_main.py', 'slurm-6617426_127.out', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'slurm-6617548_81.out', 'slurm-6617548_77.out', 'slurm-6617426_68.out', 'os_walk_test', 'slurm-6617426_72.out', 'slurm-6617426_135.out', 'slurm-6617426_159.out', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617426_71.out', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'slurm-6617426_57.out', 'slurm-6617426_143.out', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'slurm-6617426_52.out', 'slurm-6617548_79.out', 'slurm-6617426_58.out', 'output.file', 'slurm-6617426_137.out', 'slurm-6617426_124.out', 'hp_gpu', 'slurm-6617426_144.out', 'slurm-6617425_21.out', 'slurm-6617426_145.out', 'slurm-6617425_167.out', 'my_tf_proj.egg-info', 'slurm-6617426_120.out', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617426_140.out', 'slurm-6617425_3.out', 'slurm-6617548_76.out', 'slurm-6617425_9.out', 'slurm-6617548_88.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'slurm-6617426_163.out', 'extract_results_matplotlib.py', 'slurm-6617548_111.out', '.swp', 'slurm-6617425_162.out', 'slurm-6617548_90.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617426_126.out', 'slurm-6617425_22.out', 'slurm-6617548_85.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'slurm-6617548_82.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'slurm-6617426_139.out', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617548_97.out', 'slurm-6617425_6.out', 'slurm-6617426_63.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617426_64.out', 'slurm-6617426_146.out', 'slurm-6617426_129.out', 'slurm-6617425_19.out', 'slurm-6617426_167.out', 'slurm-6617548_162.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'slurm-6617426_128.out', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617426_67.out', 'slurm-6617426_59.out', 'slurm-6617426_177.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'slurm-6617426_61.out', 'slurm-6617426_118.out', 'slurm-6617426_138.out', 'slurm-6617548_95.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617426_55.out', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
l  2
+++> std mu for inits_C:  [0, 2.6209799038271635]
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 24.0117 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 50, train error: 13.4353 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 100, train error: 7.47239 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 150, train error: 4.25086 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 200, train error: 2.4167 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 250, train error: 1.51317 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 300, train error: 1.26445 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 350, train error: 1.21046 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 400, train error: 1.04031 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 450, train error: 0.818851 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 500, train error: 0.672101 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 550, train error: 0.597913 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 600, train error: 0.558889 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 650, train error: 0.539957 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 700, train error: 0.521056 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 750, train error: 0.498594 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 800, train error: 0.481059 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 850, train error: 0.467882 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 900, train error: 0.457568 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 950, train error: 0.44962 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1000, train error: 0.441447 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1050, train error: 0.433923 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1100, train error: 0.427189 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1150, train error: 0.420862 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1200, train error: 0.414891 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1250, train error: 0.408577 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1300, train error: 0.402388 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1350, train error: 0.395858 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1400, train error: 0.390483 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1450, train error: 0.384629 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1500, train error: 0.378449 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1550, train error: 0.373065 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1600, train error: 0.36764 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1650, train error: 0.361356 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1700, train error: 0.356133 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1750, train error: 0.349944 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1800, train error: 0.344651 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1850, train error: 0.339266 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1900, train error: 0.333487 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 1950, train error: 0.328217 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2000, train error: 0.322926 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2050, train error: 0.319332 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2100, train error: 0.313363 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2150, train error: 0.30876 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2200, train error: 0.304641 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2250, train error: 0.300015 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2300, train error: 0.29569 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2350, train error: 0.291149 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2400, train error: 0.287199 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2450, train error: 0.28344 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2500, train error: 0.280023 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2550, train error: 0.276188 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2600, train error: 0.271979 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2650, train error: 0.268368 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2700, train error: 0.264129 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2750, train error: 0.261461 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2800, train error: 0.257379 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2850, train error: 0.253755 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2900, train error: 0.250593 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 2950, train error: 0.247574 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3000, train error: 0.244155 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3050, train error: 0.2411 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3100, train error: 0.238546 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3150, train error: 0.235015 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3200, train error: 0.232003 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3250, train error: 0.22969 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3300, train error: 0.227239 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3350, train error: 0.224515 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3400, train error: 0.221451 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3450, train error: 0.218882 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3500, train error: 0.216279 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3550, train error: 0.214208 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3600, train error: 0.212746 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3650, train error: 0.209488 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3700, train error: 0.208377 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3750, train error: 0.205295 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3800, train error: 0.203952 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3850, train error: 0.202725 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3900, train error: 0.200342 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 3950, train error: 0.199377 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4000, train error: 0.197375 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4050, train error: 0.196037 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4100, train error: 0.194266 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4150, train error: 0.192764 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4200, train error: 0.190946 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4250, train error: 0.190474 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4300, train error: 0.188441 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4350, train error: 0.186903 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4400, train error: 0.186039 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4450, train error: 0.184251 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4500, train error: 0.182952 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4550, train error: 0.182375 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4600, train error: 0.179657 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4650, train error: 0.179069 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4700, train error: 0.177667 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4750, train error: 0.177218 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4800, train error: 0.174814 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4850, train error: 0.174297 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4900, train error: 0.17259 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 4950, train error: 0.17109 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5000, train error: 0.170025 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5050, train error: 0.168082 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5100, train error: 0.167138 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5150, train error: 0.165532 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5200, train error: 0.164244 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5250, train error: 0.16331 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5300, train error: 0.161321 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5350, train error: 0.160777 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5400, train error: 0.15923 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5450, train error: 0.158499 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5500, train error: 0.156781 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5550, train error: 0.156755 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5600, train error: 0.15478 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5650, train error: 0.153857 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5700, train error: 0.15308 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5750, train error: 0.152082 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5800, train error: 0.150226 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5850, train error: 0.150125 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5900, train error: 0.149067 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 5950, train error: 0.14808 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6000, train error: 0.146899 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6050, train error: 0.145754 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6100, train error: 0.144923 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6150, train error: 0.143976 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6200, train error: 0.142638 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6250, train error: 0.142205 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6300, train error: 0.141178 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6350, train error: 0.140238 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6400, train error: 0.139388 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6450, train error: 0.138701 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6500, train error: 0.137381 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6550, train error: 0.137366 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6600, train error: 0.136611 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6650, train error: 0.135582 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6700, train error: 0.135469 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6750, train error: 0.134797 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6800, train error: 0.133378 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6850, train error: 0.133038 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6900, train error: 0.133323 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 6950, train error: 0.132496 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7000, train error: 0.131682 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7050, train error: 0.132007 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7100, train error: 0.131552 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7150, train error: 0.1308 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7200, train error: 0.130339 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7250, train error: 0.130025 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7300, train error: 0.129653 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7350, train error: 0.128881 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7400, train error: 0.129122 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7450, train error: 0.128049 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7500, train error: 0.127548 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7550, train error: 0.12736 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7600, train error: 0.126995 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7650, train error: 0.126316 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7700, train error: 0.12542 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7750, train error: 0.126035 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7800, train error: 0.125899 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7850, train error: 0.125337 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7900, train error: 0.125724 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 7950, train error: 0.125596 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8000, train error: 0.12537 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8050, train error: 0.125537 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8100, train error: 0.125551 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8150, train error: 0.125393 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8200, train error: 0.125329 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8250, train error: 0.125317 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8300, train error: 0.125324 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8350, train error: 0.125551 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8400, train error: 0.125254 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8450, train error: 0.12521 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8500, train error: 0.125404 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8550, train error: 0.124938 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8600, train error: 0.125228 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8650, train error: 0.125094 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8700, train error: 0.125007 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8750, train error: 0.124817 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8800, train error: 0.124879 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8850, train error: 0.124646 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8900, train error: 0.124666 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 8950, train error: 0.124511 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9000, train error: 0.124776 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9050, train error: 0.12445 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9100, train error: 0.124478 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9150, train error: 0.12435 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9200, train error: 0.124384 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9250, train error: 0.124252 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9300, train error: 0.124173 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9350, train error: 0.123914 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9400, train error: 0.123991 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9450, train error: 0.124094 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9500, train error: 0.123897 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9550, train error: 0.124054 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9600, train error: 0.123975 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9650, train error: 0.123804 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9700, train error: 0.124214 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9750, train error: 0.123911 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9800, train error: 0.12425 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9850, train error: 0.124012 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9900, train error: 0.123635 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 9950, train error: 0.123485 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10000, train error: 0.123536 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10050, train error: 0.123357 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10100, train error: 0.123492 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10150, train error: 0.123631 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10200, train error: 0.123608 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10250, train error: 0.123415 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10300, train error: 0.123193 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10350, train error: 0.123269 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10400, train error: 0.123067 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10450, train error: 0.123347 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10500, train error: 0.123455 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10550, train error: 0.123315 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10600, train error: 0.123364 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10650, train error: 0.123147 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10700, train error: 0.123094 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10750, train error: 0.122863 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10800, train error: 0.122896 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10850, train error: 0.122846 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10900, train error: 0.122843 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 10950, train error: 0.122747 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11000, train error: 0.12288 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11050, train error: 0.122986 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11100, train error: 0.122835 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11150, train error: 0.122928 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11200, train error: 0.122927 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11250, train error: 0.122762 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11300, train error: 0.122761 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11350, train error: 0.122363 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11400, train error: 0.122906 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11450, train error: 0.122522 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11500, train error: 0.122572 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11550, train error: 0.122321 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11600, train error: 0.122472 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11650, train error: 0.122306 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11700, train error: 0.122333 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11750, train error: 0.122349 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11800, train error: 0.122142 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11850, train error: 0.122191 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11900, train error: 0.122328 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 11950, train error: 0.122036 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12000, train error: 0.122496 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12050, train error: 0.121988 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12100, train error: 0.122334 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12150, train error: 0.122333 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12200, train error: 0.121977 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12250, train error: 0.122239 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12300, train error: 0.122019 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12350, train error: 0.121984 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12400, train error: 0.121911 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12450, train error: 0.122119 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12500, train error: 0.121988 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12550, train error: 0.121861 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12600, train error: 0.121994 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12650, train error: 0.121718 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12700, train error: 0.121657 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12750, train error: 0.121728 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12800, train error: 0.121437 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12850, train error: 0.121646 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12900, train error: 0.121503 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 12950, train error: 0.121404 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13000, train error: 0.121736 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13050, train error: 0.121463 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13100, train error: 0.121691 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13150, train error: 0.121447 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13200, train error: 0.121538 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13250, train error: 0.121393 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13300, train error: 0.121276 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13350, train error: 0.12149 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13400, train error: 0.121483 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13450, train error: 0.121655 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13500, train error: 0.12126 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13550, train error: 0.121298 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13600, train error: 0.121291 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13650, train error: 0.121066 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13700, train error: 0.121022 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13750, train error: 0.121085 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13800, train error: 0.121283 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13850, train error: 0.120819 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13900, train error: 0.121042 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 13950, train error: 0.120786 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 14000, train error: 0.120955 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 14050, train error: 0.121107 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 14100, train error: 0.121132 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
step 14150, train error: 0.120818 | batch_size(step.eval(),arg.batch_size): 1910,1910 log_learning_rate: -3.512985661905614 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6629749/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_NN_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_NN_8D_units35_Adam/hp_stid_176/mdl_ckpt.meta.tmp795851caa5774ff79c59d467edf8cc20
