I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:81:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:81:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', 'slurm-6617425_154.out', '1', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617425_13.out', 'test_print.py', 'om_f_8D_single_relu', 'slurm-6617425_27.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'os_walk_test', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'output.file', 'hp_gpu', 'slurm-6617425_21.out', 'my_tf_proj.egg-info', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.103753 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 50, train error: 0.0991496 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 100, train error: 0.0983105 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 150, train error: 0.0975875 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 200, train error: 0.0976054 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 250, train error: 0.0976196 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 300, train error: 0.0975205 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 350, train error: 0.0974641 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 400, train error: 0.0974656 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 450, train error: 0.0974593 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 500, train error: 0.0974375 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 550, train error: 0.097433 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 600, train error: 0.0974397 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 650, train error: 0.0974348 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 700, train error: 0.0974474 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 750, train error: 0.0974334 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 800, train error: 0.0974618 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 850, train error: 0.0974517 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 900, train error: 0.0974608 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 950, train error: 0.0974627 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1000, train error: 0.0974738 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1050, train error: 0.0974724 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1100, train error: 0.0974769 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1150, train error: 0.0974785 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1200, train error: 0.097494 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1250, train error: 0.0975136 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1300, train error: 0.0975391 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1350, train error: 0.0975537 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1400, train error: 0.0975809 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1450, train error: 0.0975999 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1500, train error: 0.0976074 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1550, train error: 0.0976152 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1600, train error: 0.0976359 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1650, train error: 0.0976269 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1700, train error: 0.097625 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1750, train error: 0.0976281 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1800, train error: 0.0976413 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1850, train error: 0.0976592 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1900, train error: 0.097666 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 1950, train error: 0.0976682 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2000, train error: 0.0976755 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2050, train error: 0.0976672 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2100, train error: 0.0976566 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2150, train error: 0.0976586 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2200, train error: 0.0977015 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2250, train error: 0.0976855 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2300, train error: 0.0976804 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2350, train error: 0.0977013 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2400, train error: 0.0977006 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2450, train error: 0.0976968 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2500, train error: 0.0977268 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2550, train error: 0.0977014 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2600, train error: 0.0976957 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2650, train error: 0.0976923 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2700, train error: 0.0977109 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2750, train error: 0.0977205 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2800, train error: 0.0977222 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2850, train error: 0.0977386 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2900, train error: 0.0977346 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 2950, train error: 0.0977532 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3000, train error: 0.0977498 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3050, train error: 0.0977442 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3100, train error: 0.0977619 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3150, train error: 0.0977558 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3200, train error: 0.0977848 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3250, train error: 0.0977927 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3300, train error: 0.0978087 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3350, train error: 0.0978271 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3400, train error: 0.0978272 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3450, train error: 0.097835 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3500, train error: 0.097879 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3550, train error: 0.0978722 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3600, train error: 0.0978645 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3650, train error: 0.0978695 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3700, train error: 0.0979235 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3750, train error: 0.0979304 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3800, train error: 0.0979258 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3850, train error: 0.0979381 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3900, train error: 0.0979431 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 3950, train error: 0.0979648 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4000, train error: 0.0979994 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4050, train error: 0.0980097 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4100, train error: 0.0979987 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4150, train error: 0.0979902 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4200, train error: 0.0980053 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4250, train error: 0.097996 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4300, train error: 0.0979969 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4350, train error: 0.0980222 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4400, train error: 0.0980378 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4450, train error: 0.0980414 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4500, train error: 0.0980601 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4550, train error: 0.0980553 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4600, train error: 0.0980615 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4650, train error: 0.0980963 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4700, train error: 0.0981552 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4750, train error: 0.0981558 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4800, train error: 0.0981415 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4850, train error: 0.0981815 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4900, train error: 0.0981447 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 4950, train error: 0.0981749 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5000, train error: 0.0982145 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5050, train error: 0.0982154 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5100, train error: 0.0982357 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5150, train error: 0.0982 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5200, train error: 0.0982114 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5250, train error: 0.0982197 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5300, train error: 0.0982317 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5350, train error: 0.09824 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5400, train error: 0.0982326 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5450, train error: 0.0982416 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5500, train error: 0.0982458 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5550, train error: 0.0982889 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5600, train error: 0.0982885 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5650, train error: 0.0982805 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5700, train error: 0.0983242 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5750, train error: 0.0983311 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5800, train error: 0.098356 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5850, train error: 0.098367 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5900, train error: 0.0983544 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 5950, train error: 0.0983739 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6000, train error: 0.0983754 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6050, train error: 0.0984138 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6100, train error: 0.098421 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6150, train error: 0.0984287 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6200, train error: 0.0984916 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6250, train error: 0.0985036 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6300, train error: 0.0985201 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6350, train error: 0.0985182 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6400, train error: 0.0985565 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6450, train error: 0.0985962 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6500, train error: 0.0985752 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6550, train error: 0.0985297 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6600, train error: 0.0985448 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6650, train error: 0.0985505 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6700, train error: 0.0985843 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6750, train error: 0.0985779 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6800, train error: 0.098601 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6850, train error: 0.0986343 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6900, train error: 0.0986143 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 6950, train error: 0.0985968 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7000, train error: 0.0986031 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7050, train error: 0.0986089 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7100, train error: 0.0986357 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7150, train error: 0.0986701 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7200, train error: 0.0987059 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7250, train error: 0.0986675 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7300, train error: 0.0986825 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7350, train error: 0.0986974 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7400, train error: 0.098741 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7450, train error: 0.0987033 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7500, train error: 0.0987117 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7550, train error: 0.0987157 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7600, train error: 0.0987284 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7650, train error: 0.0987079 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7700, train error: 0.0986935 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7750, train error: 0.0987244 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7800, train error: 0.0987247 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7850, train error: 0.0987191 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7900, train error: 0.0987337 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 7950, train error: 0.0987435 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8000, train error: 0.0987392 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8050, train error: 0.0987596 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8100, train error: 0.0987179 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8150, train error: 0.0987213 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8200, train error: 0.0987294 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8250, train error: 0.0987586 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8300, train error: 0.0987738 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8350, train error: 0.0987822 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8400, train error: 0.0987488 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8450, train error: 0.0987693 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8500, train error: 0.0987758 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8550, train error: 0.0987961 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8600, train error: 0.0988248 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8650, train error: 0.0987955 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8700, train error: 0.0988244 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8750, train error: 0.0988388 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8800, train error: 0.0988526 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8850, train error: 0.0988418 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8900, train error: 0.0988523 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 8950, train error: 0.0988514 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9000, train error: 0.0988643 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9050, train error: 0.0988814 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9100, train error: 0.0988801 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9150, train error: 0.0988806 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9200, train error: 0.0988925 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9250, train error: 0.0988834 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9300, train error: 0.0988984 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9350, train error: 0.098909 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9400, train error: 0.098931 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9450, train error: 0.0989351 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9500, train error: 0.0989353 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9550, train error: 0.0989415 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9600, train error: 0.0989567 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9650, train error: 0.0989576 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9700, train error: 0.098928 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9750, train error: 0.0989329 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9800, train error: 0.098927 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9850, train error: 0.0989319 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9900, train error: 0.0989157 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 9950, train error: 0.0989527 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10000, train error: 0.0989632 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10050, train error: 0.0989842 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10100, train error: 0.0989946 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10150, train error: 0.0989915 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10200, train error: 0.0989703 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10250, train error: 0.0989837 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10300, train error: 0.0989924 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10350, train error: 0.0989769 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10400, train error: 0.0989653 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10450, train error: 0.0990226 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10500, train error: 0.098994 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10550, train error: 0.0989888 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10600, train error: 0.0989942 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10650, train error: 0.09898 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10700, train error: 0.0989801 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10750, train error: 0.098999 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10800, train error: 0.0990169 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10850, train error: 0.0990272 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10900, train error: 0.0990547 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 10950, train error: 0.0990521 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11000, train error: 0.0990341 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11050, train error: 0.0990591 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11100, train error: 0.0990496 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11150, train error: 0.0990196 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11200, train error: 0.0990702 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11250, train error: 0.0990537 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11300, train error: 0.0990719 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11350, train error: 0.0990927 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11400, train error: 0.0990759 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11450, train error: 0.0990846 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11500, train error: 0.0990863 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11550, train error: 0.0991193 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11600, train error: 0.0991222 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11650, train error: 0.0991131 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11700, train error: 0.0990774 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11750, train error: 0.0990807 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11800, train error: 0.0990572 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11850, train error: 0.0990667 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11900, train error: 0.0991048 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 11950, train error: 0.0991234 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12000, train error: 0.0991349 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12050, train error: 0.0991238 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12100, train error: 0.0991205 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12150, train error: 0.0991329 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12200, train error: 0.0991514 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12250, train error: 0.0991343 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12300, train error: 0.099152 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12350, train error: 0.0991635 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12400, train error: 0.0991864 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12450, train error: 0.0992087 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12500, train error: 0.0992143 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12550, train error: 0.0992625 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12600, train error: 0.0992416 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12650, train error: 0.099202 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12700, train error: 0.0991918 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12750, train error: 0.0992169 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12800, train error: 0.0992259 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12850, train error: 0.0992279 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12900, train error: 0.0992174 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 12950, train error: 0.0992111 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13000, train error: 0.0991983 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13050, train error: 0.0992036 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13100, train error: 0.0991913 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13150, train error: 0.0992264 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13200, train error: 0.0992541 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13250, train error: 0.0992619 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13300, train error: 0.0992509 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13350, train error: 0.0992498 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13400, train error: 0.0992723 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13450, train error: 0.0992723 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13500, train error: 0.0993057 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13550, train error: 0.0993018 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13600, train error: 0.0993087 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13650, train error: 0.0993188 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13700, train error: 0.0993368 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13750, train error: 0.0993628 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13800, train error: 0.0993105 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13850, train error: 0.0993297 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13900, train error: 0.0993628 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 13950, train error: 0.0994155 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14000, train error: 0.0993782 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14050, train error: 0.0993543 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14100, train error: 0.099377 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14150, train error: 0.0993702 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14200, train error: 0.0993728 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14250, train error: 0.0993922 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14300, train error: 0.0993899 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14350, train error: 0.0993739 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14400, train error: 0.0994026 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14450, train error: 0.0993724 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14500, train error: 0.0993848 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14550, train error: 0.0994205 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14600, train error: 0.0993854 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14650, train error: 0.099425 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14700, train error: 0.0994212 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14750, train error: 0.0994026 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14800, train error: 0.0994271 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14850, train error: 0.0994243 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14900, train error: 0.0994387 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 14950, train error: 0.0994299 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15000, train error: 0.0993976 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15050, train error: 0.0993791 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15100, train error: 0.0994104 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15150, train error: 0.099404 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15200, train error: 0.0994061 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15250, train error: 0.099401 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15300, train error: 0.0994155 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15350, train error: 0.0994121 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15400, train error: 0.0994104 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15450, train error: 0.0994005 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15500, train error: 0.0993928 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15550, train error: 0.0993883 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15600, train error: 0.0994092 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15650, train error: 0.0994279 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15700, train error: 0.0994182 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15750, train error: 0.0994173 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15800, train error: 0.0994366 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15850, train error: 0.0994072 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15900, train error: 0.0994452 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 15950, train error: 0.0994319 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16000, train error: 0.0994148 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16050, train error: 0.0994598 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16100, train error: 0.0994355 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16150, train error: 0.0994433 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16200, train error: 0.0994342 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16250, train error: 0.0994381 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16300, train error: 0.0994678 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16350, train error: 0.0994329 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16400, train error: 0.0994483 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16450, train error: 0.0994452 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16500, train error: 0.0994422 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16550, train error: 0.0994452 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16600, train error: 0.0994633 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16650, train error: 0.0994726 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16700, train error: 0.0994618 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16750, train error: 0.0994787 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16800, train error: 0.0994585 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16850, train error: 0.0994665 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16900, train error: 0.099477 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 16950, train error: 0.0994774 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17000, train error: 0.099493 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17050, train error: 0.0995061 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17100, train error: 0.0994971 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17150, train error: 0.099512 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17200, train error: 0.0995051 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17250, train error: 0.0995008 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17300, train error: 0.0994966 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17350, train error: 0.0995311 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17400, train error: 0.0995155 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17450, train error: 0.0995239 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17500, train error: 0.0995513 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17550, train error: 0.0994897 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17600, train error: 0.0995149 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17650, train error: 0.0995411 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17700, train error: 0.0995542 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17750, train error: 0.0995423 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17800, train error: 0.0995434 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17850, train error: 0.0995557 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17900, train error: 0.0995434 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 17950, train error: 0.0995555 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18000, train error: 0.0995639 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18050, train error: 0.0995531 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18100, train error: 0.0995635 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18150, train error: 0.099559 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18200, train error: 0.0995681 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18250, train error: 0.0995571 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18300, train error: 0.0995962 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18350, train error: 0.0995463 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18400, train error: 0.0995798 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18450, train error: 0.099554 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18500, train error: 0.0995646 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18550, train error: 0.0995695 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18600, train error: 0.0995813 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18650, train error: 0.0995766 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18700, train error: 0.0995964 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18750, train error: 0.0995951 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18800, train error: 0.099602 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18850, train error: 0.0995845 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18900, train error: 0.0995844 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 18950, train error: 0.0995865 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19000, train error: 0.0995818 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19050, train error: 0.0995833 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19100, train error: 0.099584 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19150, train error: 0.09959 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19200, train error: 0.0995933 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19250, train error: 0.0996088 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19300, train error: 0.0995927 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19350, train error: 0.0995918 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19400, train error: 0.0995827 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19450, train error: 0.0995864 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19500, train error: 0.0995775 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19550, train error: 0.0995878 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19600, train error: 0.0996 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19650, train error: 0.0996267 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19700, train error: 0.0996187 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19750, train error: 0.0996152 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19800, train error: 0.099617 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19850, train error: 0.0996279 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19900, train error: 0.0996125 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 19950, train error: 0.0996041 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20000, train error: 0.0996056 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20050, train error: 0.0996123 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20100, train error: 0.0996425 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20150, train error: 0.0996388 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20200, train error: 0.0996373 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20250, train error: 0.0996254 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20300, train error: 0.099656 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20350, train error: 0.0996194 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20400, train error: 0.0996492 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20450, train error: 0.099651 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20500, train error: 0.0996405 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20550, train error: 0.0996528 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20600, train error: 0.0996398 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20650, train error: 0.0996683 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20700, train error: 0.0996473 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20750, train error: 0.0996491 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20800, train error: 0.0996434 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20850, train error: 0.0996391 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20900, train error: 0.0996391 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 20950, train error: 0.0996451 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21000, train error: 0.0996416 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21050, train error: 0.0996685 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21100, train error: 0.09964 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21150, train error: 0.0996508 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21200, train error: 0.0996414 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21250, train error: 0.0996377 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21300, train error: 0.0996467 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21350, train error: 0.0996562 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21400, train error: 0.0996584 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21450, train error: 0.0996729 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21500, train error: 0.0996731 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21550, train error: 0.0996754 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21600, train error: 0.0996578 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21650, train error: 0.0996602 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21700, train error: 0.0996439 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21750, train error: 0.0996502 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21800, train error: 0.0996479 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21850, train error: 0.0996514 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21900, train error: 0.099653 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 21950, train error: 0.0996654 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22000, train error: 0.0996698 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22050, train error: 0.0996847 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22100, train error: 0.0996602 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22150, train error: 0.0996872 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22200, train error: 0.0996769 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22250, train error: 0.0996915 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22300, train error: 0.0996823 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22350, train error: 0.0996805 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22400, train error: 0.0996841 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22450, train error: 0.0996523 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22500, train error: 0.0996758 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22550, train error: 0.0996472 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22600, train error: 0.0996536 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22650, train error: 0.0996617 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22700, train error: 0.0996564 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22750, train error: 0.0996595 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22800, train error: 0.099665 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22850, train error: 0.0996611 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22900, train error: 0.0996737 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 22950, train error: 0.0996651 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23000, train error: 0.0996918 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23050, train error: 0.0996668 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23100, train error: 0.0996893 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23150, train error: 0.0996715 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23200, train error: 0.0996771 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23250, train error: 0.0996569 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23300, train error: 0.0996731 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23350, train error: 0.0996782 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23400, train error: 0.0996822 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23450, train error: 0.0996937 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23500, train error: 0.0996978 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23550, train error: 0.0997064 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23600, train error: 0.0996952 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23650, train error: 0.0997008 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23700, train error: 0.0996874 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23750, train error: 0.0996893 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23800, train error: 0.0996948 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23850, train error: 0.0996857 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23900, train error: 0.0996993 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 23950, train error: 0.0996999 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24000, train error: 0.099717 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24050, train error: 0.0997062 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24100, train error: 0.0997164 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24150, train error: 0.0996926 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24200, train error: 0.0997052 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24250, train error: 0.0996903 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24300, train error: 0.0996917 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24350, train error: 0.0997008 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24400, train error: 0.0996933 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24450, train error: 0.0997097 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24500, train error: 0.0996942 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24550, train error: 0.0997077 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24600, train error: 0.099704 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24650, train error: 0.0996995 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24700, train error: 0.0997074 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24750, train error: 0.0997177 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24800, train error: 0.0997209 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24850, train error: 0.0997177 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24900, train error: 0.0997152 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 24950, train error: 0.0997214 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25000, train error: 0.0997173 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25050, train error: 0.0997138 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25100, train error: 0.0997209 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25150, train error: 0.099722 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25200, train error: 0.0997259 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25250, train error: 0.0997313 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25300, train error: 0.0997317 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25350, train error: 0.0997312 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25400, train error: 0.0997215 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25450, train error: 0.0997425 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25500, train error: 0.099726 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25550, train error: 0.0997207 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25600, train error: 0.0997232 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25650, train error: 0.0997158 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25700, train error: 0.0997073 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25750, train error: 0.0997256 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25800, train error: 0.0997238 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25850, train error: 0.0997179 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25900, train error: 0.0997278 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 25950, train error: 0.0997145 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26000, train error: 0.0997264 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26050, train error: 0.0997343 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26100, train error: 0.0997405 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26150, train error: 0.0997384 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26200, train error: 0.099731 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26250, train error: 0.0997405 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26300, train error: 0.0997201 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26350, train error: 0.0997244 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26400, train error: 0.0997176 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26450, train error: 0.0997224 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26500, train error: 0.0997166 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26550, train error: 0.0997272 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26600, train error: 0.0997221 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26650, train error: 0.0997309 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26700, train error: 0.0997219 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26750, train error: 0.0997334 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26800, train error: 0.0997388 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26850, train error: 0.0997213 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26900, train error: 0.0997218 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 26950, train error: 0.0997217 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27000, train error: 0.0997236 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27050, train error: 0.0997194 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27100, train error: 0.0997213 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27150, train error: 0.09972 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27200, train error: 0.0997149 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27250, train error: 0.0997088 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27300, train error: 0.0997056 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27350, train error: 0.0997136 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27400, train error: 0.0997072 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27450, train error: 0.0997174 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27500, train error: 0.0997167 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27550, train error: 0.0996992 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27600, train error: 0.0997133 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27650, train error: 0.099691 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27700, train error: 0.0997011 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27750, train error: 0.0996979 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27800, train error: 0.0997069 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27850, train error: 0.0997116 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27900, train error: 0.099708 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 27950, train error: 0.0997074 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28000, train error: 0.0996963 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28050, train error: 0.099698 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28100, train error: 0.0996937 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28150, train error: 0.0996883 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28200, train error: 0.0996919 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28250, train error: 0.0996933 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28300, train error: 0.0996825 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28350, train error: 0.0996751 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28400, train error: 0.0996729 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28450, train error: 0.0996748 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28500, train error: 0.0996758 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28550, train error: 0.0996764 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28600, train error: 0.099678 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28650, train error: 0.0996884 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28700, train error: 0.0996779 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28750, train error: 0.0996822 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28800, train error: 0.0996772 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28850, train error: 0.0996773 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28900, train error: 0.0996735 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 28950, train error: 0.0996725 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29000, train error: 0.0996788 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29050, train error: 0.0996796 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29100, train error: 0.0996716 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29150, train error: 0.0996779 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29200, train error: 0.0996756 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29250, train error: 0.0996755 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29300, train error: 0.0996838 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29350, train error: 0.0996802 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29400, train error: 0.0996783 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29450, train error: 0.0996797 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29500, train error: 0.0996767 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
step 29550, train error: 0.0996772 | batch_size(step.eval(),arg.batch_size): 8219,8219 log_learning_rate: -3.740709486711537 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6623669/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units5_Adam/hp_stid_161/mdl_ckpt.meta.tmpea0695d65c95485ca6d4a03141cab03c
