I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN Black
major: 3 minor: 5 memoryClockRate (GHz) 0.98
pciBusID 0000:83:00.0
Total memory: 5.97GiB
Free memory: 5.89GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN Black, pci bus id: 0000:83:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617426_141.out', 'slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'slurm-6617426_60.out', 'slurm-6617426_161.out', 'slurm-6617426_66.out', 'slurm-6617426_117.out', 'slurm-6617426_136.out', 'slurm-6617426_54.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'slurm-6617548_84.out', 'pickle_file', 'slurm-6617425_154.out', 'slurm-6617426_181.out', 'slurm-6617426_160.out', '1', 'slurm-6617426_142.out', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'slurm-6617426_65.out', 'slurm-6617426_56.out', 'h_add_data_and_mesh.npz', 'slurm-6617548_83.out', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'slurm-6617426_70.out', 'slurm-6617548_78.out', 'slurm-6617426_74.out', 'slurm-6617426_162.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', 'slurm-6617548_86.out', '.swn', 'slurm-6617426_12.out', 'slurm-6617548_80.out', 'slurm-6617425_13.out', 'test_print.py', 'slurm-6617426_123.out', 'slurm-6617426_115.out', 'om_f_8D_single_relu', 'slurm-6617426_116.out', 'slurm-6617426_73.out', 'slurm-6617425_27.out', 'slurm-6617426_53.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'slurm-6617426_134.out', 'slurm-6617426_62.out', 'slurm-6617426_121.out', 'slurm-6617426_122.out', 'slurm-6617426_119.out', 'slurm-6617426_69.out', 'batch_main.py', 'slurm-6617426_127.out', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'slurm-6617548_81.out', 'slurm-6617548_77.out', 'slurm-6617426_68.out', 'os_walk_test', 'slurm-6617426_72.out', 'slurm-6617426_135.out', 'slurm-6617426_159.out', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617426_71.out', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'slurm-6617426_57.out', 'slurm-6617426_143.out', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'slurm-6617426_52.out', 'slurm-6617548_79.out', 'slurm-6617426_58.out', 'output.file', 'slurm-6617426_137.out', 'slurm-6617426_124.out', 'hp_gpu', 'slurm-6617426_144.out', 'slurm-6617425_21.out', 'slurm-6617426_145.out', 'slurm-6617425_167.out', 'my_tf_proj.egg-info', 'slurm-6617426_120.out', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617426_140.out', 'slurm-6617425_3.out', 'slurm-6617548_76.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'slurm-6617426_163.out', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617426_126.out', 'slurm-6617425_22.out', 'slurm-6617548_85.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'slurm-6617548_82.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'slurm-6617426_139.out', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617426_63.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617426_64.out', 'slurm-6617426_146.out', 'slurm-6617426_129.out', 'slurm-6617425_19.out', 'slurm-6617426_167.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'slurm-6617426_128.out', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617426_67.out', 'slurm-6617426_59.out', 'slurm-6617426_177.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'slurm-6617426_61.out', 'slurm-6617426_118.out', 'slurm-6617426_138.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617426_55.out', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
l  2
+++> std mu for inits_C:  [0, 2.629132246955467]
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 20.8969 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 50, train error: 16.3494 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 100, train error: 12.5834 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 150, train error: 9.52675 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 200, train error: 7.11874 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 250, train error: 5.28347 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 300, train error: 3.9337 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 350, train error: 2.97713 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 400, train error: 2.32396 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 450, train error: 1.89316 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 500, train error: 1.61087 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 550, train error: 1.41938 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 600, train error: 1.27692 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 650, train error: 1.15862 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 700, train error: 1.05306 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 750, train error: 0.957004 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 800, train error: 0.870512 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 850, train error: 0.794443 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 900, train error: 0.728623 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 950, train error: 0.672181 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1000, train error: 0.623849 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1050, train error: 0.582101 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1100, train error: 0.545812 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1150, train error: 0.514009 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1200, train error: 0.486109 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1250, train error: 0.461896 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1300, train error: 0.440877 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1350, train error: 0.422527 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1400, train error: 0.406338 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1450, train error: 0.391897 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1500, train error: 0.378919 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1550, train error: 0.367241 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1600, train error: 0.35685 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1650, train error: 0.347507 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1700, train error: 0.338757 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1750, train error: 0.330545 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1800, train error: 0.322928 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1850, train error: 0.315931 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1900, train error: 0.309272 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 1950, train error: 0.302949 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2000, train error: 0.296902 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2050, train error: 0.291091 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2100, train error: 0.285549 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2150, train error: 0.28023 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2200, train error: 0.275216 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2250, train error: 0.270414 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2300, train error: 0.26573 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2350, train error: 0.261153 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2400, train error: 0.256656 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2450, train error: 0.252289 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2500, train error: 0.248138 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2550, train error: 0.244169 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2600, train error: 0.240327 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2650, train error: 0.236462 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2700, train error: 0.232621 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2750, train error: 0.228969 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2800, train error: 0.22552 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2850, train error: 0.222052 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2900, train error: 0.21853 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 2950, train error: 0.215131 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3000, train error: 0.211951 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3050, train error: 0.208751 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3100, train error: 0.205617 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3150, train error: 0.20265 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3200, train error: 0.199654 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3250, train error: 0.196623 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3300, train error: 0.193696 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3350, train error: 0.190976 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3400, train error: 0.188027 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3450, train error: 0.185087 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3500, train error: 0.182356 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3550, train error: 0.179667 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3600, train error: 0.176888 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3650, train error: 0.174189 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3700, train error: 0.171458 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3750, train error: 0.16881 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3800, train error: 0.166126 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3850, train error: 0.163443 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3900, train error: 0.160833 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 3950, train error: 0.158192 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4000, train error: 0.155698 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4050, train error: 0.153249 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4100, train error: 0.150834 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4150, train error: 0.148456 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4200, train error: 0.146212 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4250, train error: 0.144004 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4300, train error: 0.141843 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4350, train error: 0.139823 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4400, train error: 0.13794 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4450, train error: 0.135883 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4500, train error: 0.133963 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4550, train error: 0.132233 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4600, train error: 0.130507 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4650, train error: 0.128965 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4700, train error: 0.127333 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4750, train error: 0.125918 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4800, train error: 0.124501 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4850, train error: 0.123053 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4900, train error: 0.121764 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 4950, train error: 0.120545 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5000, train error: 0.119427 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5050, train error: 0.11813 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5100, train error: 0.117121 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5150, train error: 0.116248 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5200, train error: 0.11513 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5250, train error: 0.11403 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5300, train error: 0.11322 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5350, train error: 0.112207 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5400, train error: 0.111348 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5450, train error: 0.11072 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5500, train error: 0.109778 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5550, train error: 0.109218 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5600, train error: 0.108516 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5650, train error: 0.107796 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5700, train error: 0.107223 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5750, train error: 0.106528 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5800, train error: 0.106005 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5850, train error: 0.105564 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5900, train error: 0.104955 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 5950, train error: 0.104389 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6000, train error: 0.103873 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6050, train error: 0.10343 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6100, train error: 0.103161 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6150, train error: 0.102634 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6200, train error: 0.102214 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6250, train error: 0.102038 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6300, train error: 0.101652 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6350, train error: 0.101317 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6400, train error: 0.101121 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6450, train error: 0.10077 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6500, train error: 0.100606 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6550, train error: 0.100336 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6600, train error: 0.100143 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6650, train error: 0.100009 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6700, train error: 0.0997606 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6750, train error: 0.0996455 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6800, train error: 0.0994836 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6850, train error: 0.0994656 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6900, train error: 0.0990993 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 6950, train error: 0.0991149 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7000, train error: 0.0989697 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7050, train error: 0.0989028 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7100, train error: 0.098785 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7150, train error: 0.0986418 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7200, train error: 0.0985309 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7250, train error: 0.0985159 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7300, train error: 0.0985145 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7350, train error: 0.0983737 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7400, train error: 0.0984183 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7450, train error: 0.0984674 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7500, train error: 0.0982885 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7550, train error: 0.0983957 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7600, train error: 0.0983186 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7650, train error: 0.0983428 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7700, train error: 0.0983305 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7750, train error: 0.0983042 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7800, train error: 0.0982199 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7850, train error: 0.0982773 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7900, train error: 0.098132 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 7950, train error: 0.0981476 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8000, train error: 0.0980347 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8050, train error: 0.0980798 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8100, train error: 0.0979928 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8150, train error: 0.0981247 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8200, train error: 0.0979941 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8250, train error: 0.0979455 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8300, train error: 0.0981012 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8350, train error: 0.0980499 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8400, train error: 0.0979791 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8450, train error: 0.098018 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8500, train error: 0.0980076 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8550, train error: 0.0979288 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8600, train error: 0.0978544 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8650, train error: 0.097956 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8700, train error: 0.097986 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8750, train error: 0.0978369 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8800, train error: 0.0978315 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8850, train error: 0.097859 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8900, train error: 0.0977659 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 8950, train error: 0.0978753 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9000, train error: 0.0978983 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9050, train error: 0.0977537 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9100, train error: 0.0978463 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9150, train error: 0.0977913 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9200, train error: 0.0977722 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9250, train error: 0.0977666 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9300, train error: 0.0978128 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9350, train error: 0.0977712 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9400, train error: 0.0977983 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9450, train error: 0.0976927 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9500, train error: 0.097716 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9550, train error: 0.0978041 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9600, train error: 0.097761 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9650, train error: 0.0977968 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9700, train error: 0.0977654 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9750, train error: 0.0978819 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9800, train error: 0.0978315 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9850, train error: 0.0978095 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9900, train error: 0.097731 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 9950, train error: 0.0978176 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10000, train error: 0.097928 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10050, train error: 0.0977988 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10100, train error: 0.0981193 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10150, train error: 0.0977566 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10200, train error: 0.0978324 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10250, train error: 0.0978481 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10300, train error: 0.0978674 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10350, train error: 0.097918 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10400, train error: 0.097857 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10450, train error: 0.0978413 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10500, train error: 0.0978264 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10550, train error: 0.0980192 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10600, train error: 0.0979763 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10650, train error: 0.0978397 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10700, train error: 0.0979869 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10750, train error: 0.0979576 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10800, train error: 0.0978772 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10850, train error: 0.0979432 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10900, train error: 0.0979399 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 10950, train error: 0.0979743 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11000, train error: 0.0979768 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11050, train error: 0.0980032 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11100, train error: 0.0978295 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11150, train error: 0.0979659 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11200, train error: 0.0979105 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11250, train error: 0.0979596 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11300, train error: 0.0980147 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11350, train error: 0.0980099 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11400, train error: 0.0980326 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11450, train error: 0.0980049 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11500, train error: 0.0978669 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11550, train error: 0.098002 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11600, train error: 0.0980033 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11650, train error: 0.0979704 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11700, train error: 0.0979831 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11750, train error: 0.0979557 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11800, train error: 0.0980001 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11850, train error: 0.0981031 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11900, train error: 0.0979909 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 11950, train error: 0.0981014 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12000, train error: 0.0979636 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12050, train error: 0.0982009 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12100, train error: 0.0980892 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12150, train error: 0.0979243 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12200, train error: 0.0979801 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12250, train error: 0.0979729 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12300, train error: 0.0980544 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12350, train error: 0.0979926 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12400, train error: 0.0980878 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12450, train error: 0.0980472 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12500, train error: 0.0979808 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12550, train error: 0.0981211 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12600, train error: 0.0980788 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12650, train error: 0.0981877 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12700, train error: 0.0979567 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12750, train error: 0.098133 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12800, train error: 0.098043 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12850, train error: 0.0980634 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12900, train error: 0.0982012 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 12950, train error: 0.0980429 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13000, train error: 0.0979822 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13050, train error: 0.098065 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13100, train error: 0.0982299 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13150, train error: 0.0979648 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13200, train error: 0.0981278 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13250, train error: 0.0980749 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13300, train error: 0.098088 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13350, train error: 0.0980143 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13400, train error: 0.098094 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13450, train error: 0.0978669 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13500, train error: 0.0982262 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13550, train error: 0.0981749 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13600, train error: 0.0980146 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13650, train error: 0.0980832 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13700, train error: 0.0981273 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13750, train error: 0.0979517 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13800, train error: 0.0982217 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13850, train error: 0.0980542 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13900, train error: 0.097942 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 13950, train error: 0.0981846 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14000, train error: 0.0979313 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14050, train error: 0.0981445 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14100, train error: 0.0980239 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14150, train error: 0.0980636 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14200, train error: 0.0980963 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14250, train error: 0.0980316 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14300, train error: 0.0980829 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14350, train error: 0.0979822 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14400, train error: 0.0980783 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14450, train error: 0.0979175 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14500, train error: 0.0979755 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14550, train error: 0.0979812 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14600, train error: 0.0980824 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14650, train error: 0.0981204 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14700, train error: 0.0981258 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14750, train error: 0.0980604 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14800, train error: 0.097998 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14850, train error: 0.0980055 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14900, train error: 0.0979583 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 14950, train error: 0.0978806 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15000, train error: 0.0980876 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15050, train error: 0.0979687 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15100, train error: 0.097867 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15150, train error: 0.098123 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15200, train error: 0.0979392 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15250, train error: 0.0979951 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15300, train error: 0.0979874 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15350, train error: 0.0980516 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15400, train error: 0.0981169 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15450, train error: 0.0980936 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15500, train error: 0.0982043 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15550, train error: 0.0982422 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15600, train error: 0.0980871 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15650, train error: 0.098049 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15700, train error: 0.0980401 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15750, train error: 0.0982371 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15800, train error: 0.0981608 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15850, train error: 0.0981216 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15900, train error: 0.0980367 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 15950, train error: 0.0980571 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16000, train error: 0.0980051 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16050, train error: 0.0979635 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16100, train error: 0.098124 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16150, train error: 0.0981428 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16200, train error: 0.0979416 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16250, train error: 0.0978799 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16300, train error: 0.098127 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16350, train error: 0.0980821 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16400, train error: 0.098065 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16450, train error: 0.0980845 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16500, train error: 0.0980284 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16550, train error: 0.0980758 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16600, train error: 0.0979758 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16650, train error: 0.0981435 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16700, train error: 0.0980412 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16750, train error: 0.0979913 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16800, train error: 0.0981019 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16850, train error: 0.0982039 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16900, train error: 0.0978989 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 16950, train error: 0.0982009 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 17000, train error: 0.0980587 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 17050, train error: 0.0979538 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 17100, train error: 0.0980219 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 17150, train error: 0.0981504 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 17200, train error: 0.0979824 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 17250, train error: 0.0980581 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 17300, train error: 0.0980696 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 17350, train error: 0.0980238 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
step 17400, train error: 0.0980462 | batch_size(step.eval(),arg.batch_size): 7002,7002 log_learning_rate: -3.518866090911174 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6628825/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1329, in save
    self.last_checkpoints, latest_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 745, in update_checkpoint_state
    text_format.MessageToString(ckpt))
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_NN_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_NN_8D_units14_Adam/hp_stid_83/checkpoint.tmp50fca62d5f08445f90d8e46e285d22c6
