I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: Tesla K20m
major: 3 minor: 5 memoryClockRate (GHz) 0.7055
pciBusID 0000:08:00.0
Total memory: 4.66GiB
Free memory: 4.59GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K20m, pci bus id: 0000:08:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617426_141.out', 'slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'slurm-6617426_60.out', 'slurm-6617426_161.out', 'slurm-6617426_66.out', 'slurm-6617426_117.out', 'slurm-6617426_136.out', 'slurm-6617426_54.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'slurm-6617548_84.out', 'pickle_file', 'slurm-6617425_154.out', 'slurm-6617426_181.out', 'slurm-6617426_160.out', '1', 'slurm-6617426_142.out', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'slurm-6617426_65.out', 'slurm-6617426_56.out', 'h_add_data_and_mesh.npz', 'slurm-6617548_83.out', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'slurm-6617426_70.out', 'slurm-6617548_78.out', 'slurm-6617426_74.out', 'slurm-6617426_162.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', 'slurm-6617548_86.out', '.swn', 'slurm-6617426_12.out', 'slurm-6617548_80.out', 'slurm-6617425_13.out', 'test_print.py', 'slurm-6617426_123.out', 'slurm-6617426_115.out', 'om_f_8D_single_relu', 'slurm-6617426_116.out', 'slurm-6617426_73.out', 'slurm-6617425_27.out', 'slurm-6617426_53.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'slurm-6617426_134.out', 'slurm-6617426_62.out', 'slurm-6617426_121.out', 'slurm-6617426_122.out', 'slurm-6617426_119.out', 'slurm-6617426_69.out', 'batch_main.py', 'slurm-6617426_127.out', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'slurm-6617548_81.out', 'slurm-6617548_77.out', 'slurm-6617426_68.out', 'os_walk_test', 'slurm-6617426_72.out', 'slurm-6617426_135.out', 'slurm-6617426_159.out', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617426_71.out', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'slurm-6617426_57.out', 'slurm-6617426_143.out', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'slurm-6617426_52.out', 'slurm-6617548_79.out', 'slurm-6617426_58.out', 'output.file', 'slurm-6617426_137.out', 'slurm-6617426_124.out', 'hp_gpu', 'slurm-6617426_144.out', 'slurm-6617425_21.out', 'slurm-6617426_145.out', 'slurm-6617425_167.out', 'my_tf_proj.egg-info', 'slurm-6617426_120.out', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617426_140.out', 'slurm-6617425_3.out', 'slurm-6617548_76.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'slurm-6617426_163.out', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617426_126.out', 'slurm-6617425_22.out', 'slurm-6617548_85.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'slurm-6617548_82.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'slurm-6617426_139.out', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617426_63.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617426_64.out', 'slurm-6617426_146.out', 'slurm-6617426_129.out', 'slurm-6617425_19.out', 'slurm-6617426_167.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'slurm-6617426_128.out', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617426_67.out', 'slurm-6617426_59.out', 'slurm-6617426_177.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'slurm-6617426_61.out', 'slurm-6617426_118.out', 'slurm-6617426_138.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617426_55.out', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
l  2
+++> std mu for inits_C:  [0, 0.8876171037777877]
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 1.73151 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 50, train error: 0.350824 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 100, train error: 0.246501 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 150, train error: 0.155758 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 200, train error: 0.137977 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 250, train error: 0.128433 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 300, train error: 0.113577 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 350, train error: 0.113831 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 400, train error: 0.108976 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 450, train error: 0.103722 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 500, train error: 0.102859 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 550, train error: 0.10164 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 600, train error: 0.100345 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 650, train error: 0.0998712 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 700, train error: 0.0994438 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 750, train error: 0.0989157 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 800, train error: 0.0986648 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 850, train error: 0.0984698 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 900, train error: 0.0982724 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 950, train error: 0.0980944 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1000, train error: 0.0979314 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1050, train error: 0.0978054 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1100, train error: 0.097778 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1150, train error: 0.0977653 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1200, train error: 0.097722 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1250, train error: 0.0976559 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1300, train error: 0.0977169 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1350, train error: 0.097597 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1400, train error: 0.0975971 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1450, train error: 0.0976031 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1500, train error: 0.0974996 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1550, train error: 0.0974991 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1600, train error: 0.0973519 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1650, train error: 0.0972922 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1700, train error: 0.0972327 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1750, train error: 0.0970724 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1800, train error: 0.0971288 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1850, train error: 0.0968886 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1900, train error: 0.0968709 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 1950, train error: 0.096776 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2000, train error: 0.0966921 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2050, train error: 0.0966248 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2100, train error: 0.0964757 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2150, train error: 0.0964404 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2200, train error: 0.0964325 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2250, train error: 0.0963745 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2300, train error: 0.0962934 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2350, train error: 0.0962173 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2400, train error: 0.096111 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2450, train error: 0.0960943 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2500, train error: 0.0959975 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2550, train error: 0.0959447 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2600, train error: 0.0959552 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2650, train error: 0.0959705 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2700, train error: 0.0958128 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2750, train error: 0.0958584 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2800, train error: 0.0957881 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2850, train error: 0.0957201 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2900, train error: 0.0957115 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 2950, train error: 0.0958029 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3000, train error: 0.0956869 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3050, train error: 0.0955643 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3100, train error: 0.0955854 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3150, train error: 0.0955749 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3200, train error: 0.0954611 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3250, train error: 0.0954476 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3300, train error: 0.0954469 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3350, train error: 0.0954137 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3400, train error: 0.0954756 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3450, train error: 0.0952252 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3500, train error: 0.095239 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3550, train error: 0.0954328 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3600, train error: 0.0953163 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3650, train error: 0.095347 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3700, train error: 0.0953158 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3750, train error: 0.0950958 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3800, train error: 0.0950691 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3850, train error: 0.0951837 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3900, train error: 0.0952507 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 3950, train error: 0.095234 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4000, train error: 0.0952701 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4050, train error: 0.0952216 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4100, train error: 0.0951365 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4150, train error: 0.0949946 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4200, train error: 0.0952086 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4250, train error: 0.0951734 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4300, train error: 0.0951849 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4350, train error: 0.0951571 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4400, train error: 0.0951836 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4450, train error: 0.0950286 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4500, train error: 0.0950053 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4550, train error: 0.0948637 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4600, train error: 0.094689 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4650, train error: 0.0944312 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4700, train error: 0.0942154 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4750, train error: 0.0940244 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4800, train error: 0.094223 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4850, train error: 0.0942668 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4900, train error: 0.0940102 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 4950, train error: 0.0939997 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5000, train error: 0.0939925 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5050, train error: 0.0938662 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5100, train error: 0.0938431 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5150, train error: 0.093678 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5200, train error: 0.0935927 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5250, train error: 0.0935399 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5300, train error: 0.0932671 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5350, train error: 0.0930669 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5400, train error: 0.0929099 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5450, train error: 0.0928739 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5500, train error: 0.0927441 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5550, train error: 0.0926203 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5600, train error: 0.0925077 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5650, train error: 0.0926425 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5700, train error: 0.092422 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5750, train error: 0.0923499 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5800, train error: 0.0925508 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5850, train error: 0.0923783 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5900, train error: 0.0923371 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 5950, train error: 0.0925477 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6000, train error: 0.0923948 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6050, train error: 0.092567 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6100, train error: 0.0924599 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6150, train error: 0.0923802 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6200, train error: 0.0923805 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6250, train error: 0.0924141 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6300, train error: 0.0925388 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6350, train error: 0.0924469 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6400, train error: 0.0922493 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6450, train error: 0.0924165 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6500, train error: 0.092481 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6550, train error: 0.0924498 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6600, train error: 0.0923985 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6650, train error: 0.0925306 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6700, train error: 0.0922395 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6750, train error: 0.0923693 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6800, train error: 0.0924672 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6850, train error: 0.092402 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6900, train error: 0.0925786 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 6950, train error: 0.0922779 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7000, train error: 0.092546 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7050, train error: 0.092308 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7100, train error: 0.0921659 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7150, train error: 0.0924151 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7200, train error: 0.0924217 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7250, train error: 0.0922584 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7300, train error: 0.092577 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7350, train error: 0.0923096 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7400, train error: 0.0925502 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7450, train error: 0.0921173 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7500, train error: 0.0922451 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7550, train error: 0.0921731 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7600, train error: 0.0923836 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7650, train error: 0.0923027 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7700, train error: 0.0922607 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7750, train error: 0.0923199 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7800, train error: 0.0923763 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7850, train error: 0.092259 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7900, train error: 0.0922441 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 7950, train error: 0.0924276 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8000, train error: 0.0921854 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8050, train error: 0.0922747 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8100, train error: 0.0922454 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8150, train error: 0.0922643 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8200, train error: 0.0923708 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8250, train error: 0.0921828 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8300, train error: 0.0923214 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8350, train error: 0.092416 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8400, train error: 0.0923403 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8450, train error: 0.0922383 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8500, train error: 0.0923353 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8550, train error: 0.0924132 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8600, train error: 0.09243 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8650, train error: 0.0925936 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8700, train error: 0.0922925 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8750, train error: 0.0922059 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8800, train error: 0.0924098 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8850, train error: 0.092212 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8900, train error: 0.0924375 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 8950, train error: 0.0926503 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9000, train error: 0.0925298 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9050, train error: 0.0921813 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9100, train error: 0.0923834 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9150, train error: 0.0923037 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9200, train error: 0.0926063 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9250, train error: 0.0922273 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9300, train error: 0.0923884 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9350, train error: 0.0924303 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9400, train error: 0.0925273 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9450, train error: 0.092458 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9500, train error: 0.0924204 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9550, train error: 0.092505 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9600, train error: 0.0923032 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9650, train error: 0.0925617 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9700, train error: 0.0924002 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9750, train error: 0.092321 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9800, train error: 0.0923318 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9850, train error: 0.0923797 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9900, train error: 0.0924219 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 9950, train error: 0.0925128 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10000, train error: 0.0925146 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10050, train error: 0.0924048 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10100, train error: 0.0926573 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10150, train error: 0.0925261 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10200, train error: 0.0925542 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10250, train error: 0.092267 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10300, train error: 0.0924338 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10350, train error: 0.0925253 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10400, train error: 0.0925857 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10450, train error: 0.0923361 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10500, train error: 0.0925825 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10550, train error: 0.092361 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10600, train error: 0.0924777 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10650, train error: 0.0927171 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10700, train error: 0.0924558 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10750, train error: 0.0924791 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10800, train error: 0.0925264 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10850, train error: 0.0922565 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10900, train error: 0.092583 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 10950, train error: 0.0925557 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11000, train error: 0.0925973 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11050, train error: 0.0925949 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11100, train error: 0.0925876 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11150, train error: 0.0924833 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11200, train error: 0.0925738 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11250, train error: 0.0924728 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11300, train error: 0.0925212 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11350, train error: 0.0924748 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11400, train error: 0.092664 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11450, train error: 0.0924606 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11500, train error: 0.0924684 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11550, train error: 0.0924677 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11600, train error: 0.0925204 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11650, train error: 0.0923808 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11700, train error: 0.0925369 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11750, train error: 0.0925617 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11800, train error: 0.0922304 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11850, train error: 0.0925303 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11900, train error: 0.0925998 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 11950, train error: 0.0926488 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12000, train error: 0.092521 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12050, train error: 0.0925304 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12100, train error: 0.0926037 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12150, train error: 0.0925378 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12200, train error: 0.0926842 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12250, train error: 0.0924265 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12300, train error: 0.0922676 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12350, train error: 0.0924832 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12400, train error: 0.0925076 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12450, train error: 0.0925463 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12500, train error: 0.0925629 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12550, train error: 0.0926153 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12600, train error: 0.0925381 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12650, train error: 0.0924668 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12700, train error: 0.0924544 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12750, train error: 0.0928759 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12800, train error: 0.0923955 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12850, train error: 0.0925203 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12900, train error: 0.0926739 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 12950, train error: 0.0925842 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13000, train error: 0.0924057 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13050, train error: 0.0925212 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13100, train error: 0.092428 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13150, train error: 0.0924917 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13200, train error: 0.0925539 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13250, train error: 0.0924168 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13300, train error: 0.0922939 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13350, train error: 0.0925468 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13400, train error: 0.0924537 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13450, train error: 0.0925296 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13500, train error: 0.0924846 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13550, train error: 0.0924941 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13600, train error: 0.0925492 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13650, train error: 0.0922944 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13700, train error: 0.0926774 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13750, train error: 0.0927632 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13800, train error: 0.0924891 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13850, train error: 0.0926074 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13900, train error: 0.0926863 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 13950, train error: 0.092553 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14000, train error: 0.0924183 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14050, train error: 0.092575 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14100, train error: 0.092619 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14150, train error: 0.0924216 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14200, train error: 0.0923646 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14250, train error: 0.0925961 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14300, train error: 0.0922886 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14350, train error: 0.0924791 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14400, train error: 0.0925693 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14450, train error: 0.0924753 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14500, train error: 0.0923419 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14550, train error: 0.0924002 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14600, train error: 0.0924393 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14650, train error: 0.0923923 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14700, train error: 0.0923669 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14750, train error: 0.0924675 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14800, train error: 0.0924269 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14850, train error: 0.0925259 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14900, train error: 0.0924272 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 14950, train error: 0.092472 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15000, train error: 0.0923083 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15050, train error: 0.0924628 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15100, train error: 0.0924174 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15150, train error: 0.0923805 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15200, train error: 0.0922893 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15250, train error: 0.0923807 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15300, train error: 0.0923589 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15350, train error: 0.0923818 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15400, train error: 0.0924364 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15450, train error: 0.0923781 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15500, train error: 0.0923449 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15550, train error: 0.0923365 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15600, train error: 0.0923701 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15650, train error: 0.0924906 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15700, train error: 0.0927263 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15750, train error: 0.0924503 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15800, train error: 0.0923807 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15850, train error: 0.0923692 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15900, train error: 0.0923346 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 15950, train error: 0.0924608 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16000, train error: 0.0925524 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16050, train error: 0.0923541 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16100, train error: 0.0924197 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16150, train error: 0.0923674 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16200, train error: 0.0924787 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16250, train error: 0.0925019 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16300, train error: 0.0924649 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16350, train error: 0.0923274 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16400, train error: 0.0924409 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16450, train error: 0.0925145 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16500, train error: 0.0924895 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16550, train error: 0.092365 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16600, train error: 0.0924987 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16650, train error: 0.092388 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16700, train error: 0.0925007 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16750, train error: 0.0924782 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16800, train error: 0.0923571 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16850, train error: 0.0925402 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16900, train error: 0.0925445 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 16950, train error: 0.092468 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17000, train error: 0.0924855 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17050, train error: 0.0924939 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17100, train error: 0.0925964 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17150, train error: 0.0924226 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17200, train error: 0.0924229 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17250, train error: 0.0924569 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17300, train error: 0.0924683 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17350, train error: 0.092448 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17400, train error: 0.092406 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17450, train error: 0.092585 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17500, train error: 0.0926541 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17550, train error: 0.0924614 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17600, train error: 0.0925189 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17650, train error: 0.0924425 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17700, train error: 0.0924051 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17750, train error: 0.0924804 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17800, train error: 0.0923757 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17850, train error: 0.0925659 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17900, train error: 0.0924108 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 17950, train error: 0.092479 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18000, train error: 0.0925484 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18050, train error: 0.0925575 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18100, train error: 0.0925764 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18150, train error: 0.0926847 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18200, train error: 0.0926441 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18250, train error: 0.0925229 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18300, train error: 0.0925599 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18350, train error: 0.0925697 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18400, train error: 0.0927186 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18450, train error: 0.0925359 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18500, train error: 0.0924747 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18550, train error: 0.0924921 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18600, train error: 0.0924921 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18650, train error: 0.0925025 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18700, train error: 0.0925515 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18750, train error: 0.0924814 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18800, train error: 0.0924209 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18850, train error: 0.0925865 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18900, train error: 0.0924493 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 18950, train error: 0.0924934 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19000, train error: 0.0924221 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19050, train error: 0.0924346 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19100, train error: 0.0924426 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19150, train error: 0.0925664 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19200, train error: 0.0925772 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19250, train error: 0.0923805 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19300, train error: 0.0926477 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19350, train error: 0.0925973 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19400, train error: 0.0925362 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19450, train error: 0.0924587 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19500, train error: 0.092643 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19550, train error: 0.0924257 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19600, train error: 0.0924373 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19650, train error: 0.0925494 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19700, train error: 0.0923104 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19750, train error: 0.0926181 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19800, train error: 0.0926223 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19850, train error: 0.0924532 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19900, train error: 0.0923871 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 19950, train error: 0.0924892 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20000, train error: 0.092305 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20050, train error: 0.0925545 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20100, train error: 0.0924054 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20150, train error: 0.0926006 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20200, train error: 0.0926408 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20250, train error: 0.0925753 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20300, train error: 0.0924646 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20350, train error: 0.0926393 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20400, train error: 0.0924768 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20450, train error: 0.092582 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20500, train error: 0.0925943 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20550, train error: 0.0924099 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20600, train error: 0.0926119 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20650, train error: 0.0924707 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20700, train error: 0.0925916 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20750, train error: 0.0923915 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20800, train error: 0.0923924 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20850, train error: 0.0925473 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20900, train error: 0.0924828 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 20950, train error: 0.0924618 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 21000, train error: 0.0924895 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 21050, train error: 0.0924595 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 21100, train error: 0.0923858 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
step 21150, train error: 0.0924267 | batch_size(step.eval(),arg.batch_size): 11558,11558 log_learning_rate: -2.516395804518416 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6628827/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1329, in save
    self.last_checkpoints, latest_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 745, in update_checkpoint_state
    text_format.MessageToString(ckpt))
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_NN_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_NN_8D_units14_Adam/hp_stid_85/checkpoint.tmpc10b8d447c3d4c058b9b495484238482
