I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: Tesla K20m
major: 3 minor: 5 memoryClockRate (GHz) 0.7055
pciBusID 0000:08:00.0
Total memory: 4.66GiB
Free memory: 4.59GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K20m, pci bus id: 0000:08:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617426_141.out', 'slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'slurm-6617426_60.out', 'slurm-6617426_161.out', 'slurm-6617426_66.out', 'slurm-6617426_117.out', 'slurm-6617426_136.out', 'slurm-6617426_54.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'slurm-6617548_84.out', 'pickle_file', 'slurm-6617425_154.out', 'slurm-6617426_181.out', 'slurm-6617426_160.out', '1', 'slurm-6617426_142.out', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'slurm-6617426_65.out', 'slurm-6617426_56.out', 'h_add_data_and_mesh.npz', 'slurm-6617548_83.out', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'slurm-6617426_70.out', 'slurm-6617548_78.out', 'slurm-6617426_74.out', 'slurm-6617426_162.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', 'slurm-6617548_86.out', '.swn', 'slurm-6617426_12.out', 'slurm-6617548_80.out', 'slurm-6617425_13.out', 'test_print.py', 'slurm-6617426_123.out', 'slurm-6617426_115.out', 'om_f_8D_single_relu', 'slurm-6617426_116.out', 'slurm-6617426_73.out', 'slurm-6617425_27.out', 'slurm-6617426_53.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'slurm-6617426_134.out', 'slurm-6617426_62.out', 'slurm-6617426_121.out', 'slurm-6617426_122.out', 'slurm-6617426_119.out', 'slurm-6617426_69.out', 'batch_main.py', 'slurm-6617426_127.out', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'slurm-6617548_81.out', 'slurm-6617548_77.out', 'slurm-6617426_68.out', 'os_walk_test', 'slurm-6617426_72.out', 'slurm-6617426_135.out', 'slurm-6617426_159.out', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617426_71.out', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'slurm-6617426_57.out', 'slurm-6617426_143.out', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'slurm-6617426_52.out', 'slurm-6617548_79.out', 'slurm-6617426_58.out', 'output.file', 'slurm-6617426_137.out', 'slurm-6617426_124.out', 'hp_gpu', 'slurm-6617426_144.out', 'slurm-6617425_21.out', 'slurm-6617426_145.out', 'slurm-6617425_167.out', 'my_tf_proj.egg-info', 'slurm-6617426_120.out', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617426_140.out', 'slurm-6617425_3.out', 'slurm-6617548_76.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'slurm-6617426_163.out', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617426_126.out', 'slurm-6617425_22.out', 'slurm-6617548_85.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'slurm-6617548_82.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'slurm-6617426_139.out', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617426_63.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617426_64.out', 'slurm-6617426_146.out', 'slurm-6617426_129.out', 'slurm-6617425_19.out', 'slurm-6617426_167.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'slurm-6617426_128.out', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617426_67.out', 'slurm-6617426_59.out', 'slurm-6617426_177.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'slurm-6617426_61.out', 'slurm-6617426_118.out', 'slurm-6617426_138.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617426_55.out', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
l  2
+++> std mu for inits_C:  [0, 1.3191294439674741]
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 4.55819 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 50, train error: 0.639442 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 100, train error: 0.328943 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 150, train error: 0.135208 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 200, train error: 0.144258 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 250, train error: 0.109923 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 300, train error: 0.110572 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 350, train error: 0.101805 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 400, train error: 0.0992315 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 450, train error: 0.0991282 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 500, train error: 0.0986672 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 550, train error: 0.0981906 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 600, train error: 0.0982789 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 650, train error: 0.0981952 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 700, train error: 0.0978284 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 750, train error: 0.0976179 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 800, train error: 0.0975136 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 850, train error: 0.0974452 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 900, train error: 0.0974771 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 950, train error: 0.0974652 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1000, train error: 0.0975286 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1050, train error: 0.0975215 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1100, train error: 0.0973554 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1150, train error: 0.0973801 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1200, train error: 0.0973341 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1250, train error: 0.0973493 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1300, train error: 0.097364 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1350, train error: 0.0973628 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1400, train error: 0.0973709 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1450, train error: 0.0973567 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1500, train error: 0.0973041 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1550, train error: 0.0971959 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1600, train error: 0.0973069 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1650, train error: 0.0972591 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1700, train error: 0.0972184 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1750, train error: 0.0971698 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1800, train error: 0.0971555 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1850, train error: 0.0970967 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1900, train error: 0.0970196 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 1950, train error: 0.0970754 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2000, train error: 0.0969601 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2050, train error: 0.0970174 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2100, train error: 0.0969645 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2150, train error: 0.096839 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2200, train error: 0.0967604 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2250, train error: 0.0967013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2300, train error: 0.0966698 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2350, train error: 0.0966728 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2400, train error: 0.096635 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2450, train error: 0.0966621 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2500, train error: 0.0966585 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2550, train error: 0.0966083 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2600, train error: 0.0966439 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2650, train error: 0.0965987 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2700, train error: 0.0964779 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2750, train error: 0.0965178 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2800, train error: 0.0964431 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2850, train error: 0.0964585 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2900, train error: 0.0964378 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 2950, train error: 0.0964951 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3000, train error: 0.0963969 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3050, train error: 0.0964064 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3100, train error: 0.0963933 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3150, train error: 0.0964139 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3200, train error: 0.0963984 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3250, train error: 0.0963219 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3300, train error: 0.0963907 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3350, train error: 0.0963464 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3400, train error: 0.0963872 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3450, train error: 0.0963548 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3500, train error: 0.096321 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3550, train error: 0.0963539 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3600, train error: 0.0963407 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3650, train error: 0.0963782 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3700, train error: 0.0963481 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3750, train error: 0.0963963 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3800, train error: 0.0963597 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3850, train error: 0.0963305 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3900, train error: 0.0963497 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 3950, train error: 0.0962992 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4000, train error: 0.0963298 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4050, train error: 0.096354 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4100, train error: 0.0962842 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4150, train error: 0.0964452 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4200, train error: 0.0963896 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4250, train error: 0.0963291 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4300, train error: 0.0963551 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4350, train error: 0.0962721 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4400, train error: 0.0963095 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4450, train error: 0.0963393 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4500, train error: 0.0962972 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4550, train error: 0.096299 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4600, train error: 0.0963714 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4650, train error: 0.0963555 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4700, train error: 0.0962734 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4750, train error: 0.0963017 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4800, train error: 0.0962927 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4850, train error: 0.0962978 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4900, train error: 0.0962996 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 4950, train error: 0.0962452 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5000, train error: 0.0963323 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5050, train error: 0.096308 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5100, train error: 0.0962532 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5150, train error: 0.0962775 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5200, train error: 0.0962158 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5250, train error: 0.0963053 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5300, train error: 0.0962666 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5350, train error: 0.0962556 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5400, train error: 0.0962719 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5450, train error: 0.0963247 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5500, train error: 0.0963072 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5550, train error: 0.0962799 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5600, train error: 0.0962674 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5650, train error: 0.0962807 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5700, train error: 0.0962821 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5750, train error: 0.0962895 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5800, train error: 0.0963321 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5850, train error: 0.0963108 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5900, train error: 0.0962486 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 5950, train error: 0.0962844 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6000, train error: 0.0962785 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6050, train error: 0.0962449 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6100, train error: 0.0963243 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6150, train error: 0.0963063 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6200, train error: 0.0963175 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6250, train error: 0.0962925 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6300, train error: 0.0962383 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6350, train error: 0.0963033 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6400, train error: 0.0962789 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6450, train error: 0.0962561 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6500, train error: 0.0962797 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6550, train error: 0.0962841 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6600, train error: 0.0962504 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6650, train error: 0.0962692 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6700, train error: 0.0962775 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6750, train error: 0.09625 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6800, train error: 0.0962347 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6850, train error: 0.0962433 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6900, train error: 0.0962203 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 6950, train error: 0.0962302 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7000, train error: 0.0962862 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7050, train error: 0.0962961 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7100, train error: 0.0962594 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7150, train error: 0.096251 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7200, train error: 0.0962566 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7250, train error: 0.0962633 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7300, train error: 0.096234 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7350, train error: 0.0962077 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7400, train error: 0.0962273 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7450, train error: 0.0962348 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7500, train error: 0.0962486 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7550, train error: 0.0962235 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7600, train error: 0.096234 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7650, train error: 0.0962674 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7700, train error: 0.0962801 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7750, train error: 0.0962425 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7800, train error: 0.0962317 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7850, train error: 0.0962306 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7900, train error: 0.0962266 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 7950, train error: 0.0962347 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8000, train error: 0.0962341 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8050, train error: 0.0962426 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8100, train error: 0.0962564 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8150, train error: 0.0962624 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8200, train error: 0.0962562 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8250, train error: 0.0962455 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8300, train error: 0.096243 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8350, train error: 0.0962392 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8400, train error: 0.0962259 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8450, train error: 0.0962458 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8500, train error: 0.0962598 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8550, train error: 0.0962563 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8600, train error: 0.0962464 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8650, train error: 0.0962266 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8700, train error: 0.0962402 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8750, train error: 0.0962445 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8800, train error: 0.0962325 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8850, train error: 0.0962389 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8900, train error: 0.0962474 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 8950, train error: 0.0962439 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9000, train error: 0.0962301 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9050, train error: 0.0962225 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9100, train error: 0.0962263 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9150, train error: 0.0962279 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9200, train error: 0.0962366 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9250, train error: 0.0962458 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9300, train error: 0.0962456 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9350, train error: 0.0962334 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9400, train error: 0.0962327 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9450, train error: 0.0962322 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9500, train error: 0.0962418 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9550, train error: 0.0962413 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9600, train error: 0.0962271 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9650, train error: 0.0962092 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9700, train error: 0.096198 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9750, train error: 0.0962015 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9800, train error: 0.096197 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9850, train error: 0.0961984 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9900, train error: 0.0961995 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 9950, train error: 0.0961973 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10000, train error: 0.0961935 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10050, train error: 0.0961934 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10100, train error: 0.0961988 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10150, train error: 0.0962036 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10200, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10250, train error: 0.0961984 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10300, train error: 0.0961977 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10350, train error: 0.0961999 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10400, train error: 0.0961966 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10450, train error: 0.0961923 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10500, train error: 0.0961948 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10550, train error: 0.0961965 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10600, train error: 0.0961975 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10650, train error: 0.0961994 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10700, train error: 0.0962054 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10750, train error: 0.0962114 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10800, train error: 0.0962127 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10850, train error: 0.0962111 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10900, train error: 0.0962091 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 10950, train error: 0.0962088 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11000, train error: 0.0962047 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11050, train error: 0.0962046 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11100, train error: 0.0962046 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11150, train error: 0.0962037 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11200, train error: 0.096201 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11250, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11300, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11350, train error: 0.0962028 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11400, train error: 0.096204 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11450, train error: 0.0962039 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11500, train error: 0.0962046 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11550, train error: 0.0962053 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11600, train error: 0.0962073 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11650, train error: 0.0962095 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11700, train error: 0.0962091 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11750, train error: 0.0962086 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11800, train error: 0.0962075 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11850, train error: 0.0962046 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11900, train error: 0.0962035 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 11950, train error: 0.0962016 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12000, train error: 0.0962006 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12050, train error: 0.096201 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12100, train error: 0.0962017 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12150, train error: 0.096201 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12200, train error: 0.0962014 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12250, train error: 0.0962007 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12300, train error: 0.0961996 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12350, train error: 0.0961993 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12400, train error: 0.0961986 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12450, train error: 0.0961981 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12500, train error: 0.0961977 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12550, train error: 0.0961963 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12600, train error: 0.0961943 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12650, train error: 0.0961938 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12700, train error: 0.0961951 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12750, train error: 0.0961972 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12800, train error: 0.096197 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12850, train error: 0.0961958 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12900, train error: 0.096195 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 12950, train error: 0.0961943 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13000, train error: 0.0961946 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13050, train error: 0.0961957 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13100, train error: 0.0961956 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13150, train error: 0.0961963 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13200, train error: 0.0961973 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13250, train error: 0.0961982 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13300, train error: 0.0961985 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13350, train error: 0.0961987 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13400, train error: 0.0961987 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13450, train error: 0.0961985 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13500, train error: 0.0961988 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13550, train error: 0.0961992 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13600, train error: 0.0961995 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13650, train error: 0.0961996 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13700, train error: 0.0961994 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13750, train error: 0.0961991 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13800, train error: 0.0961992 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13850, train error: 0.096199 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13900, train error: 0.0961989 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 13950, train error: 0.0961984 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14000, train error: 0.096198 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14050, train error: 0.0961984 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14100, train error: 0.0961985 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14150, train error: 0.0961989 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14200, train error: 0.0961992 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14250, train error: 0.0961997 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14300, train error: 0.0961997 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14350, train error: 0.0962 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14400, train error: 0.0962003 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14450, train error: 0.0962005 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14500, train error: 0.0962003 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14550, train error: 0.0962 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14600, train error: 0.0961997 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14650, train error: 0.0961994 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14700, train error: 0.096199 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14750, train error: 0.0961987 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14800, train error: 0.0961987 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14850, train error: 0.096199 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14900, train error: 0.0961991 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 14950, train error: 0.096199 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15000, train error: 0.0961991 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15050, train error: 0.0961994 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15100, train error: 0.0961999 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15150, train error: 0.0962002 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15200, train error: 0.096201 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15250, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15300, train error: 0.0962019 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15350, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15400, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15450, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15500, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15550, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15600, train error: 0.096202 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15650, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15700, train error: 0.0962021 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15750, train error: 0.0962018 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15800, train error: 0.0962016 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15850, train error: 0.0962014 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15900, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 15950, train error: 0.0962011 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16000, train error: 0.096201 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16050, train error: 0.0962009 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16100, train error: 0.0962009 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16150, train error: 0.096201 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16200, train error: 0.0962011 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16250, train error: 0.0962011 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16300, train error: 0.0962011 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16350, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16400, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16450, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16500, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16550, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16600, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16650, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16700, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16750, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16800, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16850, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16900, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 16950, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17000, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17050, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17100, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17150, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17200, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17250, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17300, train error: 0.0962012 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17350, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17400, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17450, train error: 0.0962013 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17500, train error: 0.0962014 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17550, train error: 0.0962014 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17600, train error: 0.0962014 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17650, train error: 0.0962014 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
step 17700, train error: 0.0962014 | batch_size(step.eval(),arg.batch_size): 10913,10913 log_learning_rate: -1.8972265207445722 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6628828/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1329, in save
    self.last_checkpoints, latest_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 745, in update_checkpoint_state
    text_format.MessageToString(ckpt))
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_NN_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_NN_8D_units14_Adam/hp_stid_86/checkpoint.tmpa79dce7a1d0c4e11a1117c2d768670b3
