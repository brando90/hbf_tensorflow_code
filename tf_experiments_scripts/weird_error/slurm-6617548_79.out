I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:81:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:81:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617426_141.out', 'slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'slurm-6617426_60.out', 'slurm-6617426_161.out', 'slurm-6617426_66.out', 'slurm-6617426_117.out', 'slurm-6617426_136.out', 'slurm-6617426_54.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'slurm-6617548_84.out', 'pickle_file', 'slurm-6617425_154.out', 'slurm-6617426_181.out', 'slurm-6617426_160.out', '1', 'slurm-6617426_142.out', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'slurm-6617426_65.out', 'slurm-6617426_56.out', 'h_add_data_and_mesh.npz', 'slurm-6617548_83.out', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'slurm-6617426_70.out', 'slurm-6617548_78.out', 'slurm-6617426_74.out', 'slurm-6617426_162.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', 'slurm-6617548_86.out', '.swn', 'slurm-6617426_12.out', 'slurm-6617548_80.out', 'slurm-6617425_13.out', 'test_print.py', 'slurm-6617426_123.out', 'slurm-6617426_115.out', 'om_f_8D_single_relu', 'slurm-6617426_116.out', 'slurm-6617426_73.out', 'slurm-6617425_27.out', 'slurm-6617426_53.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'slurm-6617426_134.out', 'slurm-6617426_62.out', 'slurm-6617426_121.out', 'slurm-6617426_122.out', 'slurm-6617426_119.out', 'slurm-6617426_69.out', 'batch_main.py', 'slurm-6617426_127.out', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'slurm-6617548_81.out', 'slurm-6617548_77.out', 'slurm-6617426_68.out', 'os_walk_test', 'slurm-6617426_72.out', 'slurm-6617426_135.out', 'slurm-6617426_159.out', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617426_71.out', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'slurm-6617426_57.out', 'slurm-6617426_143.out', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'slurm-6617426_52.out', 'slurm-6617548_79.out', 'slurm-6617426_58.out', 'output.file', 'slurm-6617426_137.out', 'slurm-6617426_124.out', 'hp_gpu', 'slurm-6617426_144.out', 'slurm-6617425_21.out', 'slurm-6617426_145.out', 'slurm-6617425_167.out', 'my_tf_proj.egg-info', 'slurm-6617426_120.out', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617426_140.out', 'slurm-6617425_3.out', 'slurm-6617548_76.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'slurm-6617426_163.out', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617426_126.out', 'slurm-6617425_22.out', 'slurm-6617548_85.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'slurm-6617548_82.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'slurm-6617426_139.out', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617426_63.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617426_64.out', 'slurm-6617426_146.out', 'slurm-6617426_129.out', 'slurm-6617425_19.out', 'slurm-6617426_167.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'slurm-6617426_128.out', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617426_67.out', 'slurm-6617426_59.out', 'slurm-6617426_177.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'slurm-6617426_61.out', 'slurm-6617426_118.out', 'slurm-6617426_138.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617426_55.out', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
l  2
+++> std mu for inits_C:  [0, 2.7979388120820845]
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 40.4235 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 50, train error: 31.2752 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 100, train error: 23.8287 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 150, train error: 17.9513 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 200, train error: 13.4289 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 250, train error: 10.0112 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 300, train error: 7.45724 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 350, train error: 5.57483 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 400, train error: 4.21589 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 450, train error: 3.26591 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 500, train error: 2.62471 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 550, train error: 2.20324 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 600, train error: 1.92697 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 650, train error: 1.73869 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 700, train error: 1.5995 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 750, train error: 1.4856 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 800, train error: 1.38496 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 850, train error: 1.2934 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 900, train error: 1.20989 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 950, train error: 1.13457 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1000, train error: 1.06721 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1050, train error: 1.00702 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1100, train error: 0.953002 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1150, train error: 0.903966 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1200, train error: 0.859306 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1250, train error: 0.818426 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1300, train error: 0.780791 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1350, train error: 0.746096 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1400, train error: 0.714203 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1450, train error: 0.684886 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1500, train error: 0.657787 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1550, train error: 0.632879 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1600, train error: 0.609807 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1650, train error: 0.58845 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1700, train error: 0.568699 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1750, train error: 0.550292 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1800, train error: 0.533027 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1850, train error: 0.516823 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1900, train error: 0.501526 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 1950, train error: 0.487063 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2000, train error: 0.473307 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2050, train error: 0.460164 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2100, train error: 0.447602 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2150, train error: 0.435438 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2200, train error: 0.423742 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2250, train error: 0.412446 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2300, train error: 0.401525 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2350, train error: 0.390915 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2400, train error: 0.380617 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2450, train error: 0.370603 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2500, train error: 0.360866 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2550, train error: 0.351349 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2600, train error: 0.342035 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2650, train error: 0.333022 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2700, train error: 0.324225 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2750, train error: 0.31574 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2800, train error: 0.30739 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2850, train error: 0.299327 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2900, train error: 0.291435 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 2950, train error: 0.283714 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3000, train error: 0.276145 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3050, train error: 0.268759 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3100, train error: 0.261529 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3150, train error: 0.254456 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3200, train error: 0.247552 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3250, train error: 0.240809 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3300, train error: 0.234245 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3350, train error: 0.227766 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3400, train error: 0.221338 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3450, train error: 0.215125 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3500, train error: 0.209102 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3550, train error: 0.203238 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3600, train error: 0.19752 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3650, train error: 0.192102 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3700, train error: 0.18693 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3750, train error: 0.181876 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3800, train error: 0.176955 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3850, train error: 0.172333 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3900, train error: 0.16786 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 3950, train error: 0.163621 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4000, train error: 0.159575 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4050, train error: 0.155679 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4100, train error: 0.152054 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4150, train error: 0.148736 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4200, train error: 0.145573 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4250, train error: 0.142759 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4300, train error: 0.140065 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4350, train error: 0.137561 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4400, train error: 0.135397 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4450, train error: 0.133404 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4500, train error: 0.131426 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4550, train error: 0.129737 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4600, train error: 0.128078 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4650, train error: 0.126636 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4700, train error: 0.125316 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4750, train error: 0.123888 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4800, train error: 0.122688 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4850, train error: 0.12175 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4900, train error: 0.120598 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 4950, train error: 0.119517 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5000, train error: 0.118649 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5050, train error: 0.117842 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5100, train error: 0.116921 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5150, train error: 0.11624 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5200, train error: 0.115567 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5250, train error: 0.114741 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5300, train error: 0.114107 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5350, train error: 0.113451 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5400, train error: 0.112776 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5450, train error: 0.112173 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5500, train error: 0.111682 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5550, train error: 0.11099 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5600, train error: 0.1105 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5650, train error: 0.109996 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5700, train error: 0.109472 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5750, train error: 0.10903 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5800, train error: 0.108543 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5850, train error: 0.10796 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5900, train error: 0.107597 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 5950, train error: 0.107135 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6000, train error: 0.106694 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6050, train error: 0.106341 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6100, train error: 0.105924 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6150, train error: 0.105593 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6200, train error: 0.105185 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6250, train error: 0.104853 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6300, train error: 0.104627 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6350, train error: 0.104163 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6400, train error: 0.103785 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6450, train error: 0.103615 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6500, train error: 0.103173 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6550, train error: 0.102941 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6600, train error: 0.102635 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6650, train error: 0.10238 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6700, train error: 0.102185 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6750, train error: 0.101892 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6800, train error: 0.101867 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6850, train error: 0.101472 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6900, train error: 0.101482 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 6950, train error: 0.101074 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7000, train error: 0.101218 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7050, train error: 0.101028 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7100, train error: 0.100905 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7150, train error: 0.100761 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7200, train error: 0.100649 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7250, train error: 0.100505 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7300, train error: 0.100506 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7350, train error: 0.100305 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7400, train error: 0.100484 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7450, train error: 0.100209 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7500, train error: 0.100265 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7550, train error: 0.100179 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7600, train error: 0.10022 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7650, train error: 0.100279 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7700, train error: 0.100241 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7750, train error: 0.100186 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7800, train error: 0.100176 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7850, train error: 0.100223 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7900, train error: 0.100043 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 7950, train error: 0.100173 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8000, train error: 0.0999122 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8050, train error: 0.100218 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8100, train error: 0.0998443 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8150, train error: 0.0999788 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8200, train error: 0.0999198 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8250, train error: 0.0999497 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8300, train error: 0.0998682 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8350, train error: 0.100014 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8400, train error: 0.0999457 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8450, train error: 0.0999937 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8500, train error: 0.100011 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8550, train error: 0.099896 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8600, train error: 0.100048 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8650, train error: 0.0998533 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8700, train error: 0.0998834 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8750, train error: 0.0998092 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8800, train error: 0.0999541 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8850, train error: 0.0999391 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8900, train error: 0.0999054 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 8950, train error: 0.0999151 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9000, train error: 0.100017 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9050, train error: 0.0997991 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9100, train error: 0.0998526 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9150, train error: 0.100071 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9200, train error: 0.0999814 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9250, train error: 0.099995 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9300, train error: 0.10001 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9350, train error: 0.100168 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9400, train error: 0.100019 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9450, train error: 0.100055 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9500, train error: 0.100251 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9550, train error: 0.100054 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9600, train error: 0.0999951 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9650, train error: 0.100014 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9700, train error: 0.100079 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9750, train error: 0.0999069 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9800, train error: 0.0999014 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9850, train error: 0.100149 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9900, train error: 0.100042 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 9950, train error: 0.0999133 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10000, train error: 0.100077 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10050, train error: 0.1002 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10100, train error: 0.0998928 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10150, train error: 0.100071 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10200, train error: 0.100108 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10250, train error: 0.10021 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10300, train error: 0.100108 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10350, train error: 0.0999758 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10400, train error: 0.10012 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10450, train error: 0.100157 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10500, train error: 0.100074 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10550, train error: 0.100024 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10600, train error: 0.100276 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10650, train error: 0.0999452 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10700, train error: 0.100024 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10750, train error: 0.100362 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10800, train error: 0.100259 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10850, train error: 0.0999607 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10900, train error: 0.100189 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 10950, train error: 0.100225 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11000, train error: 0.100252 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11050, train error: 0.100109 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11100, train error: 0.0999423 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11150, train error: 0.100268 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11200, train error: 0.100285 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11250, train error: 0.100058 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11300, train error: 0.100086 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11350, train error: 0.100237 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11400, train error: 0.100253 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11450, train error: 0.100176 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11500, train error: 0.100092 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11550, train error: 0.100268 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11600, train error: 0.100219 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11650, train error: 0.100129 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11700, train error: 0.100164 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11750, train error: 0.100249 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11800, train error: 0.10028 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11850, train error: 0.100143 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11900, train error: 0.100155 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 11950, train error: 0.100258 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12000, train error: 0.100054 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12050, train error: 0.100271 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12100, train error: 0.100267 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12150, train error: 0.10014 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12200, train error: 0.100262 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12250, train error: 0.100307 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12300, train error: 0.100197 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12350, train error: 0.100092 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12400, train error: 0.100226 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12450, train error: 0.100232 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12500, train error: 0.100269 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12550, train error: 0.100161 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12600, train error: 0.100217 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12650, train error: 0.100198 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12700, train error: 0.10009 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12750, train error: 0.100196 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12800, train error: 0.100353 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12850, train error: 0.100099 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12900, train error: 0.100058 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 12950, train error: 0.100268 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13000, train error: 0.100082 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13050, train error: 0.100231 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13100, train error: 0.100333 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13150, train error: 0.100273 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13200, train error: 0.100319 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13250, train error: 0.100354 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13300, train error: 0.100134 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13350, train error: 0.100256 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13400, train error: 0.100378 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13450, train error: 0.100414 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13500, train error: 0.100222 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13550, train error: 0.100267 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13600, train error: 0.100101 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13650, train error: 0.100259 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13700, train error: 0.100302 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13750, train error: 0.100391 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13800, train error: 0.100279 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13850, train error: 0.100123 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13900, train error: 0.100302 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 13950, train error: 0.100507 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14000, train error: 0.100257 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14050, train error: 0.100094 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14100, train error: 0.100176 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14150, train error: 0.100629 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14200, train error: 0.100164 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14250, train error: 0.100064 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14300, train error: 0.100457 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14350, train error: 0.100287 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14400, train error: 0.100178 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14450, train error: 0.100174 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14500, train error: 0.10056 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14550, train error: 0.10048 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14600, train error: 0.100101 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14650, train error: 0.10036 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14700, train error: 0.100396 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14750, train error: 0.100391 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14800, train error: 0.1002 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14850, train error: 0.100594 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14900, train error: 0.100354 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 14950, train error: 0.10025 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15000, train error: 0.100431 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15050, train error: 0.100399 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15100, train error: 0.100409 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15150, train error: 0.100239 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15200, train error: 0.100212 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15250, train error: 0.100366 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15300, train error: 0.100298 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15350, train error: 0.100452 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15400, train error: 0.100268 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15450, train error: 0.10025 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15500, train error: 0.100325 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15550, train error: 0.100265 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15600, train error: 0.100213 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15650, train error: 0.100436 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15700, train error: 0.100379 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15750, train error: 0.100371 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15800, train error: 0.100237 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15850, train error: 0.100322 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15900, train error: 0.100393 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 15950, train error: 0.100442 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16000, train error: 0.100243 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16050, train error: 0.100376 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16100, train error: 0.100276 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16150, train error: 0.100243 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16200, train error: 0.10029 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16250, train error: 0.100339 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16300, train error: 0.100315 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16350, train error: 0.100491 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16400, train error: 0.100406 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16450, train error: 0.100173 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16500, train error: 0.100446 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16550, train error: 0.100726 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16600, train error: 0.100178 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16650, train error: 0.100324 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16700, train error: 0.100469 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16750, train error: 0.100354 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16800, train error: 0.100437 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16850, train error: 0.100526 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16900, train error: 0.10046 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 16950, train error: 0.100349 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17000, train error: 0.100477 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17050, train error: 0.100518 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17100, train error: 0.100382 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17150, train error: 0.100234 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17200, train error: 0.100259 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17250, train error: 0.100447 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17300, train error: 0.100368 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17350, train error: 0.100207 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17400, train error: 0.100439 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17450, train error: 0.100412 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17500, train error: 0.10032 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17550, train error: 0.100641 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17600, train error: 0.100642 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17650, train error: 0.100216 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17700, train error: 0.100265 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17750, train error: 0.100414 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17800, train error: 0.100255 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17850, train error: 0.100268 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17900, train error: 0.100391 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 17950, train error: 0.100294 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18000, train error: 0.100233 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18050, train error: 0.100205 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18100, train error: 0.100181 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18150, train error: 0.100163 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18200, train error: 0.100068 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18250, train error: 0.100133 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18300, train error: 0.100058 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18350, train error: 0.100009 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18400, train error: 0.100217 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18450, train error: 0.100132 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18500, train error: 0.0999498 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18550, train error: 0.100118 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18600, train error: 0.100112 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18650, train error: 0.0998868 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18700, train error: 0.0999692 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18750, train error: 0.100025 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18800, train error: 0.0999473 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18850, train error: 0.100037 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18900, train error: 0.0999917 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 18950, train error: 0.100057 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19000, train error: 0.1001 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19050, train error: 0.100255 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19100, train error: 0.099923 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19150, train error: 0.0997795 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19200, train error: 0.100079 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19250, train error: 0.100255 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19300, train error: 0.0997966 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19350, train error: 0.0999026 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19400, train error: 0.100282 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19450, train error: 0.100005 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19500, train error: 0.09978 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19550, train error: 0.0999346 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19600, train error: 0.10012 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19650, train error: 0.099802 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19700, train error: 0.0997904 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19750, train error: 0.100079 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19800, train error: 0.0998324 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19850, train error: 0.0998269 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19900, train error: 0.0997473 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 19950, train error: 0.0998082 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20000, train error: 0.0999661 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20050, train error: 0.0998283 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20100, train error: 0.100012 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20150, train error: 0.0997644 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20200, train error: 0.0999838 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20250, train error: 0.100036 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20300, train error: 0.0997324 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20350, train error: 0.0998323 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20400, train error: 0.100147 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20450, train error: 0.0998508 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20500, train error: 0.0999298 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20550, train error: 0.0999441 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20600, train error: 0.0998021 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20650, train error: 0.100089 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20700, train error: 0.0999422 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20750, train error: 0.0997656 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20800, train error: 0.0998896 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20850, train error: 0.100034 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20900, train error: 0.0997739 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
step 20950, train error: 0.0997778 | batch_size(step.eval(),arg.batch_size): 5764,5764 log_learning_rate: -3.4729261184925315 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6628821/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_NN_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_NN_8D_units14_Adam/hp_stid_79/mdl_ckpt.meta.tmpf1ac39b206a04a8788bdba0c89b3b4cc
