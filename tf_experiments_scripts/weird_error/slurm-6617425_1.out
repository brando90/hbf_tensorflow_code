I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:06:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:06:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', '1', 'f2D_krls.py', 'scripts_for_plotting', 'slurm-6617425_20.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'data_om', '.swo', 'slurm-6617425_24.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617425_13.out', 'test_print.py', 'om_f_8D_single_relu', 'slurm-6617425_27.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', '.batch_main.py.swp', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_14.out', 'os_walk_test', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', '__pycache__', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'output.file', 'hp_gpu', 'slurm-6617425_21.out', 'my_tf_proj.egg-info', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617425_23.out', 'krls_plot_errrors_script.py', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_12.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'old_main.py', 'slurm-6617425_5.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.109219 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50, train error: 0.0983249 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 100, train error: 0.0993985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 150, train error: 0.0978455 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 200, train error: 0.0982631 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 250, train error: 0.0976785 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 300, train error: 0.0978466 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 350, train error: 0.0976298 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 400, train error: 0.0976581 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 450, train error: 0.0975879 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 500, train error: 0.0976139 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 550, train error: 0.0975684 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 600, train error: 0.0975655 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 650, train error: 0.0975594 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 700, train error: 0.0975622 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 750, train error: 0.0975501 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 800, train error: 0.0975427 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 850, train error: 0.0975488 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 900, train error: 0.0975482 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 950, train error: 0.0975585 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1000, train error: 0.0975713 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1050, train error: 0.0975863 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1100, train error: 0.0975948 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1150, train error: 0.0975984 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1200, train error: 0.0975968 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1250, train error: 0.0975947 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1300, train error: 0.0976094 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1350, train error: 0.0976187 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1400, train error: 0.0976419 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1450, train error: 0.0976509 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1500, train error: 0.0976539 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1550, train error: 0.0976573 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1600, train error: 0.0976775 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1650, train error: 0.0976922 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1700, train error: 0.0977057 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1750, train error: 0.097728 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1800, train error: 0.0977542 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1850, train error: 0.0977625 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1900, train error: 0.0977677 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 1950, train error: 0.0977578 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2000, train error: 0.0977612 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2050, train error: 0.0977692 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2100, train error: 0.0977755 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2150, train error: 0.0977744 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2200, train error: 0.0977705 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2250, train error: 0.0977742 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2300, train error: 0.0977721 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2350, train error: 0.0977933 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2400, train error: 0.0978015 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2450, train error: 0.0978034 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2500, train error: 0.0978221 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2550, train error: 0.0978406 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2600, train error: 0.0978312 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2650, train error: 0.0978521 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2700, train error: 0.097869 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2750, train error: 0.0978686 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2800, train error: 0.0978837 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2850, train error: 0.0978717 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2900, train error: 0.0978736 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 2950, train error: 0.0978926 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3000, train error: 0.0979208 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3050, train error: 0.0979284 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3100, train error: 0.0979354 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3150, train error: 0.0979427 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3200, train error: 0.0979664 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3250, train error: 0.0979785 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3300, train error: 0.0979777 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3350, train error: 0.097986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3400, train error: 0.0979986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3450, train error: 0.0980182 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3500, train error: 0.0980568 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3550, train error: 0.0980719 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3600, train error: 0.098036 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3650, train error: 0.0980478 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3700, train error: 0.098062 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3750, train error: 0.0980704 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3800, train error: 0.0980912 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3850, train error: 0.0980868 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3900, train error: 0.0980923 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 3950, train error: 0.0980989 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4000, train error: 0.0981064 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4050, train error: 0.098166 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4100, train error: 0.0981792 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4150, train error: 0.0981795 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4200, train error: 0.0981694 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4250, train error: 0.0982178 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4300, train error: 0.0982151 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4350, train error: 0.0981916 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4400, train error: 0.0981991 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4450, train error: 0.0982213 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4500, train error: 0.0982289 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4550, train error: 0.0982266 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4600, train error: 0.0982296 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4650, train error: 0.0982402 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4700, train error: 0.0982613 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4750, train error: 0.0982682 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4800, train error: 0.0982652 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4850, train error: 0.0982634 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4900, train error: 0.0982727 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 4950, train error: 0.0982808 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5000, train error: 0.0983019 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5050, train error: 0.0983208 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5100, train error: 0.0983235 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5150, train error: 0.0983401 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5200, train error: 0.0983565 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5250, train error: 0.0983508 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5300, train error: 0.0983768 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5350, train error: 0.0983748 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5400, train error: 0.0984178 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5450, train error: 0.0984348 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5500, train error: 0.0983882 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5550, train error: 0.0984034 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5600, train error: 0.0984339 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5650, train error: 0.0984295 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5700, train error: 0.0984242 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5750, train error: 0.0984638 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5800, train error: 0.0984838 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5850, train error: 0.098461 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5900, train error: 0.0984617 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 5950, train error: 0.0985104 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6000, train error: 0.0984974 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6050, train error: 0.0985514 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6100, train error: 0.0985128 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6150, train error: 0.0985581 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6200, train error: 0.0985516 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6250, train error: 0.0985597 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6300, train error: 0.0985622 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6350, train error: 0.0985629 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6400, train error: 0.0985757 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6450, train error: 0.0985886 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6500, train error: 0.0985743 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6550, train error: 0.0985688 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6600, train error: 0.0985759 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6650, train error: 0.0985554 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6700, train error: 0.0985797 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6750, train error: 0.0986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6800, train error: 0.0986311 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6850, train error: 0.0986387 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6900, train error: 0.0986568 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 6950, train error: 0.0986733 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7000, train error: 0.0986809 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7050, train error: 0.0986875 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7100, train error: 0.0987031 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7150, train error: 0.0987016 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7200, train error: 0.0986872 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7250, train error: 0.0986889 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7300, train error: 0.098726 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7350, train error: 0.098735 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7400, train error: 0.0987429 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7450, train error: 0.0987605 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7500, train error: 0.0987606 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7550, train error: 0.0987475 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7600, train error: 0.0987907 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7650, train error: 0.0987736 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7700, train error: 0.0988226 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7750, train error: 0.0988535 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7800, train error: 0.0988678 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7850, train error: 0.0988163 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7900, train error: 0.0988335 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 7950, train error: 0.0988298 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8000, train error: 0.0988284 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8050, train error: 0.0988273 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8100, train error: 0.0988622 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8150, train error: 0.0989236 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8200, train error: 0.0988842 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8250, train error: 0.0989275 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8300, train error: 0.0989049 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8350, train error: 0.0989007 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8400, train error: 0.0989298 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8450, train error: 0.098891 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8500, train error: 0.0989179 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8550, train error: 0.0989457 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8600, train error: 0.0989063 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8650, train error: 0.0989069 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8700, train error: 0.0989824 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8750, train error: 0.0989742 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8800, train error: 0.0989835 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8850, train error: 0.0990153 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8900, train error: 0.0989574 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 8950, train error: 0.0989618 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9000, train error: 0.0989796 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9050, train error: 0.0990058 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9100, train error: 0.0990289 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9150, train error: 0.0990385 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9200, train error: 0.0990241 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9250, train error: 0.0990367 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9300, train error: 0.0990566 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9350, train error: 0.0990493 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9400, train error: 0.0990562 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9450, train error: 0.0990683 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9500, train error: 0.0990534 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9550, train error: 0.0990736 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9600, train error: 0.0991094 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9650, train error: 0.0991014 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9700, train error: 0.0991274 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9750, train error: 0.0991039 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9800, train error: 0.0991118 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9850, train error: 0.0991359 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9900, train error: 0.0991107 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 9950, train error: 0.099138 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10000, train error: 0.0991596 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10050, train error: 0.0991355 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10100, train error: 0.0992057 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10150, train error: 0.0992402 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10200, train error: 0.0991651 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10250, train error: 0.0991661 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10300, train error: 0.0991972 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10350, train error: 0.0991829 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10400, train error: 0.0991769 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10450, train error: 0.0991955 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10500, train error: 0.099206 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10550, train error: 0.0992137 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10600, train error: 0.0992234 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10650, train error: 0.099213 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10700, train error: 0.0991996 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10750, train error: 0.0992009 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10800, train error: 0.0992109 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10850, train error: 0.0992259 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10900, train error: 0.0992319 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 10950, train error: 0.099237 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11000, train error: 0.0992331 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11050, train error: 0.099231 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11100, train error: 0.0992314 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11150, train error: 0.099227 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11200, train error: 0.0992336 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11250, train error: 0.0992339 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11300, train error: 0.0992321 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11350, train error: 0.099224 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11400, train error: 0.0992229 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11450, train error: 0.0992299 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11500, train error: 0.0992471 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11550, train error: 0.0992532 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11600, train error: 0.0992284 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11650, train error: 0.099234 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11700, train error: 0.0992436 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11750, train error: 0.0992613 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11800, train error: 0.0992613 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11850, train error: 0.0992576 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11900, train error: 0.0992584 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 11950, train error: 0.0992641 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12000, train error: 0.0992733 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12050, train error: 0.0992776 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12100, train error: 0.0992716 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12150, train error: 0.0992656 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12200, train error: 0.0992669 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12250, train error: 0.0992784 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12300, train error: 0.0992803 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12350, train error: 0.0992667 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12400, train error: 0.0992681 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12450, train error: 0.0992708 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12500, train error: 0.0992868 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12550, train error: 0.0993083 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12600, train error: 0.0993209 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12650, train error: 0.0993195 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12700, train error: 0.0993123 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12750, train error: 0.0992992 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12800, train error: 0.099283 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12850, train error: 0.0992877 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12900, train error: 0.0993045 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 12950, train error: 0.099318 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13000, train error: 0.0993263 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13050, train error: 0.0993234 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13100, train error: 0.0993213 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13150, train error: 0.0993304 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13200, train error: 0.0993319 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13250, train error: 0.0993381 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13300, train error: 0.0993276 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13350, train error: 0.099334 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13400, train error: 0.0993467 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13450, train error: 0.0993556 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13500, train error: 0.0993506 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13550, train error: 0.0993512 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13600, train error: 0.0993578 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13650, train error: 0.0993668 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13700, train error: 0.0993687 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13750, train error: 0.0993457 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13800, train error: 0.099326 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13850, train error: 0.0993282 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13900, train error: 0.0993445 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 13950, train error: 0.099352 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14000, train error: 0.0993612 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14050, train error: 0.0993494 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14100, train error: 0.0993431 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14150, train error: 0.0993525 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14200, train error: 0.0993608 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14250, train error: 0.0993581 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14300, train error: 0.0993598 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14350, train error: 0.0993718 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14400, train error: 0.0993951 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14450, train error: 0.0993946 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14500, train error: 0.0993864 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14550, train error: 0.0993822 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14600, train error: 0.0993891 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14650, train error: 0.0993944 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14700, train error: 0.0993975 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14750, train error: 0.0994035 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14800, train error: 0.0994109 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14850, train error: 0.0994221 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14900, train error: 0.0994227 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 14950, train error: 0.0994238 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15000, train error: 0.0994185 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15050, train error: 0.0994268 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15100, train error: 0.0994268 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15150, train error: 0.0994173 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15200, train error: 0.0994184 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15250, train error: 0.0994193 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15300, train error: 0.099424 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15350, train error: 0.099432 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15400, train error: 0.0994527 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15450, train error: 0.0994604 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15500, train error: 0.0994604 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15550, train error: 0.0994539 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15600, train error: 0.0994558 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15650, train error: 0.0994591 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15700, train error: 0.0994648 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15750, train error: 0.0994794 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15800, train error: 0.0994712 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15850, train error: 0.0994974 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15900, train error: 0.0994907 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 15950, train error: 0.099505 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16000, train error: 0.099496 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16050, train error: 0.0994886 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16100, train error: 0.0994873 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16150, train error: 0.0994878 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16200, train error: 0.0994844 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16250, train error: 0.0994805 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16300, train error: 0.0994873 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16350, train error: 0.0994943 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16400, train error: 0.0994999 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16450, train error: 0.0995128 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16500, train error: 0.0995338 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16550, train error: 0.0995337 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16600, train error: 0.0995314 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16650, train error: 0.0995349 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16700, train error: 0.0995351 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16750, train error: 0.0995449 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16800, train error: 0.099552 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16850, train error: 0.0995549 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16900, train error: 0.0995567 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 16950, train error: 0.0995646 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17000, train error: 0.0995569 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17050, train error: 0.0995469 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17100, train error: 0.0995476 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17150, train error: 0.0995664 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17200, train error: 0.0995862 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17250, train error: 0.099594 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17300, train error: 0.0996119 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17350, train error: 0.0996156 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17400, train error: 0.0996025 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17450, train error: 0.0995933 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17500, train error: 0.0996101 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17550, train error: 0.0996215 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17600, train error: 0.0996273 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17650, train error: 0.0996093 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17700, train error: 0.0996125 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17750, train error: 0.0996121 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17800, train error: 0.0996394 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17850, train error: 0.0996439 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17900, train error: 0.0996428 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 17950, train error: 0.0996437 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18000, train error: 0.09965 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18050, train error: 0.0996598 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18100, train error: 0.0996578 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18150, train error: 0.0996504 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18200, train error: 0.099657 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18250, train error: 0.0996536 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18300, train error: 0.0996588 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18350, train error: 0.099672 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18400, train error: 0.0996766 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18450, train error: 0.0996817 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18500, train error: 0.0996919 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18550, train error: 0.099695 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18600, train error: 0.099674 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18650, train error: 0.0996676 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18700, train error: 0.0996815 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18750, train error: 0.0997022 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18800, train error: 0.0997059 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18850, train error: 0.0997014 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18900, train error: 0.0996891 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 18950, train error: 0.0996934 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19000, train error: 0.0997113 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19050, train error: 0.0997322 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19100, train error: 0.0997409 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19150, train error: 0.0997479 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19200, train error: 0.0997242 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19250, train error: 0.0997194 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19300, train error: 0.0997187 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19350, train error: 0.0997293 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19400, train error: 0.099722 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19450, train error: 0.0997187 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19500, train error: 0.099725 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19550, train error: 0.0997218 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19600, train error: 0.0997278 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19650, train error: 0.0997424 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19700, train error: 0.0997565 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19750, train error: 0.0997811 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19800, train error: 0.099785 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19850, train error: 0.0997702 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19900, train error: 0.0997557 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 19950, train error: 0.0997592 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20000, train error: 0.0997634 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20050, train error: 0.0997776 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20100, train error: 0.0997714 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20150, train error: 0.099781 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20200, train error: 0.0997898 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20250, train error: 0.0997932 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20300, train error: 0.0997922 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20350, train error: 0.0997899 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20400, train error: 0.0997893 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20450, train error: 0.0997951 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20500, train error: 0.0998069 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20550, train error: 0.0998091 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20600, train error: 0.0998057 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20650, train error: 0.0998094 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20700, train error: 0.0998055 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20750, train error: 0.0997968 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20800, train error: 0.0998073 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20850, train error: 0.0998272 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20900, train error: 0.099836 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 20950, train error: 0.0998326 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21000, train error: 0.0998274 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21050, train error: 0.0998234 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21100, train error: 0.0998214 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21150, train error: 0.0998207 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21200, train error: 0.0998195 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21250, train error: 0.099818 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21300, train error: 0.0998189 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21350, train error: 0.0998235 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21400, train error: 0.0998299 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21450, train error: 0.0998323 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21500, train error: 0.0998368 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21550, train error: 0.0998399 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21600, train error: 0.0998401 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21650, train error: 0.09984 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21700, train error: 0.0998407 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21750, train error: 0.0998443 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21800, train error: 0.099851 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21850, train error: 0.0998511 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21900, train error: 0.0998476 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 21950, train error: 0.0998463 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22000, train error: 0.0998463 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22050, train error: 0.0998461 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22100, train error: 0.0998464 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22150, train error: 0.0998477 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22200, train error: 0.0998496 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22250, train error: 0.0998479 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22300, train error: 0.0998487 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22350, train error: 0.0998504 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22400, train error: 0.099852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22450, train error: 0.0998528 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22500, train error: 0.0998528 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22550, train error: 0.0998528 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22600, train error: 0.099852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22650, train error: 0.0998549 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22700, train error: 0.0998577 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22750, train error: 0.0998605 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22800, train error: 0.0998629 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22850, train error: 0.0998601 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22900, train error: 0.0998575 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 22950, train error: 0.099855 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23000, train error: 0.099856 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23050, train error: 0.0998571 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23100, train error: 0.0998561 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23150, train error: 0.0998581 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23200, train error: 0.0998616 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23250, train error: 0.0998638 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23300, train error: 0.0998659 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23350, train error: 0.0998655 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23400, train error: 0.0998634 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23450, train error: 0.0998663 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23500, train error: 0.099869 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23550, train error: 0.0998694 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23600, train error: 0.0998676 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23650, train error: 0.0998672 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23700, train error: 0.0998645 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23750, train error: 0.0998626 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23800, train error: 0.0998633 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23850, train error: 0.0998679 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23900, train error: 0.0998674 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 23950, train error: 0.0998666 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24000, train error: 0.0998662 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24050, train error: 0.0998686 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24100, train error: 0.0998709 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24150, train error: 0.0998714 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24200, train error: 0.0998696 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24250, train error: 0.0998707 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24300, train error: 0.099872 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24350, train error: 0.0998732 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24400, train error: 0.0998725 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24450, train error: 0.0998746 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24500, train error: 0.0998768 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24550, train error: 0.0998782 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24600, train error: 0.0998798 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24650, train error: 0.0998812 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24700, train error: 0.0998806 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24750, train error: 0.0998806 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24800, train error: 0.099881 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24850, train error: 0.0998825 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24900, train error: 0.0998856 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 24950, train error: 0.0998906 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25000, train error: 0.0998899 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25050, train error: 0.0998922 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25100, train error: 0.0998881 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25150, train error: 0.099889 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25200, train error: 0.0998965 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25250, train error: 0.0998986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25300, train error: 0.0998997 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25350, train error: 0.099898 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25400, train error: 0.0998959 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25450, train error: 0.0998947 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25500, train error: 0.0998929 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25550, train error: 0.0998931 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25600, train error: 0.0998964 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25650, train error: 0.099899 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25700, train error: 0.0999013 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25750, train error: 0.0999049 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25800, train error: 0.0999051 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25850, train error: 0.0999033 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25900, train error: 0.0999013 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 25950, train error: 0.0999006 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26000, train error: 0.0998999 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26050, train error: 0.0998975 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26100, train error: 0.0998943 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26150, train error: 0.0998953 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26200, train error: 0.0998954 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26250, train error: 0.0998963 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26300, train error: 0.0998984 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26350, train error: 0.0999013 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26400, train error: 0.099901 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26450, train error: 0.0998985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26500, train error: 0.099896 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26550, train error: 0.0998973 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26600, train error: 0.0998994 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26650, train error: 0.0998999 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26700, train error: 0.099902 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26750, train error: 0.0999016 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26800, train error: 0.0999022 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26850, train error: 0.0999031 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26900, train error: 0.099904 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 26950, train error: 0.099904 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27000, train error: 0.0999006 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27050, train error: 0.0999009 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27100, train error: 0.099905 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27150, train error: 0.0999091 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27200, train error: 0.0999092 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27250, train error: 0.0999067 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27300, train error: 0.0999059 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27350, train error: 0.0999066 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27400, train error: 0.0999078 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27450, train error: 0.0999089 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27500, train error: 0.0999085 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27550, train error: 0.0999058 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27600, train error: 0.0999054 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27650, train error: 0.0999063 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27700, train error: 0.0999049 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27750, train error: 0.0999052 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27800, train error: 0.0999073 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27850, train error: 0.0999099 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27900, train error: 0.0999128 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 27950, train error: 0.0999146 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28000, train error: 0.0999163 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28050, train error: 0.0999175 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28100, train error: 0.0999195 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28150, train error: 0.0999199 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28200, train error: 0.0999184 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28250, train error: 0.0999164 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28300, train error: 0.0999161 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28350, train error: 0.0999181 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28400, train error: 0.0999193 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28450, train error: 0.0999213 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28500, train error: 0.0999229 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28550, train error: 0.0999223 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28600, train error: 0.0999256 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28650, train error: 0.0999277 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28700, train error: 0.0999318 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28750, train error: 0.0999315 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28800, train error: 0.0999354 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28850, train error: 0.0999396 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28900, train error: 0.0999415 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 28950, train error: 0.0999454 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29000, train error: 0.0999385 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29050, train error: 0.0999376 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29100, train error: 0.0999398 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29150, train error: 0.0999444 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29200, train error: 0.0999422 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29250, train error: 0.0999364 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29300, train error: 0.0999323 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29350, train error: 0.0999286 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29400, train error: 0.0999287 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29450, train error: 0.0999286 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29500, train error: 0.0999287 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29550, train error: 0.0999299 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29600, train error: 0.0999325 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29650, train error: 0.0999368 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29700, train error: 0.0999399 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29750, train error: 0.0999447 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29800, train error: 0.0999479 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29850, train error: 0.0999451 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29900, train error: 0.0999452 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 29950, train error: 0.0999457 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30000, train error: 0.099946 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30050, train error: 0.0999459 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30100, train error: 0.099944 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30150, train error: 0.0999429 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30200, train error: 0.0999423 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30250, train error: 0.0999432 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30300, train error: 0.0999476 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30350, train error: 0.0999497 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30400, train error: 0.0999474 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30450, train error: 0.0999476 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30500, train error: 0.0999505 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30550, train error: 0.0999529 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30600, train error: 0.0999533 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30650, train error: 0.0999487 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30700, train error: 0.0999458 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30750, train error: 0.0999452 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30800, train error: 0.0999471 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30850, train error: 0.0999501 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30900, train error: 0.0999493 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 30950, train error: 0.0999522 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31000, train error: 0.0999569 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31050, train error: 0.0999577 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31100, train error: 0.0999546 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31150, train error: 0.0999576 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31200, train error: 0.0999589 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31250, train error: 0.0999597 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31300, train error: 0.0999597 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31350, train error: 0.0999574 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31400, train error: 0.099956 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31450, train error: 0.0999549 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31500, train error: 0.0999552 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31550, train error: 0.0999558 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31600, train error: 0.0999565 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31650, train error: 0.0999572 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31700, train error: 0.0999573 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31750, train error: 0.0999572 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31800, train error: 0.0999571 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31850, train error: 0.0999569 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31900, train error: 0.0999573 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 31950, train error: 0.0999576 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32000, train error: 0.0999572 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32050, train error: 0.0999572 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32100, train error: 0.0999583 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32150, train error: 0.0999586 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32200, train error: 0.0999586 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32250, train error: 0.0999588 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32300, train error: 0.0999589 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32350, train error: 0.0999589 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32400, train error: 0.0999591 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32450, train error: 0.0999589 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32500, train error: 0.0999594 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32550, train error: 0.0999604 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32600, train error: 0.0999608 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32650, train error: 0.0999611 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32700, train error: 0.0999607 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32750, train error: 0.0999602 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32800, train error: 0.0999591 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32850, train error: 0.0999589 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32900, train error: 0.0999583 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 32950, train error: 0.0999577 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33000, train error: 0.0999573 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33050, train error: 0.0999569 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33100, train error: 0.0999571 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33150, train error: 0.0999568 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33200, train error: 0.0999562 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33250, train error: 0.0999557 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33300, train error: 0.0999561 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33350, train error: 0.0999562 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33400, train error: 0.0999555 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33450, train error: 0.0999549 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33500, train error: 0.0999553 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33550, train error: 0.099956 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33600, train error: 0.0999565 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33650, train error: 0.0999572 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33700, train error: 0.0999583 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33750, train error: 0.0999596 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33800, train error: 0.0999602 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33850, train error: 0.0999607 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33900, train error: 0.0999609 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 33950, train error: 0.0999609 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34000, train error: 0.0999599 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34050, train error: 0.0999593 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34100, train error: 0.0999594 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34150, train error: 0.0999602 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34200, train error: 0.0999608 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34250, train error: 0.0999602 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34300, train error: 0.0999605 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34350, train error: 0.0999606 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34400, train error: 0.0999603 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34450, train error: 0.0999601 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34500, train error: 0.0999596 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34550, train error: 0.0999599 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34600, train error: 0.0999599 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34650, train error: 0.0999595 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34700, train error: 0.0999589 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34750, train error: 0.099959 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34800, train error: 0.0999598 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34850, train error: 0.0999608 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34900, train error: 0.0999615 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 34950, train error: 0.0999618 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35000, train error: 0.0999612 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35050, train error: 0.0999603 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35100, train error: 0.0999596 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35150, train error: 0.09996 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35200, train error: 0.0999604 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35250, train error: 0.0999611 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35300, train error: 0.099962 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35350, train error: 0.0999623 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35400, train error: 0.0999625 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35450, train error: 0.0999635 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35500, train error: 0.0999644 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35550, train error: 0.099965 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35600, train error: 0.0999648 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35650, train error: 0.0999642 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35700, train error: 0.0999641 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35750, train error: 0.0999653 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35800, train error: 0.0999663 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35850, train error: 0.0999664 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35900, train error: 0.0999659 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 35950, train error: 0.0999658 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36000, train error: 0.0999657 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36050, train error: 0.0999658 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36100, train error: 0.0999661 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36150, train error: 0.0999667 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36200, train error: 0.0999668 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36250, train error: 0.0999662 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36300, train error: 0.0999658 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36350, train error: 0.0999657 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36400, train error: 0.0999656 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36450, train error: 0.0999665 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36500, train error: 0.0999675 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36550, train error: 0.0999676 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36600, train error: 0.0999673 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36650, train error: 0.0999669 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36700, train error: 0.0999667 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36750, train error: 0.0999672 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36800, train error: 0.0999677 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36850, train error: 0.0999683 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36900, train error: 0.0999691 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 36950, train error: 0.0999696 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37000, train error: 0.0999695 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37050, train error: 0.0999697 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37100, train error: 0.0999706 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37150, train error: 0.0999709 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37200, train error: 0.0999706 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37250, train error: 0.0999703 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37300, train error: 0.0999709 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37350, train error: 0.0999715 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37400, train error: 0.0999714 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37450, train error: 0.0999714 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37500, train error: 0.0999721 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37550, train error: 0.0999724 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37600, train error: 0.0999724 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37650, train error: 0.0999717 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37700, train error: 0.0999711 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37750, train error: 0.0999705 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37800, train error: 0.0999701 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37850, train error: 0.0999701 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37900, train error: 0.0999704 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 37950, train error: 0.0999699 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38000, train error: 0.0999695 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38050, train error: 0.0999692 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38100, train error: 0.0999688 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38150, train error: 0.0999688 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38200, train error: 0.0999685 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38250, train error: 0.099968 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38300, train error: 0.0999677 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38350, train error: 0.0999676 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38400, train error: 0.0999678 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38450, train error: 0.0999684 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38500, train error: 0.0999685 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38550, train error: 0.099968 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38600, train error: 0.0999686 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38650, train error: 0.0999694 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38700, train error: 0.0999698 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38750, train error: 0.0999704 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38800, train error: 0.0999708 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38850, train error: 0.0999715 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38900, train error: 0.0999713 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 38950, train error: 0.0999706 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39000, train error: 0.0999708 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39050, train error: 0.0999714 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39100, train error: 0.0999717 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39150, train error: 0.0999715 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39200, train error: 0.0999713 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39250, train error: 0.099971 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39300, train error: 0.0999712 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39350, train error: 0.0999722 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39400, train error: 0.099973 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39450, train error: 0.0999737 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39500, train error: 0.0999738 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39550, train error: 0.0999735 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39600, train error: 0.0999738 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39650, train error: 0.099973 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39700, train error: 0.0999729 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39750, train error: 0.0999736 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39800, train error: 0.0999736 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39850, train error: 0.0999742 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39900, train error: 0.0999748 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 39950, train error: 0.099975 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40000, train error: 0.0999748 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40050, train error: 0.0999747 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40100, train error: 0.0999746 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40150, train error: 0.0999745 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40200, train error: 0.0999752 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40250, train error: 0.0999756 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40300, train error: 0.0999756 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40350, train error: 0.0999757 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40400, train error: 0.0999759 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40450, train error: 0.0999762 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40500, train error: 0.0999766 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40550, train error: 0.0999769 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40600, train error: 0.0999763 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40650, train error: 0.0999762 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40700, train error: 0.0999771 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40750, train error: 0.0999777 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40800, train error: 0.0999777 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40850, train error: 0.0999776 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40900, train error: 0.0999781 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 40950, train error: 0.0999787 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41000, train error: 0.0999781 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41050, train error: 0.0999776 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41100, train error: 0.0999781 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41150, train error: 0.0999789 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41200, train error: 0.0999788 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41250, train error: 0.0999788 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41300, train error: 0.0999785 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41350, train error: 0.0999783 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41400, train error: 0.0999788 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41450, train error: 0.099979 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41500, train error: 0.0999791 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41550, train error: 0.0999798 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41600, train error: 0.0999803 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41650, train error: 0.0999803 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41700, train error: 0.0999804 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41750, train error: 0.099981 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41800, train error: 0.0999819 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41850, train error: 0.0999818 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41900, train error: 0.0999814 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 41950, train error: 0.0999815 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42000, train error: 0.0999815 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42050, train error: 0.0999817 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42100, train error: 0.0999818 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42150, train error: 0.0999819 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42200, train error: 0.0999821 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42250, train error: 0.0999823 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42300, train error: 0.0999823 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42350, train error: 0.0999823 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42400, train error: 0.0999826 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42450, train error: 0.0999828 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42500, train error: 0.0999831 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42550, train error: 0.0999832 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42600, train error: 0.0999832 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42650, train error: 0.0999832 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42700, train error: 0.0999832 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42750, train error: 0.0999833 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42800, train error: 0.0999833 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42850, train error: 0.0999833 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42900, train error: 0.099983 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 42950, train error: 0.099983 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43000, train error: 0.099983 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43050, train error: 0.0999831 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43100, train error: 0.0999832 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43150, train error: 0.0999831 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43200, train error: 0.0999828 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43250, train error: 0.0999826 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43300, train error: 0.0999823 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43350, train error: 0.0999822 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43400, train error: 0.0999823 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43450, train error: 0.0999824 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43500, train error: 0.0999825 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43550, train error: 0.0999824 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43600, train error: 0.0999825 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43650, train error: 0.0999826 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43700, train error: 0.0999826 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43750, train error: 0.0999825 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43800, train error: 0.0999824 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43850, train error: 0.0999825 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43900, train error: 0.0999825 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 43950, train error: 0.0999826 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44000, train error: 0.0999826 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44050, train error: 0.0999824 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44100, train error: 0.0999824 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44150, train error: 0.0999823 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44200, train error: 0.0999823 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44250, train error: 0.0999823 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44300, train error: 0.0999823 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44350, train error: 0.0999824 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44400, train error: 0.0999826 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44450, train error: 0.0999827 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44500, train error: 0.0999829 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44550, train error: 0.099983 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44600, train error: 0.0999833 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44650, train error: 0.0999835 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44700, train error: 0.0999836 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44750, train error: 0.0999836 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44800, train error: 0.0999834 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44850, train error: 0.0999833 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44900, train error: 0.0999833 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 44950, train error: 0.0999834 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45000, train error: 0.0999834 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45050, train error: 0.0999834 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45100, train error: 0.0999834 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45150, train error: 0.0999835 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45200, train error: 0.0999836 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45250, train error: 0.0999837 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45300, train error: 0.0999838 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45350, train error: 0.0999837 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45400, train error: 0.0999839 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45450, train error: 0.099984 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45500, train error: 0.0999841 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45550, train error: 0.0999839 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45600, train error: 0.0999839 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45650, train error: 0.099984 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45700, train error: 0.0999841 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45750, train error: 0.099984 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45800, train error: 0.0999841 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45850, train error: 0.0999842 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45900, train error: 0.0999842 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 45950, train error: 0.0999842 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46000, train error: 0.0999845 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46050, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46100, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46150, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46200, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46250, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46300, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46350, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46400, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46450, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46500, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46550, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46600, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46650, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46700, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46750, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46800, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46850, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46900, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 46950, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47000, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47050, train error: 0.099985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47100, train error: 0.0999851 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47150, train error: 0.0999852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47200, train error: 0.0999852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47250, train error: 0.0999851 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47300, train error: 0.0999852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47350, train error: 0.0999852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47400, train error: 0.0999852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47450, train error: 0.0999851 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47500, train error: 0.0999852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47550, train error: 0.0999851 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47600, train error: 0.099985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47650, train error: 0.099985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47700, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47750, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47800, train error: 0.0999845 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47850, train error: 0.0999845 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47900, train error: 0.0999845 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 47950, train error: 0.0999845 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48000, train error: 0.0999845 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48050, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48100, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48150, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48200, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48250, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48300, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48350, train error: 0.0999846 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48400, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48450, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48500, train error: 0.0999846 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48550, train error: 0.0999846 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48600, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48650, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48700, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48750, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48800, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48850, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48900, train error: 0.0999846 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 48950, train error: 0.0999844 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49000, train error: 0.0999843 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49050, train error: 0.0999843 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49100, train error: 0.0999845 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49150, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49200, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49250, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49300, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49350, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49400, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49450, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49500, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49550, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49600, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49650, train error: 0.0999847 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49700, train error: 0.0999848 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49750, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49800, train error: 0.0999849 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49850, train error: 0.099985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49900, train error: 0.099985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 49950, train error: 0.099985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50000, train error: 0.099985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50050, train error: 0.099985 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50100, train error: 0.0999851 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50150, train error: 0.0999852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50200, train error: 0.0999852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50250, train error: 0.0999852 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50300, train error: 0.0999853 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50350, train error: 0.0999853 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50400, train error: 0.0999856 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50450, train error: 0.0999857 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50500, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50550, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50600, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50650, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50700, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50750, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50800, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50850, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50900, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 50950, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51000, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51050, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51100, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51150, train error: 0.0999858 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51200, train error: 0.0999857 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51250, train error: 0.0999857 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51300, train error: 0.0999857 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51350, train error: 0.0999857 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51400, train error: 0.0999858 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51450, train error: 0.0999857 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51500, train error: 0.0999856 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51550, train error: 0.0999856 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51600, train error: 0.0999857 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51650, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51700, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51750, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51800, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51850, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51900, train error: 0.0999863 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 51950, train error: 0.0999864 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52000, train error: 0.0999864 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52050, train error: 0.0999864 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52100, train error: 0.0999862 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52150, train error: 0.0999862 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52200, train error: 0.0999862 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52250, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52300, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52350, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52400, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52450, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52500, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52550, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52600, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52650, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52700, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52750, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52800, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52850, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52900, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 52950, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53000, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53050, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53100, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53150, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53200, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53250, train error: 0.0999861 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53300, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53350, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53400, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53450, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53500, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53550, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53600, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53650, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53700, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53750, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53800, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53850, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53900, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 53950, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54000, train error: 0.099986 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54050, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54100, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54150, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54200, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54250, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54300, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54350, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54400, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54450, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54500, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54550, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54600, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54650, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54700, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54750, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54800, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54850, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54900, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 54950, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
step 55000, train error: 0.0999859 | batch_size(step.eval(),arg.batch_size): 7909,7909 log_learning_rate: -3.900889092998452 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6617429/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units5_Adam/hp_stid_1/mdl_ckpt.meta.tmp07c258c950604949970a73a0a7aee38f
