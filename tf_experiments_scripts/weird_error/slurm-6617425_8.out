I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: Tesla K20m
major: 3 minor: 5 memoryClockRate (GHz) 0.7055
pciBusID 0000:02:00.0
Total memory: 4.66GiB
Free memory: 4.59GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', '1', 'f2D_krls.py', 'scripts_for_plotting', 'slurm-6617425_20.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'data_om', '.swo', 'slurm-6617425_24.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617425_13.out', 'test_print.py', 'om_f_8D_single_relu', 'slurm-6617425_27.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', '.batch_main.py.swp', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_14.out', 'os_walk_test', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', '__pycache__', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'output.file', 'hp_gpu', 'slurm-6617425_21.out', 'my_tf_proj.egg-info', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617425_23.out', 'krls_plot_errrors_script.py', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_12.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'old_main.py', 'slurm-6617425_5.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.0995488 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 50, train error: 0.0983252 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 100, train error: 0.098546 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 150, train error: 0.0984321 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 200, train error: 0.0984291 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 250, train error: 0.0985206 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 300, train error: 0.0990009 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 350, train error: 0.0993175 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 400, train error: 0.0995682 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 450, train error: 0.0998719 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 500, train error: 0.100035 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 550, train error: 0.100467 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 600, train error: 0.101168 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 650, train error: 0.100965 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 700, train error: 0.101135 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 750, train error: 0.101469 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 800, train error: 0.101671 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 850, train error: 0.10183 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 900, train error: 0.102182 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 950, train error: 0.10261 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1000, train error: 0.103285 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1050, train error: 0.103932 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1100, train error: 0.103867 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1150, train error: 0.104535 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1200, train error: 0.105008 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1250, train error: 0.105231 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1300, train error: 0.105639 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1350, train error: 0.105511 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1400, train error: 0.105614 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1450, train error: 0.105681 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1500, train error: 0.105682 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1550, train error: 0.105781 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1600, train error: 0.106934 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1650, train error: 0.106847 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1700, train error: 0.107142 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1750, train error: 0.107356 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1800, train error: 0.107168 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1850, train error: 0.107566 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1900, train error: 0.107703 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 1950, train error: 0.107419 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2000, train error: 0.107886 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2050, train error: 0.107858 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2100, train error: 0.108354 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2150, train error: 0.108324 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2200, train error: 0.109 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2250, train error: 0.108986 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2300, train error: 0.108401 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2350, train error: 0.109262 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2400, train error: 0.108791 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2450, train error: 0.109569 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2500, train error: 0.110719 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2550, train error: 0.109974 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2600, train error: 0.11012 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2650, train error: 0.110258 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2700, train error: 0.112264 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2750, train error: 0.10986 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2800, train error: 0.110924 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2850, train error: 0.111221 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2900, train error: 0.110544 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 2950, train error: 0.111436 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3000, train error: 0.111949 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3050, train error: 0.111136 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3100, train error: 0.11161 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3150, train error: 0.111619 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3200, train error: 0.111995 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3250, train error: 0.111391 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3300, train error: 0.112359 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3350, train error: 0.1122 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3400, train error: 0.113357 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3450, train error: 0.111866 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3500, train error: 0.112915 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3550, train error: 0.112065 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3600, train error: 0.113024 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3650, train error: 0.112562 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3700, train error: 0.113237 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3750, train error: 0.113267 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3800, train error: 0.113256 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3850, train error: 0.113348 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3900, train error: 0.113832 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 3950, train error: 0.113481 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4000, train error: 0.113888 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4050, train error: 0.113908 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4100, train error: 0.113942 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4150, train error: 0.114066 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4200, train error: 0.116069 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4250, train error: 0.115145 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4300, train error: 0.115067 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4350, train error: 0.114996 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4400, train error: 0.116115 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4450, train error: 0.116961 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4500, train error: 0.11563 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4550, train error: 0.115767 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4600, train error: 0.116384 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4650, train error: 0.11585 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4700, train error: 0.117861 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4750, train error: 0.116662 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4800, train error: 0.116965 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4850, train error: 0.118199 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4900, train error: 0.117927 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 4950, train error: 0.117417 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5000, train error: 0.118208 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5050, train error: 0.117966 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5100, train error: 0.118015 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5150, train error: 0.11874 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5200, train error: 0.119223 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5250, train error: 0.120134 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5300, train error: 0.120054 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5350, train error: 0.119098 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5400, train error: 0.120076 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5450, train error: 0.120618 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5500, train error: 0.12079 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5550, train error: 0.120154 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5600, train error: 0.121939 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5650, train error: 0.121392 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5700, train error: 0.120558 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5750, train error: 0.12165 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5800, train error: 0.121446 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5850, train error: 0.121039 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5900, train error: 0.121781 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 5950, train error: 0.123397 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6000, train error: 0.123302 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6050, train error: 0.122619 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6100, train error: 0.123047 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6150, train error: 0.122801 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6200, train error: 0.122791 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6250, train error: 0.122601 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6300, train error: 0.123189 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6350, train error: 0.122676 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6400, train error: 0.12271 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6450, train error: 0.12397 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6500, train error: 0.124239 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6550, train error: 0.123573 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6600, train error: 0.124153 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6650, train error: 0.123832 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6700, train error: 0.123041 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6750, train error: 0.123646 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6800, train error: 0.124686 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6850, train error: 0.124054 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6900, train error: 0.12425 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 6950, train error: 0.124608 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7000, train error: 0.124405 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7050, train error: 0.12448 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7100, train error: 0.124641 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7150, train error: 0.12602 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7200, train error: 0.125613 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7250, train error: 0.125661 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7300, train error: 0.125159 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7350, train error: 0.126615 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7400, train error: 0.125516 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7450, train error: 0.125477 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7500, train error: 0.126085 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7550, train error: 0.12694 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7600, train error: 0.126257 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7650, train error: 0.126718 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7700, train error: 0.127033 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7750, train error: 0.12634 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7800, train error: 0.127105 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7850, train error: 0.126527 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7900, train error: 0.127118 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 7950, train error: 0.126912 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8000, train error: 0.127457 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8050, train error: 0.127259 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8100, train error: 0.127281 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8150, train error: 0.127778 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8200, train error: 0.127476 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8250, train error: 0.127761 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8300, train error: 0.127605 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8350, train error: 0.128194 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8400, train error: 0.128278 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8450, train error: 0.128151 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8500, train error: 0.128102 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8550, train error: 0.128379 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8600, train error: 0.130179 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8650, train error: 0.128499 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8700, train error: 0.128916 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8750, train error: 0.128612 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8800, train error: 0.129732 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8850, train error: 0.128783 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8900, train error: 0.129362 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 8950, train error: 0.128802 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9000, train error: 0.129036 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9050, train error: 0.129101 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9100, train error: 0.129416 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9150, train error: 0.129008 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9200, train error: 0.129573 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9250, train error: 0.129494 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9300, train error: 0.129823 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9350, train error: 0.130197 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9400, train error: 0.129856 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9450, train error: 0.129981 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9500, train error: 0.130161 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9550, train error: 0.13007 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9600, train error: 0.130645 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9650, train error: 0.130821 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9700, train error: 0.130318 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9750, train error: 0.130652 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9800, train error: 0.131324 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9850, train error: 0.130744 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9900, train error: 0.130488 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 9950, train error: 0.131186 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10000, train error: 0.131088 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10050, train error: 0.131399 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10100, train error: 0.130979 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10150, train error: 0.130865 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10200, train error: 0.130937 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10250, train error: 0.130837 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10300, train error: 0.131155 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10350, train error: 0.131358 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10400, train error: 0.131746 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10450, train error: 0.1315 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10500, train error: 0.131455 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10550, train error: 0.131949 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10600, train error: 0.132116 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10650, train error: 0.132515 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10700, train error: 0.131717 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10750, train error: 0.132193 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10800, train error: 0.13195 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10850, train error: 0.133201 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10900, train error: 0.132996 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 10950, train error: 0.133481 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11000, train error: 0.133239 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11050, train error: 0.132866 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11100, train error: 0.133202 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11150, train error: 0.132794 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11200, train error: 0.132917 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11250, train error: 0.132561 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11300, train error: 0.133887 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11350, train error: 0.134002 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11400, train error: 0.133076 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11450, train error: 0.133486 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11500, train error: 0.133414 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11550, train error: 0.134435 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11600, train error: 0.133665 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11650, train error: 0.133901 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11700, train error: 0.134296 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11750, train error: 0.134218 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11800, train error: 0.133404 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11850, train error: 0.133969 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11900, train error: 0.13455 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 11950, train error: 0.134781 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12000, train error: 0.134231 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12050, train error: 0.13421 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12100, train error: 0.134517 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12150, train error: 0.13491 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12200, train error: 0.135093 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12250, train error: 0.134806 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12300, train error: 0.134755 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12350, train error: 0.134734 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12400, train error: 0.134683 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12450, train error: 0.135235 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12500, train error: 0.13578 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12550, train error: 0.13504 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12600, train error: 0.135292 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12650, train error: 0.135123 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12700, train error: 0.134755 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12750, train error: 0.135053 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12800, train error: 0.13499 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12850, train error: 0.134625 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12900, train error: 0.13535 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 12950, train error: 0.135844 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13000, train error: 0.135792 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13050, train error: 0.134679 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13100, train error: 0.135605 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13150, train error: 0.136316 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13200, train error: 0.135871 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13250, train error: 0.136139 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13300, train error: 0.135477 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13350, train error: 0.136001 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13400, train error: 0.136146 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13450, train error: 0.136158 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13500, train error: 0.136756 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13550, train error: 0.136685 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13600, train error: 0.136242 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13650, train error: 0.135847 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13700, train error: 0.136602 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13750, train error: 0.136014 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13800, train error: 0.136112 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13850, train error: 0.136594 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13900, train error: 0.136632 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 13950, train error: 0.137296 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14000, train error: 0.136918 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14050, train error: 0.136733 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14100, train error: 0.136001 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14150, train error: 0.136284 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14200, train error: 0.136543 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14250, train error: 0.136908 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14300, train error: 0.136439 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14350, train error: 0.13621 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14400, train error: 0.136695 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14450, train error: 0.13635 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14500, train error: 0.135679 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14550, train error: 0.13643 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14600, train error: 0.136994 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14650, train error: 0.137395 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14700, train error: 0.137028 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14750, train error: 0.137165 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14800, train error: 0.137049 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14850, train error: 0.136428 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14900, train error: 0.137244 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 14950, train error: 0.137231 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15000, train error: 0.136844 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15050, train error: 0.13674 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15100, train error: 0.137242 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15150, train error: 0.137335 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15200, train error: 0.136845 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15250, train error: 0.13724 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15300, train error: 0.137241 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15350, train error: 0.137561 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15400, train error: 0.137783 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15450, train error: 0.137342 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15500, train error: 0.137351 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15550, train error: 0.137194 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15600, train error: 0.137187 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15650, train error: 0.138001 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15700, train error: 0.137932 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15750, train error: 0.136614 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15800, train error: 0.136523 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15850, train error: 0.136961 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15900, train error: 0.138974 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 15950, train error: 0.137096 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16000, train error: 0.137 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16050, train error: 0.137462 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16100, train error: 0.138102 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16150, train error: 0.137829 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16200, train error: 0.13722 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16250, train error: 0.137215 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16300, train error: 0.137349 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16350, train error: 0.137208 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16400, train error: 0.13826 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16450, train error: 0.138358 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16500, train error: 0.13751 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16550, train error: 0.137782 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16600, train error: 0.139384 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16650, train error: 0.137913 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16700, train error: 0.137305 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16750, train error: 0.137801 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16800, train error: 0.137636 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16850, train error: 0.137522 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16900, train error: 0.137704 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 16950, train error: 0.138626 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17000, train error: 0.138768 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17050, train error: 0.138496 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17100, train error: 0.138402 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17150, train error: 0.138141 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17200, train error: 0.137608 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17250, train error: 0.137245 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17300, train error: 0.137523 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17350, train error: 0.139016 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17400, train error: 0.138061 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17450, train error: 0.137715 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17500, train error: 0.138454 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17550, train error: 0.137772 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17600, train error: 0.138894 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17650, train error: 0.138278 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17700, train error: 0.138483 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17750, train error: 0.138807 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17800, train error: 0.138664 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17850, train error: 0.138933 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17900, train error: 0.139082 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 17950, train error: 0.139617 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18000, train error: 0.140038 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18050, train error: 0.139913 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18100, train error: 0.139178 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18150, train error: 0.138728 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18200, train error: 0.139317 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18250, train error: 0.13876 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18300, train error: 0.139082 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18350, train error: 0.139423 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18400, train error: 0.140084 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18450, train error: 0.139943 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18500, train error: 0.139572 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18550, train error: 0.139872 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18600, train error: 0.140508 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18650, train error: 0.139212 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18700, train error: 0.140114 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18750, train error: 0.139633 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18800, train error: 0.140194 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18850, train error: 0.140237 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18900, train error: 0.139833 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 18950, train error: 0.139846 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19000, train error: 0.14008 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19050, train error: 0.140546 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19100, train error: 0.140123 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19150, train error: 0.14088 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19200, train error: 0.139954 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19250, train error: 0.139941 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19300, train error: 0.140379 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19350, train error: 0.140366 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19400, train error: 0.140564 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19450, train error: 0.140846 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19500, train error: 0.140874 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19550, train error: 0.140619 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19600, train error: 0.141332 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19650, train error: 0.141332 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19700, train error: 0.141473 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19750, train error: 0.140443 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19800, train error: 0.140473 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19850, train error: 0.140566 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19900, train error: 0.141222 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 19950, train error: 0.14201 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20000, train error: 0.141401 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20050, train error: 0.141034 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20100, train error: 0.140588 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20150, train error: 0.141113 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20200, train error: 0.141278 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20250, train error: 0.140437 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20300, train error: 0.141095 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20350, train error: 0.140053 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20400, train error: 0.141385 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20450, train error: 0.140977 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20500, train error: 0.140619 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20550, train error: 0.140185 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20600, train error: 0.140112 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20650, train error: 0.140012 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20700, train error: 0.140127 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20750, train error: 0.140559 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20800, train error: 0.141621 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20850, train error: 0.14167 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20900, train error: 0.141336 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 20950, train error: 0.141194 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21000, train error: 0.14143 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21050, train error: 0.1414 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21100, train error: 0.141034 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21150, train error: 0.141587 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21200, train error: 0.141587 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21250, train error: 0.141851 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21300, train error: 0.141478 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21350, train error: 0.14182 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21400, train error: 0.142651 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21450, train error: 0.141725 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21500, train error: 0.141244 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21550, train error: 0.140966 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21600, train error: 0.142096 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21650, train error: 0.141849 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21700, train error: 0.141966 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21750, train error: 0.142319 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21800, train error: 0.1415 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21850, train error: 0.14183 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21900, train error: 0.142628 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 21950, train error: 0.141971 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22000, train error: 0.143155 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22050, train error: 0.142636 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22100, train error: 0.14207 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22150, train error: 0.142472 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22200, train error: 0.142107 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22250, train error: 0.141713 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22300, train error: 0.142325 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22350, train error: 0.142665 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22400, train error: 0.143104 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22450, train error: 0.142391 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22500, train error: 0.142697 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22550, train error: 0.143651 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22600, train error: 0.143375 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22650, train error: 0.142662 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22700, train error: 0.142815 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22750, train error: 0.142581 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22800, train error: 0.142554 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22850, train error: 0.143097 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22900, train error: 0.144177 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 22950, train error: 0.143889 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23000, train error: 0.142818 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23050, train error: 0.143448 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23100, train error: 0.143481 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23150, train error: 0.143623 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23200, train error: 0.143835 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23250, train error: 0.143507 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23300, train error: 0.143347 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23350, train error: 0.144332 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23400, train error: 0.143255 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23450, train error: 0.143389 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23500, train error: 0.143952 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23550, train error: 0.144032 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23600, train error: 0.144167 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23650, train error: 0.144912 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23700, train error: 0.143076 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23750, train error: 0.144304 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23800, train error: 0.144427 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23850, train error: 0.144974 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23900, train error: 0.144158 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 23950, train error: 0.144751 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24000, train error: 0.144102 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24050, train error: 0.145051 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24100, train error: 0.144994 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24150, train error: 0.144486 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24200, train error: 0.145268 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24250, train error: 0.145056 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24300, train error: 0.144101 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24350, train error: 0.144462 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24400, train error: 0.145484 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24450, train error: 0.145249 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24500, train error: 0.14561 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24550, train error: 0.146358 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24600, train error: 0.146121 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24650, train error: 0.144925 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24700, train error: 0.145397 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24750, train error: 0.145194 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24800, train error: 0.1444 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24850, train error: 0.145399 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24900, train error: 0.14533 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 24950, train error: 0.145396 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25000, train error: 0.14536 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25050, train error: 0.144881 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25100, train error: 0.144586 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25150, train error: 0.14451 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25200, train error: 0.144936 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25250, train error: 0.145048 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25300, train error: 0.145717 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25350, train error: 0.145361 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25400, train error: 0.145903 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25450, train error: 0.145601 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25500, train error: 0.145852 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25550, train error: 0.146007 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25600, train error: 0.145507 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25650, train error: 0.145552 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25700, train error: 0.145856 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25750, train error: 0.145471 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25800, train error: 0.146004 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25850, train error: 0.145294 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25900, train error: 0.146553 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 25950, train error: 0.145552 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26000, train error: 0.146306 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26050, train error: 0.147325 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26100, train error: 0.146491 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26150, train error: 0.145871 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26200, train error: 0.145726 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26250, train error: 0.146559 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26300, train error: 0.146536 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26350, train error: 0.14725 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26400, train error: 0.14741 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26450, train error: 0.147221 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26500, train error: 0.146579 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26550, train error: 0.146543 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26600, train error: 0.146893 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26650, train error: 0.146496 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26700, train error: 0.146837 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26750, train error: 0.147204 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26800, train error: 0.14685 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26850, train error: 0.146672 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26900, train error: 0.147027 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 26950, train error: 0.14756 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27000, train error: 0.147325 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27050, train error: 0.146765 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27100, train error: 0.148178 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27150, train error: 0.14749 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27200, train error: 0.147061 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27250, train error: 0.147672 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27300, train error: 0.146912 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27350, train error: 0.14799 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27400, train error: 0.146808 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27450, train error: 0.146669 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27500, train error: 0.147315 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27550, train error: 0.147888 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27600, train error: 0.147558 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27650, train error: 0.147397 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27700, train error: 0.147943 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27750, train error: 0.148168 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27800, train error: 0.147214 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27850, train error: 0.148094 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27900, train error: 0.147496 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 27950, train error: 0.14834 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28000, train error: 0.147639 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28050, train error: 0.148371 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28100, train error: 0.147734 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28150, train error: 0.147848 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28200, train error: 0.149561 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28250, train error: 0.147707 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28300, train error: 0.14871 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28350, train error: 0.147902 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28400, train error: 0.14919 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28450, train error: 0.148369 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28500, train error: 0.147745 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28550, train error: 0.147908 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28600, train error: 0.149131 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28650, train error: 0.14794 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28700, train error: 0.148027 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28750, train error: 0.147944 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28800, train error: 0.148357 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28850, train error: 0.148559 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28900, train error: 0.148168 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 28950, train error: 0.147984 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29000, train error: 0.148774 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29050, train error: 0.149725 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29100, train error: 0.148435 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29150, train error: 0.148713 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29200, train error: 0.149032 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29250, train error: 0.149523 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29300, train error: 0.149557 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29350, train error: 0.148587 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29400, train error: 0.149039 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29450, train error: 0.149485 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29500, train error: 0.149671 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29550, train error: 0.148923 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29600, train error: 0.149803 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29650, train error: 0.149129 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29700, train error: 0.149592 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29750, train error: 0.148823 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29800, train error: 0.149761 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29850, train error: 0.150151 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29900, train error: 0.150263 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 29950, train error: 0.149659 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30000, train error: 0.150419 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30050, train error: 0.149685 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30100, train error: 0.150498 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30150, train error: 0.149385 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30200, train error: 0.149982 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30250, train error: 0.150398 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30300, train error: 0.15016 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30350, train error: 0.15023 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30400, train error: 0.150296 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30450, train error: 0.15047 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30500, train error: 0.150059 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30550, train error: 0.150446 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30600, train error: 0.15113 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30650, train error: 0.150077 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30700, train error: 0.150538 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30750, train error: 0.15071 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30800, train error: 0.150673 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30850, train error: 0.151122 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30900, train error: 0.151113 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 30950, train error: 0.150627 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31000, train error: 0.15127 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31050, train error: 0.152143 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31100, train error: 0.15172 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31150, train error: 0.151005 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31200, train error: 0.151013 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31250, train error: 0.150805 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31300, train error: 0.150754 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31350, train error: 0.151069 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31400, train error: 0.150875 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31450, train error: 0.150467 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31500, train error: 0.15048 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31550, train error: 0.150709 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31600, train error: 0.15125 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31650, train error: 0.150626 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31700, train error: 0.151601 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31750, train error: 0.151796 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31800, train error: 0.151988 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31850, train error: 0.151289 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31900, train error: 0.152003 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 31950, train error: 0.151996 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32000, train error: 0.151662 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32050, train error: 0.152256 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32100, train error: 0.152571 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32150, train error: 0.151818 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32200, train error: 0.15224 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32250, train error: 0.151735 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32300, train error: 0.151634 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32350, train error: 0.151849 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32400, train error: 0.151838 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32450, train error: 0.151841 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32500, train error: 0.151369 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32550, train error: 0.152054 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32600, train error: 0.152618 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32650, train error: 0.15296 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32700, train error: 0.15337 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32750, train error: 0.152909 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32800, train error: 0.153165 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32850, train error: 0.152876 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32900, train error: 0.152767 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 32950, train error: 0.152761 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 33000, train error: 0.1528 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 33050, train error: 0.153058 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 33100, train error: 0.152994 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 33150, train error: 0.152726 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 33200, train error: 0.15275 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 33250, train error: 0.153704 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 33300, train error: 0.154122 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
step 33350, train error: 0.153757 | batch_size(step.eval(),arg.batch_size): 2064,2064 log_learning_rate: -3.023040043629773 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6617436/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1329, in save
    self.last_checkpoints, latest_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 745, in update_checkpoint_state
    text_format.MessageToString(ckpt))
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units5_Adam/hp_stid_8/checkpoint.tmp099af44c40af40af92f6e2f8242d53c6
