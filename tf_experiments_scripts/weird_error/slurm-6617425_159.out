I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:06:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:06:00.0)
#!/usr/bin/env python
#!/usr/bin/python
>>> arg.restore =  False
['slurm-6617425_153.out', 'slurm-6617425_16.out', 'job_might_be_cancelled.txt', 'extract_results.py', 'slurm-6617425_8.out', 'f2D_plot_original_func.py', 'get_data_shuffled_coords.py', 'make_to_matlab.py', 'pickle_file', 'slurm-6617425_154.out', '1', 'f2D_krls.py', 'slurm-6617425_148.out', 'scripts_for_plotting', 'slurm-6617425_20.out', 'h_add_data_and_mesh.npz', 'slurm-6617425_7.out', 'data', 'before_vs_after_shuffle.py', 'slurm-6617425_155.out', 'data_om', '.swo', 'slurm-6617425_24.out', 'param_counter.py', 'hp_cpu', 'pca_mnist.py', 'slurm-6617425_157.out', 'slurm-6617425_156.out', 'binary_tree_with_f4d_data_float32.py', '.swn', 'slurm-6617425_13.out', 'test_print.py', 'om_f_8D_single_relu', 'slurm-6617425_27.out', 'slurm-6617425_26.out', 'delete.py', 'slurm-6617425_15.out', 'get_sense_of_data.py', 'om_f_4D_conv_2nd', 'batch_main.py', 'binary_tree_workspace', 'slurm-6617425_160.out', 'slurm-6617425_14.out', 'os_walk_test', 'parser_test.py', 'unit_test_large_hp.py', 'f2D_krls_random.py', 'generate_product_func.py', 'slurm-6617425_158.out', 'slurm-6617425_151.out', '__pycache__', 'plot_graphs.py', 'slurm-6617425_4.out', 'h_gabor_data_and_mesh.npz', 'output.file', 'hp_gpu', 'slurm-6617425_21.out', 'my_tf_proj.egg-info', 'generate_f8d.py', 'om_f_4D_conv_2nd_noise_3_0_25std', 'slurm-6617425_10.out', 'generate_2D_data.py', 'slurm-6617425_2.out', 'slurm-6617425_3.out', 'slurm-6617425_9.out', 'slurm-6617425_1.out', 'binary_tree_with_f4d_data.py', 'extract_results_matplotlib.py', '.swp', 'slurm-6617425_162.out', 'binary_tree_with_f4d_data_hbf_lib_maker.py', 'slurm-6617425_22.out', 'slurm-6617425_152.out', 'slurm-6617425_18.out', 'generate_f4d.py', 'f2D_recursive_krls.py', 'om_f_4D_cos_x2_BT', 'slurm-6617425_17.out', 'slurm-6617425_6.out', 'slurm-6617425_23.out', 'slurm-6617425_161.out', 'krls_plot_errrors_script.py', 'slurm-6617425_19.out', 'local_config.py', 'krls_collect_data.py', 'get_arguments.py', 'krls.py', 'generate_general_D.py', 'slurm-6617425_149.out', 'slurm-6617425_12.out', 'slurm-6617425_28.out', 'slurm-6617425_25.out', 'old_main.py', 'slurm-6617425_5.out', 'slurm-6617425_159.out', 'slurm-6617425_150.out', 'get_new_data_set_with_noise.py', 'get_sense_norm.py', 'slurm-6617425_11.out']
(N_train,D) = (60000,8) 
 (N_test,D_out) = (60000,1) 
arg.beta1 0.99
arg.beta2 0.999
step 0, train error: 0.110865 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 50, train error: 0.0997037 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 100, train error: 0.0985129 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 150, train error: 0.0981249 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 200, train error: 0.0977729 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 250, train error: 0.0977043 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 300, train error: 0.0976528 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 350, train error: 0.097488 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 400, train error: 0.097462 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 450, train error: 0.0974841 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 500, train error: 0.0974226 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 550, train error: 0.0974073 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 600, train error: 0.0973967 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 650, train error: 0.0973995 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 700, train error: 0.0973875 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 750, train error: 0.0973876 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 800, train error: 0.0974 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 850, train error: 0.097404 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 900, train error: 0.097398 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 950, train error: 0.0974053 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1000, train error: 0.0974125 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1050, train error: 0.0974196 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1100, train error: 0.0974221 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1150, train error: 0.0974283 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1200, train error: 0.0974302 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1250, train error: 0.0974449 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1300, train error: 0.0974461 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1350, train error: 0.0974578 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1400, train error: 0.0974651 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1450, train error: 0.0974796 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1500, train error: 0.0974869 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1550, train error: 0.0975075 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1600, train error: 0.0975117 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1650, train error: 0.0975318 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1700, train error: 0.0975235 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1750, train error: 0.0975198 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1800, train error: 0.097516 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1850, train error: 0.0975147 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1900, train error: 0.0975074 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 1950, train error: 0.097517 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2000, train error: 0.0975397 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2050, train error: 0.0975535 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2100, train error: 0.0975469 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2150, train error: 0.0975336 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2200, train error: 0.0975383 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2250, train error: 0.0975309 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2300, train error: 0.0975467 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2350, train error: 0.0975285 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2400, train error: 0.0975436 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2450, train error: 0.097584 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2500, train error: 0.0975782 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2550, train error: 0.0975739 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2600, train error: 0.0975834 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2650, train error: 0.0975892 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2700, train error: 0.0975859 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2750, train error: 0.0975837 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2800, train error: 0.0975809 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2850, train error: 0.0975545 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2900, train error: 0.0975602 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 2950, train error: 0.0975713 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3000, train error: 0.0975677 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3050, train error: 0.0975709 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3100, train error: 0.0976215 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3150, train error: 0.0976222 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3200, train error: 0.0976293 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3250, train error: 0.0976575 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3300, train error: 0.0976206 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3350, train error: 0.0975881 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3400, train error: 0.0976821 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3450, train error: 0.0977405 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3500, train error: 0.0976676 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3550, train error: 0.0977206 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3600, train error: 0.0977177 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3650, train error: 0.0977373 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3700, train error: 0.0977461 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3750, train error: 0.0977454 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3800, train error: 0.0977655 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3850, train error: 0.0977762 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3900, train error: 0.0977907 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 3950, train error: 0.0978278 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4000, train error: 0.0978009 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4050, train error: 0.0977942 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4100, train error: 0.0978731 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4150, train error: 0.0978721 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4200, train error: 0.0978753 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4250, train error: 0.0978393 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4300, train error: 0.0978811 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4350, train error: 0.097904 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4400, train error: 0.0978412 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4450, train error: 0.097827 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4500, train error: 0.0978935 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4550, train error: 0.097877 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4600, train error: 0.097859 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4650, train error: 0.0979087 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4700, train error: 0.0979813 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4750, train error: 0.0979366 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4800, train error: 0.097882 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4850, train error: 0.0979417 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4900, train error: 0.0979983 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 4950, train error: 0.097932 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5000, train error: 0.0979428 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5050, train error: 0.0979779 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5100, train error: 0.0979304 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5150, train error: 0.097954 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5200, train error: 0.0979547 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5250, train error: 0.0979699 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5300, train error: 0.0979597 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5350, train error: 0.0979665 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5400, train error: 0.0979575 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5450, train error: 0.097992 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5500, train error: 0.0979304 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5550, train error: 0.0979305 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5600, train error: 0.0979272 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5650, train error: 0.0979205 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5700, train error: 0.0979019 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5750, train error: 0.0979389 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5800, train error: 0.0980094 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5850, train error: 0.0979693 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5900, train error: 0.0978692 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 5950, train error: 0.0979086 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6000, train error: 0.0979743 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6050, train error: 0.0980531 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6100, train error: 0.0980038 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6150, train error: 0.097991 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6200, train error: 0.098024 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6250, train error: 0.098027 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6300, train error: 0.0979907 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6350, train error: 0.0979822 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6400, train error: 0.0980428 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6450, train error: 0.0980508 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6500, train error: 0.0979811 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6550, train error: 0.0979581 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6600, train error: 0.0980403 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6650, train error: 0.09807 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6700, train error: 0.0980214 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6750, train error: 0.0980502 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6800, train error: 0.0980744 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6850, train error: 0.0980386 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6900, train error: 0.0980444 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 6950, train error: 0.098103 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7000, train error: 0.0981051 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7050, train error: 0.0980558 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7100, train error: 0.0980789 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7150, train error: 0.0981101 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7200, train error: 0.0981162 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7250, train error: 0.0980982 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7300, train error: 0.0981071 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7350, train error: 0.0981049 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7400, train error: 0.0980704 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7450, train error: 0.0980759 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7500, train error: 0.0980801 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7550, train error: 0.0980885 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7600, train error: 0.0980848 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7650, train error: 0.0980948 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7700, train error: 0.0980774 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7750, train error: 0.0981359 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7800, train error: 0.0981422 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7850, train error: 0.0980776 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7900, train error: 0.0980883 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 7950, train error: 0.0981808 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8000, train error: 0.098145 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8050, train error: 0.0981028 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8100, train error: 0.0981656 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8150, train error: 0.0981162 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8200, train error: 0.0981291 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8250, train error: 0.0981476 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8300, train error: 0.0981153 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8350, train error: 0.098198 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8400, train error: 0.0982175 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8450, train error: 0.0982014 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8500, train error: 0.0982231 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8550, train error: 0.0982284 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8600, train error: 0.0983065 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8650, train error: 0.0982461 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8700, train error: 0.0981783 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8750, train error: 0.0982702 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8800, train error: 0.0983043 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8850, train error: 0.0982629 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8900, train error: 0.0982354 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 8950, train error: 0.0983088 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9000, train error: 0.0982292 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9050, train error: 0.0982272 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9100, train error: 0.0982715 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9150, train error: 0.09824 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9200, train error: 0.0982188 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9250, train error: 0.0982022 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9300, train error: 0.0982017 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9350, train error: 0.098244 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9400, train error: 0.0982804 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9450, train error: 0.0982359 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9500, train error: 0.0982522 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9550, train error: 0.0982328 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9600, train error: 0.0982733 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9650, train error: 0.0981962 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9700, train error: 0.0981685 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9750, train error: 0.0980649 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9800, train error: 0.0980353 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9850, train error: 0.0980584 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9900, train error: 0.0980609 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 9950, train error: 0.0980242 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10000, train error: 0.097999 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10050, train error: 0.0980426 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10100, train error: 0.0979977 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10150, train error: 0.0979914 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10200, train error: 0.0980453 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10250, train error: 0.0980162 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10300, train error: 0.0979925 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10350, train error: 0.0980551 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10400, train error: 0.0980159 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10450, train error: 0.0980159 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10500, train error: 0.0980165 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10550, train error: 0.0979663 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10600, train error: 0.098033 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10650, train error: 0.0980671 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10700, train error: 0.0979938 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10750, train error: 0.0979587 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10800, train error: 0.0979748 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10850, train error: 0.0980035 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10900, train error: 0.0980017 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 10950, train error: 0.0980301 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11000, train error: 0.0980417 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11050, train error: 0.0981197 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11100, train error: 0.0980572 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11150, train error: 0.0980419 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11200, train error: 0.0980697 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11250, train error: 0.0981285 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11300, train error: 0.0980073 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11350, train error: 0.0979533 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11400, train error: 0.0980209 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11450, train error: 0.0980968 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11500, train error: 0.0980796 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11550, train error: 0.0980477 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11600, train error: 0.0980975 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11650, train error: 0.0981073 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11700, train error: 0.098118 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11750, train error: 0.0981167 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11800, train error: 0.0981474 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11850, train error: 0.0981596 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11900, train error: 0.0980663 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 11950, train error: 0.0981002 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12000, train error: 0.0981282 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12050, train error: 0.0980749 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12100, train error: 0.0980798 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12150, train error: 0.0980664 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12200, train error: 0.0980475 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12250, train error: 0.0980924 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12300, train error: 0.0981486 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12350, train error: 0.0981312 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12400, train error: 0.0980548 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12450, train error: 0.0981526 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12500, train error: 0.0981974 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12550, train error: 0.0980757 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12600, train error: 0.0980412 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12650, train error: 0.0981549 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12700, train error: 0.0981755 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12750, train error: 0.0980924 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12800, train error: 0.0981542 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12850, train error: 0.0982633 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12900, train error: 0.098162 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 12950, train error: 0.0980985 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13000, train error: 0.0981217 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13050, train error: 0.0981413 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13100, train error: 0.0982144 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13150, train error: 0.0981479 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13200, train error: 0.098177 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13250, train error: 0.0981849 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13300, train error: 0.0982021 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13350, train error: 0.0982614 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13400, train error: 0.0982194 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13450, train error: 0.0982123 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13500, train error: 0.0982173 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13550, train error: 0.0981846 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13600, train error: 0.0981765 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13650, train error: 0.098219 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13700, train error: 0.0982448 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13750, train error: 0.0981803 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13800, train error: 0.0982305 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13850, train error: 0.0982755 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13900, train error: 0.0982604 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 13950, train error: 0.0982685 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14000, train error: 0.0982464 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14050, train error: 0.0982873 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14100, train error: 0.0983359 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14150, train error: 0.0983033 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14200, train error: 0.0982717 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14250, train error: 0.0982948 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14300, train error: 0.0983092 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14350, train error: 0.0982958 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14400, train error: 0.0983137 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14450, train error: 0.0982409 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14500, train error: 0.0982972 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14550, train error: 0.0983679 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14600, train error: 0.0983176 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14650, train error: 0.0982854 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14700, train error: 0.0983116 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14750, train error: 0.098382 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14800, train error: 0.0983621 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14850, train error: 0.0983186 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14900, train error: 0.098257 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 14950, train error: 0.0982585 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15000, train error: 0.098304 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15050, train error: 0.0982728 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15100, train error: 0.098281 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15150, train error: 0.0983334 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15200, train error: 0.0983204 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15250, train error: 0.0983449 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15300, train error: 0.0984076 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15350, train error: 0.0983263 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15400, train error: 0.0983412 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15450, train error: 0.0983524 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15500, train error: 0.0983652 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15550, train error: 0.0984917 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15600, train error: 0.0984001 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15650, train error: 0.0983533 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15700, train error: 0.098375 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15750, train error: 0.0983937 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15800, train error: 0.0984157 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15850, train error: 0.0983714 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15900, train error: 0.0983883 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 15950, train error: 0.0983674 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16000, train error: 0.0983309 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16050, train error: 0.0983371 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16100, train error: 0.0983846 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16150, train error: 0.0983882 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16200, train error: 0.0984007 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16250, train error: 0.0983809 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16300, train error: 0.0983819 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16350, train error: 0.0983735 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16400, train error: 0.0983579 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16450, train error: 0.09837 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16500, train error: 0.0983559 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16550, train error: 0.0983423 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16600, train error: 0.0983561 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16650, train error: 0.0983268 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16700, train error: 0.0983349 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16750, train error: 0.0983679 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16800, train error: 0.0983544 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16850, train error: 0.0983662 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16900, train error: 0.0984115 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 16950, train error: 0.0983965 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17000, train error: 0.0983617 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17050, train error: 0.098337 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17100, train error: 0.098348 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17150, train error: 0.0983478 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17200, train error: 0.0983041 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17250, train error: 0.0983288 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17300, train error: 0.0983881 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17350, train error: 0.0983925 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17400, train error: 0.0983679 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17450, train error: 0.0983633 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17500, train error: 0.0983578 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17550, train error: 0.0983664 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17600, train error: 0.0983297 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17650, train error: 0.0983286 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17700, train error: 0.098317 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17750, train error: 0.0982905 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17800, train error: 0.098303 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17850, train error: 0.0983398 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17900, train error: 0.0983117 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 17950, train error: 0.0983064 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18000, train error: 0.0982962 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18050, train error: 0.0983762 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18100, train error: 0.0983277 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18150, train error: 0.0983405 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18200, train error: 0.0983363 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18250, train error: 0.0983112 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18300, train error: 0.0983172 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18350, train error: 0.0983342 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18400, train error: 0.0983132 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18450, train error: 0.09831 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18500, train error: 0.098345 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18550, train error: 0.0983745 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18600, train error: 0.0983328 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18650, train error: 0.0983355 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18700, train error: 0.0983618 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18750, train error: 0.0983397 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18800, train error: 0.0983111 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18850, train error: 0.0983222 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18900, train error: 0.0983083 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 18950, train error: 0.098283 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19000, train error: 0.0982793 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19050, train error: 0.0983334 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19100, train error: 0.0983349 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19150, train error: 0.0983468 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19200, train error: 0.0983676 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19250, train error: 0.0983599 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19300, train error: 0.0983544 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19350, train error: 0.0983112 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19400, train error: 0.0983243 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19450, train error: 0.0983169 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19500, train error: 0.0983309 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19550, train error: 0.0983574 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19600, train error: 0.0982713 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19650, train error: 0.09828 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19700, train error: 0.0982891 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19750, train error: 0.0982646 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19800, train error: 0.0982694 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19850, train error: 0.0982183 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19900, train error: 0.0981976 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 19950, train error: 0.0982166 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20000, train error: 0.0982452 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20050, train error: 0.0981788 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20100, train error: 0.0981594 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20150, train error: 0.0982039 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20200, train error: 0.0982033 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20250, train error: 0.0982049 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20300, train error: 0.0981684 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20350, train error: 0.0981621 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20400, train error: 0.0982084 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20450, train error: 0.0981224 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20500, train error: 0.0981055 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20550, train error: 0.0981357 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20600, train error: 0.0980817 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20650, train error: 0.0980872 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20700, train error: 0.0981149 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20750, train error: 0.0981142 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20800, train error: 0.0981162 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20850, train error: 0.098122 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20900, train error: 0.0981109 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 20950, train error: 0.0981131 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21000, train error: 0.0981157 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21050, train error: 0.0980842 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21100, train error: 0.0980781 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21150, train error: 0.0980734 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21200, train error: 0.0980819 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21250, train error: 0.0980755 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21300, train error: 0.098071 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21350, train error: 0.0980775 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21400, train error: 0.098055 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21450, train error: 0.0980838 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21500, train error: 0.0980914 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21550, train error: 0.0980843 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21600, train error: 0.0980706 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21650, train error: 0.0980778 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21700, train error: 0.0980834 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21750, train error: 0.0981244 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21800, train error: 0.0981288 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21850, train error: 0.0981291 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21900, train error: 0.0981193 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 21950, train error: 0.0981259 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22000, train error: 0.098132 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22050, train error: 0.0981539 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22100, train error: 0.098181 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22150, train error: 0.0981738 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22200, train error: 0.0982018 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22250, train error: 0.0981733 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22300, train error: 0.098158 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22350, train error: 0.0981849 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22400, train error: 0.0981631 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22450, train error: 0.0981386 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22500, train error: 0.0981743 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22550, train error: 0.0981247 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22600, train error: 0.0980835 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22650, train error: 0.0980923 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22700, train error: 0.0981049 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22750, train error: 0.098098 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22800, train error: 0.0980749 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22850, train error: 0.0980958 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22900, train error: 0.0981416 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 22950, train error: 0.0981268 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23000, train error: 0.0981187 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23050, train error: 0.0980896 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23100, train error: 0.0981105 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23150, train error: 0.0981126 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23200, train error: 0.0980886 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23250, train error: 0.0980889 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23300, train error: 0.098079 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23350, train error: 0.0981147 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23400, train error: 0.0981461 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23450, train error: 0.0981007 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23500, train error: 0.0981269 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23550, train error: 0.0981358 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23600, train error: 0.0981396 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23650, train error: 0.0981239 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23700, train error: 0.0981155 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23750, train error: 0.0981339 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23800, train error: 0.0981115 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23850, train error: 0.0981355 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23900, train error: 0.0981047 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 23950, train error: 0.0981759 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24000, train error: 0.0981439 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24050, train error: 0.0981194 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24100, train error: 0.0981234 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24150, train error: 0.098122 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24200, train error: 0.0981006 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24250, train error: 0.0980927 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24300, train error: 0.0981445 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24350, train error: 0.0981301 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24400, train error: 0.098131 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24450, train error: 0.0981392 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24500, train error: 0.0981598 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24550, train error: 0.0981739 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24600, train error: 0.0981455 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24650, train error: 0.098152 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24700, train error: 0.0981368 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24750, train error: 0.0981456 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24800, train error: 0.0981866 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24850, train error: 0.0981539 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24900, train error: 0.098163 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 24950, train error: 0.0981952 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25000, train error: 0.0981869 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25050, train error: 0.0982101 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25100, train error: 0.0982089 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25150, train error: 0.098187 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25200, train error: 0.0981928 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25250, train error: 0.0981693 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25300, train error: 0.098156 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25350, train error: 0.0981764 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25400, train error: 0.0981605 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25450, train error: 0.0981981 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25500, train error: 0.0981563 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25550, train error: 0.0981591 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25600, train error: 0.0981765 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25650, train error: 0.0982008 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25700, train error: 0.0982047 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25750, train error: 0.0982055 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25800, train error: 0.0981911 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25850, train error: 0.0981593 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25900, train error: 0.0981851 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 25950, train error: 0.098189 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26000, train error: 0.0982165 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26050, train error: 0.0981983 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26100, train error: 0.0981876 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26150, train error: 0.098163 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26200, train error: 0.0981653 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26250, train error: 0.0981633 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26300, train error: 0.0981564 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26350, train error: 0.0981725 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26400, train error: 0.0981698 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
step 26450, train error: 0.0981642 | batch_size(step.eval(),arg.batch_size): 12092,12092 log_learning_rate: -3.7165666369117223 
Traceback (most recent call last):
  File "/home/slurm/slurmd/job6623667/slurm_script", line 572, in <module>
    main_hp.main_hp(arg)
  File "/om/user/brando90/home_simulation_research/hbf_tensorflow_code/my_tf_proj/my_tf_pkg/main_hp.py", line 325, in main_hp
    saver.save(sess=sess,save_path=arg.path_to_ckpt+arg.hp_folder_for_ckpt+arg.prefix_ckpt)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1335, in save
    self.export_meta_graph(meta_graph_filename)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1368, in export_meta_graph
    clear_devices=clear_devices)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1590, in export_meta_graph
    **kwargs)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py", line 651, in export_scoped_meta_graph
    as_text=as_text)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/training/training_util.py", line 148, in write_graph
    file_io.atomic_write_string_to_file(path, graph_def.SerializeToString())
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 350, in atomic_write_string_to_file
    write_string_to_file(temp_pathname, contents)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 249, in write_string_to_file
    f.write(file_content)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 90, in write
    self._prewrite_check()
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/lib/io/file_io.py", line 82, in _prewrite_check
    compat.as_bytes(self.__name), compat.as_bytes(self.__mode), status)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/brando90/.conda/envs/tf_gpu/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.ResourceExhaustedError: ../../all_ckpts/om_f_8D_product_continuous/task_Mar_2_BT_8D_Adam_xavier_relu_N60000_original_setup/job_mdl_folder_BT_8D_units5_Adam/hp_stid_159/mdl_ckpt.meta.tmp5a3f83bf9cee499fa6588af2a093420f
